var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AdminGuard.html",[0,3.357,1,2.577]],["body/guards/AdminGuard.html",[1,3.883,2,4.901,3,0.142,4,0.142,5,0.128,6,4.294,7,0.453,8,1.36,9,6.558,10,5.578,11,5.948,12,0.472,13,4.901,14,0.987,15,0.011,16,0.902,17,0.435,18,0.902,19,3.895,20,1.047,21,3.519,22,0.186,23,1.172,24,3.895,25,0.511,26,0.142,27,0.182,28,4.294,29,2.656,30,2.383,31,4.294,32,2.576,33,4.901,34,7.07,35,4.901,36,4.901,37,7.07,38,4.901,39,3.895,40,1.017,41,2.383,42,4.294,43,3.364,44,4.901,45,4.901,46,2.207,47,4.901,48,4.901,49,4.901,50,4.901,51,0.008,52,0.008]],["title/controllers/AppController.html",[53,1.045,54,3.1]],["body/controllers/AppController.html",[3,0.165,4,0.165,5,0.149,7,0.527,8,1.496,12,0.549,15,0.011,20,1.218,22,0.266,25,0.594,26,0.165,27,0.212,40,1.182,51,0.009,52,0.009,53,1.732,54,5.139,55,1.369,56,4.994,57,6.928,58,1.33,59,5.699,60,0.97,61,4.887,62,4.994,63,1.539,64,2.665,65,5.699]],["title/modules/AppModule.html",[66,0.986,67,3.1]],["body/modules/AppModule.html",[3,0.081,4,0.081,5,0.072,15,0.012,22,0.317,25,0.289,26,0.081,27,0.103,41,1.349,51,0.006,52,0.006,54,3.79,55,1.021,61,4.245,62,2.43,66,1.205,67,6.321,68,1.016,69,1.016,70,1.085,71,1.085,72,1.016,73,2.021,74,1.085,75,2.43,76,2.43,77,2.43,78,4.512,79,4.245,80,4.512,81,4.512,82,4.245,83,4.512,84,4.512,85,4.512,86,4.512,87,4.512,88,4.967,89,4.512,90,4.512,91,4.512,92,4.017,93,4.512,94,4.017,95,1.663,96,1.05,97,1.05,98,2.774,99,3.539,100,2.592,101,2.774,102,2.204,103,1.608,104,2.774,105,2.774,106,5.165,107,2.204,108,3.118,109,2.204,110,2.204,111,2.774,112,2.774,113,2.774,114,2.774,115,2.43,116,2.774,117,2.43,118,2.774,119,2.774,120,2.774,121,2.774,122,2.774,123,4.249,124,2.774,125,2.204,126,2.774,127,2.035,128,2.035,129,2.774,130,2.774,131,2.774,132,2.774,133,2.774,134,2.774,135,2.774,136,3.723,137,2.43,138,2.774,139,4.249,140,4.249]],["title/injectables/AppService.html",[23,0.778,61,2.724]],["body/injectables/AppService.html",[3,0.172,4,0.172,5,0.155,7,0.548,8,1.533,12,0.571,15,0.011,20,1.267,22,0.225,23,1.321,25,0.618,26,0.172,27,0.221,40,1.23,51,0.009,52,0.009,57,7.023,60,0.994,61,4.625,141,2.104,142,5.196,143,5.93,144,5.93,145,5.93]],["title/injectables/AtGuard.html",[23,0.778,108,3.1]],["body/injectables/AtGuard.html",[3,0.146,4,0.146,5,0.131,7,0.464,8,1.382,9,5.668,10,5.668,11,6.004,12,0.623,14,1.303,15,0.011,16,1.191,17,0.573,18,1.191,19,3.992,20,1.073,21,2.777,22,0.272,23,1.191,25,0.523,26,0.146,27,0.187,29,1.783,40,1.342,41,2.443,51,0.008,52,0.008,63,1.357,107,3.992,108,4.746,141,1.783,146,4.402,147,1.575,148,5.023,149,8.003,150,5.023,151,5.023,152,5.023,153,3.442,154,2.655,155,5.023,156,3.686,157,6.468,158,5.023,159,5.023,160,5.023,161,5.023]],["title/injectables/AuthConfig.html",[23,0.778,162,2.449]],["body/injectables/AuthConfig.html",[3,0.137,4,0.137,5,0.123,7,0.437,12,0.738,15,0.011,17,0.616,22,0.18,23,1.145,25,0.493,26,0.137,27,0.176,51,0.008,52,0.008,60,1.091,141,1.678,162,3.605,163,4.143,164,1.68,165,3.134,166,6.948,167,6.088,168,6.948,169,5.522,170,6.088,171,4.239,172,5.254,173,6.218,174,6.218,175,4.728,176,6.218,177,4.728,178,6.218,179,4.728,180,6.218,181,4.728,182,6.218,183,4.728]],["title/controllers/AuthController.html",[53,1.045,184,3.1]],["body/controllers/AuthController.html",[1,1.593,3,0.076,4,0.076,5,0.068,7,0.241,8,0.867,12,0.701,14,1.434,15,0.011,16,1.311,17,0.631,18,1.311,20,1.555,22,0.255,25,0.272,26,0.076,27,0.151,30,1.27,40,1.477,43,2.144,51,0.005,52,0.005,53,0.646,55,0.627,58,1.698,60,1.098,63,0.705,165,2.827,184,2.977,185,2.288,186,1.176,187,2.612,188,3.224,189,2.882,190,2.242,191,3.554,192,3.554,193,3.554,194,3.554,195,3.554,196,3.554,197,2.612,198,2.288,199,2.612,200,3.408,201,1.916,202,2.288,203,5.226,204,2.612,205,2.612,206,3.936,207,2.714,208,2.288,209,2.612,210,2.612,211,2.109,212,2.288,213,2.612,214,2.612,215,2.288,216,2.612,217,2.612,218,2.612,219,2.612,220,2.612,221,2.475,222,2.612,223,2.612,224,2.288,225,2.612,226,2.612,227,3.554,228,2.288,229,2.612,230,2.612,231,2.288,232,4.914,233,2.612,234,2.612,235,1.221,236,2.288,237,1.27,238,2.288,239,1.916,240,1.176,241,1.789,242,1.684,243,1.514,244,2.883,245,1.916,246,2.612,247,0.957,248,2.288,249,2.612,250,2.612,251,2.612,252,2.612,253,2.612,254,2.612,255,2.615,256,2.612,257,2.615,258,4.115,259,2.612,260,2.612,261,2.612,262,2.612,263,2.612,264,2.612,265,2.612,266,2.612,267,2.612,268,2.612,269,2.612,270,2.612,271,2.612,272,2.612,273,2.612,274,2.612,275,2.612,276,2.612,277,2.612,278,2.612,279,2.288,280,2.612,281,1.916,282,2.288,283,2.612,284,2.612]],["title/classes/AuthDto.html",[27,0.157,203,2.895]],["body/classes/AuthDto.html",[3,0.164,4,0.164,5,0.147,7,0.521,12,0.67,15,0.011,17,0.617,22,0.214,26,0.164,27,0.259,51,0.009,52,0.009,58,1.623,60,1.091,164,1.879,203,4.767,211,2.295,247,2.066,285,1.616,286,4.941,287,6.611,288,3.846,289,5.639,290,5.639,291,4.171,292,3.054]],["title/modules/AuthModule.html",[66,0.986,78,2.895]],["body/modules/AuthModule.html",[3,0.136,4,0.136,5,0.122,15,0.011,22,0.304,25,0.487,26,0.136,27,0.174,51,0.008,52,0.008,55,1.483,66,1.612,68,1.712,69,1.712,70,1.829,71,1.829,72,1.712,73,2.703,74,1.829,78,5.768,79,5.059,95,2.414,96,1.769,97,1.769,100,3.764,115,4.095,153,3.202,162,4.549,184,5.069,244,4.549,245,3.429,293,4.095,294,4.673,295,4.095,296,5.059,297,4.673,298,4.673,299,3.429,300,4.673,301,4.673,302,4.673,303,4.673,304,3.429]],["title/injectables/AuthService.html",[23,0.778,244,2.449]],["body/injectables/AuthService.html",[3,0.045,4,0.045,5,0.041,7,0.143,8,0.566,12,0.607,14,1.231,15,0.012,16,1.126,17,0.559,18,1.126,20,1.261,22,0.204,23,0.488,24,2.107,25,0.162,26,0.045,27,0.058,29,2.567,30,0.755,32,2.288,40,1.173,43,2.653,46,3.321,51,0.003,52,0.003,60,0.991,63,0.419,96,0.587,141,0.551,147,0.487,162,3.109,164,0.716,167,1.36,170,1.36,189,2.746,190,1.918,191,2.323,192,2.323,193,2.323,194,2.323,195,2.323,196,2.323,200,2.377,201,1.139,202,2.323,203,4.774,206,3.261,207,2.032,208,2.323,211,2.2,212,2.323,215,2.323,224,2.323,227,2.323,228,2.323,231,2.323,232,3.04,238,1.36,244,1.537,255,2.971,257,2.971,258,3.382,287,5.666,299,1.139,305,1.36,306,3.33,307,3.47,308,2.651,309,2.651,310,1.233,311,1.553,312,3.458,313,2.651,314,1.945,315,2.651,316,1.552,317,3.011,318,1.552,319,2.651,320,1.552,321,1.552,322,1.552,323,1.552,324,1.552,325,1.552,326,1.552,327,4.103,328,2.651,329,1.552,330,1.36,331,5.363,332,5.363,333,1.552,334,2.651,335,1.36,336,1.36,337,1.36,338,1.36,339,0.755,340,1.552,341,5.652,342,1.552,343,1.552,344,5.363,345,2.328,346,5.021,347,5.021,348,1.552,349,1.001,350,5.17,351,1.552,352,5.652,353,2.651,354,6.114,355,5.363,356,2.651,357,5.021,358,1.552,359,1.552,360,4.103,361,4.103,362,1.552,363,4.103,364,1.552,365,4.609,366,2.651,367,1.552,368,1.552,369,1.552,370,1.552,371,1.552,372,2.651,373,2.651,374,1.552,375,3.04,376,1.552,377,1.552,378,1.552,379,1.552,380,2.651,381,1.552,382,1.233,383,1.552,384,1.552,385,1.552,386,3.47,387,1.552,388,1.552,389,1.552,390,1.552,391,3.47,392,1.552,393,2.651,394,1.552,395,1.552,396,1.552,397,1.552,398,1.552,399,1.552,400,1.562,401,1.552,402,1.552,403,1.552,404,1.552,405,1.552,406,1.552,407,2.651,408,1.552,409,2.651,410,0.82,411,2.651,412,2.323,413,1.552,414,0.628,415,0.9]],["title/controllers/ChatController.html",[53,1.045,416,3.1]],["body/controllers/ChatController.html",[3,0.139,4,0.139,5,0.125,7,0.444,8,1.342,12,0.605,14,1.265,15,0.011,16,1.156,17,0.557,18,1.156,20,1.342,22,0.266,25,0.5,26,0.139,27,0.178,40,1.303,51,0.008,52,0.008,53,1.187,55,1.153,58,1.465,60,1.144,63,1.296,165,1.758,186,2.161,211,2.258,243,2.782,416,4.608,417,4.205,418,4.799,419,6.279,420,6.279,421,4.799,422,4.205,423,4.799,424,4.799,425,5.448,426,4.799,427,4.799,428,2.927,429,2.653,430,2.782,431,4.269,432,4.205,433,4.799,434,4.205,435,4.799,436,4.799,437,4.799,438,4.799,439,4.799,440,4.799]],["title/classes/ChatGateway.html",[27,0.157,312,2.724]],["body/classes/ChatGateway.html",[3,0.098,4,0.098,5,0.088,7,0.312,8,1.051,12,0.722,14,1.473,15,0.011,16,1.346,17,0.664,18,1.346,20,1.513,22,0.258,26,0.098,27,0.125,40,1.469,46,1.518,51,0.006,52,0.006,58,1.583,63,0.911,127,2.474,128,2.474,147,1.057,164,1.328,189,2.06,207,1.365,285,0.966,312,3.17,431,4.32,441,2.954,442,6.205,443,4.309,444,4.309,445,4.309,446,4.309,447,4.309,448,4.309,449,3.372,450,4.917,451,5.804,452,4.309,453,6.696,454,3.372,455,4.309,456,3.372,457,4.309,458,4.371,459,4.917,460,3.372,461,3.908,462,4.917,463,6.324,464,3.372,465,3.372,466,5.086,467,4.917,468,3.372,469,3.372,470,4.917,471,3.372,472,3.372,473,3.372,474,4.917,475,2.954,476,3.372,477,2.68,478,3.372,479,2.954,480,3.372,481,3.372,482,3.372,483,3.372,484,3.372,485,3.372,486,2.954,487,2.474,488,2.057,489,2.954,490,3.372,491,3.372,492,3.372,493,3.372,494,3.372,495,3.372,496,3.372,497,3.372]],["title/modules/ChatModule.html",[66,0.986,79,2.724]],["body/modules/ChatModule.html",[3,0.143,4,0.143,5,0.128,15,0.011,22,0.295,25,0.512,26,0.143,27,0.183,51,0.008,52,0.008,55,1.533,66,1.652,68,1.801,69,1.801,70,1.923,71,1.923,72,1.801,73,2.77,74,2.77,79,5.35,92,4.854,95,2.496,96,1.861,97,1.861,100,3.891,110,3.907,312,5.293,416,5.196,431,4.854,432,4.307,498,4.307,499,4.307,500,4.916,501,4.307,502,4.916,503,4.916,504,4.916,505,4.916]],["title/injectables/ChatService.html",[23,0.778,431,2.577]],["body/injectables/ChatService.html",[3,0.054,4,0.054,5,0.049,7,0.172,8,0.659,12,0.63,14,1.277,15,0.012,16,1.204,17,0.562,18,1.167,20,1.306,22,0.209,23,0.568,25,0.194,26,0.054,27,0.069,29,2.559,32,2.715,40,1.268,41,1.923,46,1.781,51,0.004,52,0.004,60,0.879,141,0.659,147,0.967,164,0.833,171,1.027,172,1.273,189,2.719,201,1.363,207,1.249,211,1.676,255,1.198,257,1.198,258,1.363,279,1.628,306,2.7,311,2.21,339,0.904,345,2.753,349,1.198,400,1.389,410,0.982,414,2.567,415,2.67,425,4.284,431,1.882,442,5.116,443,2.703,444,2.703,445,2.703,446,2.703,447,2.703,448,2.703,452,2.703,453,6.713,455,2.703,457,2.703,458,3.155,461,3.66,463,5.555,477,1.477,479,1.628,487,3.749,488,2.809,489,1.628,506,1.477,507,4.284,508,2.452,509,3.085,510,1.858,511,2.546,512,3.085,513,2.703,514,3.085,515,1.858,516,3.085,517,1.858,518,1.858,519,1.858,520,1.858,521,3.085,522,1.858,523,3.085,524,1.858,525,3.085,526,1.858,527,1.477,528,1.858,529,2.452,530,1.628,531,3.085,532,3.085,533,1.858,534,1.858,535,5.109,536,1.858,537,1.858,538,1.477,539,1.858,540,3.955,541,3.466,542,4.605,543,3.466,544,1.858,545,1.858,546,3.085,547,3.955,548,1.858,549,1.061,550,1.858,551,1.858,552,1.858,553,1.858,554,2.114,555,1.858,556,1.858,557,1.858,558,1.628,559,1.477,560,1.858,561,1.858,562,1.858,563,5.51,564,1.628,565,3.085,566,1.273,567,1.628,568,1.858,569,1.858,570,3.085,571,1.858,572,1.858,573,1.858,574,3.955,575,1.363,576,1.858,577,2.703,578,3.085,579,3.085,580,3.085,581,4.605,582,1.628,583,1.628,584,1.198,585,1.477,586,1.628,587,1.628,588,1.858,589,3.955,590,1.858,591,4.605,592,1.858,593,1.858,594,4.605,595,3.955,596,1.858,597,1.134,598,1.858,599,1.858,600,1.858,601,1.858,602,1.858,603,1.858,604,1.858,605,1.858,606,1.273,607,1.858,608,1.858,609,1.858,610,1.858,611,1.858,612,1.858,613,1.858,614,1.858]],["title/classes/CreateExercisesLibraryDto.html",[27,0.157,615,2.724]],["body/classes/CreateExercisesLibraryDto.html",[3,0.131,4,0.131,5,0.118,7,0.419,12,0.749,15,0.011,16,1.252,17,0.69,22,0.23,26,0.131,27,0.225,51,0.008,52,0.008,58,1.815,60,1.118,164,1.632,247,1.659,285,1.298,288,4.011,291,4.299,292,3.06,615,3.896,616,6.957,617,3.599,618,3.943,619,5.96,620,6.181,621,5.96,622,5.96,623,4.529,624,2.446,625,3.323,626,4.529,627,4.529,628,4.529,629,3.595,630,4.529,631,4.529,632,2.202,633,3.34,634,3.103]],["title/classes/CreateFeedbackUserDto.html",[27,0.157,635,2.895]],["body/classes/CreateFeedbackUserDto.html",[3,0.151,4,0.151,5,0.136,7,0.482,12,0.738,15,0.011,17,0.679,22,0.198,26,0.151,27,0.247,51,0.009,52,0.009,58,1.547,60,1.062,164,1.79,247,1.912,285,1.495,288,2.885,291,3.664,292,2.683,414,2.948,549,2.504,624,3.101,634,4.991,635,4.541,636,6.93,637,4.147,638,6.382,639,6.382,640,4.573,641,5.219,642,4.573,643,4.573]],["title/classes/CreateOpenffDto.html",[27,0.157,644,3.1]],["body/classes/CreateOpenffDto.html",[3,0.189,4,0.189,5,0.17,15,0.01,26,0.189,27,0.242,51,0.01,52,0.01,285,1.864,644,5.562,645,5.7,646,5.169]],["title/classes/CreateTicketDto.html",[27,0.157,647,2.895]],["body/classes/CreateTicketDto.html",[3,0.164,4,0.164,5,0.147,7,0.521,12,0.67,15,0.011,17,0.617,22,0.214,26,0.164,27,0.259,51,0.009,52,0.009,58,1.623,60,1.091,164,1.879,247,2.066,285,1.616,292,3.275,566,5.17,647,4.767,648,6.611,649,4.941,650,6.611,651,5.639,652,5.639]],["title/classes/EditInfosDto.html",[27,0.157,653,2.233]],["body/classes/EditInfosDto.html",[3,0.103,4,0.103,5,0.092,7,0.327,12,0.766,15,0.011,17,0.705,18,1.55,21,1.958,22,0.227,26,0.148,27,0.243,51,0.007,52,0.007,58,1.855,60,1.072,164,1.377,211,1.078,247,1.867,285,1.015,292,2.915,618,3.46,624,2.915,629,4.415,632,1.723,633,3.609,653,2.693,654,2.815,655,4.935,656,4.09,657,4.935,658,4.394,659,4.38,660,4.09,661,4.935,662,4.09,663,3.848,664,3.641,665,3.542,666,4.209,667,3.542,668,3.542,669,3.542,670,3.542,671,4.744,672,3.542,673,3.542,674,3.542,675,3.542,676,3.542,677,3.542,678,4.05,679,2.427,680,2.599]],["title/classes/EditInfosDto-1.html",[27,0.131,584,2.274,653,1.864]],["body/classes/EditInfosDto-1.html",[3,0.107,4,0.107,5,0.096,7,0.341,12,0.772,15,0.011,17,0.711,18,1.558,22,0.199,26,0.107,27,0.195,51,0.007,52,0.007,58,1.87,60,1.064,164,1.417,247,1.351,285,1.057,292,2.844,618,3.539,624,2.955,629,4.397,632,1.794,633,3.676,653,2.772,655,5.003,656,4.183,657,5.003,658,4.454,659,4.48,660,4.183,661,5.003,662,4.183,663,3.936,664,3.724,666,4.287,671,4.852,681,3.232,682,3.688,683,3.688,684,3.688,685,3.688,686,3.688,687,3.688,688,3.688,689,3.688,690,3.688,691,3.688,692,3.688]],["title/controllers/ExercisesLibraryController.html",[53,1.045,693,3.1]],["body/controllers/ExercisesLibraryController.html",[3,0.104,4,0.104,5,0.093,7,0.33,8,1.094,12,0.695,14,1.397,15,0.011,16,1.277,17,0.615,18,1.277,20,1.543,22,0.274,25,0.371,26,0.104,27,0.133,40,1.498,51,0.007,52,0.007,53,0.882,55,0.857,58,1.685,60,1.073,63,0.963,64,1.667,165,1.876,186,1.606,190,1.971,235,2.395,237,2.49,410,2.706,428,2.175,429,1.971,549,2.482,606,3.509,615,4.654,620,5.204,632,1.734,693,3.758,694,3.125,695,3.566,696,5.121,697,3.796,698,4.487,699,3.509,700,2.49,701,3.125,702,3.566,703,3.566,704,3.566,705,3.125,706,5.121,707,3.566,708,4.487,709,2.443,710,4.487,711,3.566,712,2.617,713,5.121,714,3.566,715,2.617,716,5.214,717,5.121,718,3.566,719,3.125,720,3.655,721,3.125,722,2.299,723,4.069,724,2.299,725,2.834,726,3.566,727,3.125,728,3.566,729,3.566,730,3.566,731,3.566,732,3.125,733,3.566,734,3.125,735,3.566,736,3.125,737,3.566]],["title/modules/ExercisesLibraryModule.html",[66,0.986,80,2.895]],["body/modules/ExercisesLibraryModule.html",[3,0.16,4,0.16,5,0.144,15,0.011,22,0.284,25,0.573,26,0.16,27,0.205,51,0.009,52,0.009,55,1.647,66,1.742,68,2.017,69,2.017,70,2.154,71,2.154,72,2.017,73,2.92,74,2.154,80,5.613,95,2.682,96,2.083,97,2.083,693,5.477,720,4.998,721,4.823,738,4.823,739,4.823,740,5.504,741,5.504]],["title/injectables/ExercisesLibraryService.html",[23,0.778,720,2.577]],["body/injectables/ExercisesLibraryService.html",[3,0.087,4,0.087,5,0.078,7,0.277,8,0.963,12,0.678,14,1.366,15,0.012,16,1.389,17,0.601,18,1.249,20,1.45,22,0.245,23,0.829,25,0.312,26,0.087,27,0.111,29,2.57,40,1.407,51,0.006,52,0.006,63,0.809,141,1.063,147,0.939,165,1.984,189,2.895,207,2.745,310,2.38,311,2.279,314,3.306,345,2.945,400,2.028,410,2.381,549,2.332,606,3.087,615,4.373,618,3.491,619,5.944,620,5.755,621,5.276,622,5.276,624,2.998,632,1.457,697,3.491,698,3.947,699,3.087,700,2.19,701,3.947,705,3.947,708,3.947,709,3.087,712,3.306,715,3.306,716,4.962,720,2.748,722,1.931,723,3.58,724,1.931,742,2.625,743,2.995,744,2.995,745,2.995,746,2.995,747,2.995,748,2.995,749,2.995,750,2.625,751,7.765,752,2.995,753,5.414,754,4.505,755,2.995,756,2.995,757,2.995]],["title/controllers/FeedbackUserController.html",[53,1.045,758,3.1]],["body/controllers/FeedbackUserController.html",[3,0.109,4,0.109,5,0.098,7,0.347,8,1.136,12,0.681,14,1.351,15,0.011,16,1.234,17,0.595,18,1.234,20,1.512,22,0.269,25,0.391,26,0.109,27,0.14,30,1.827,32,2.151,40,1.468,51,0.007,52,0.007,53,0.93,55,0.903,58,1.651,60,1.087,63,1.015,64,1.757,165,1.947,186,1.692,190,2.077,206,4.06,221,3.242,235,2.884,237,2.999,243,2.178,428,2.292,429,2.077,508,5.329,549,2.597,635,4.594,719,3.292,722,2.422,724,2.422,758,3.9,759,3.292,760,3.292,761,5.315,762,4.657,763,5.315,764,5.315,765,3.757,766,3.757,767,3.292,768,3.757,769,3.292,770,2.986,771,3.757,772,3.757,773,4.594,774,3.292,775,3.757,776,3.757,777,3.292,778,3.757,779,2.757,780,3.976,781,3.292,782,4.657,783,3.757,784,3.757,785,3.757,786,2.757,787,3.292,788,3.757,789,3.757,790,3.292,791,3.757,792,3.757,793,3.757,794,2.986,795,3.757,796,3.757]],["title/modules/FeedbackUserModule.html",[66,0.986,81,2.895]],["body/modules/FeedbackUserModule.html",[3,0.16,4,0.16,5,0.144,15,0.011,22,0.284,25,0.573,26,0.16,27,0.205,51,0.009,52,0.009,55,1.647,66,1.742,68,2.017,69,2.017,70,2.154,71,2.154,72,2.017,73,2.92,74,2.154,81,5.613,95,2.682,96,2.083,97,2.083,758,5.477,780,5.282,781,4.823,797,4.823,798,4.823,799,5.504,800,5.504]],["title/injectables/FeedbackUserService.html",[23,0.778,780,2.724]],["body/injectables/FeedbackUserService.html",[3,0.098,4,0.098,5,0.088,7,0.313,8,1.054,12,0.683,14,1.369,15,0.011,16,1.251,17,0.602,18,1.251,20,1.452,22,0.258,23,0.908,25,0.353,26,0.098,27,0.126,29,1.202,32,2.355,40,1.41,43,1.789,46,1.525,51,0.006,52,0.006,60,1.103,141,1.202,147,1.546,189,2.897,190,2.726,207,2.75,211,1.5,240,1.525,242,2.183,306,1.789,311,2.42,339,1.646,345,2.775,400,2.221,415,1.963,508,5.08,549,2.58,635,4.38,700,2.829,722,2.183,724,2.183,760,5.601,762,4.322,769,4.322,773,4.38,780,3.18,782,4.322,801,2.967,802,3.18,803,2.32,804,3.386,805,3.38,806,4.932,807,4.38,808,3.386,809,4.322,810,3.386,811,3.386,812,3.386,813,4.932,814,3.386,815,2.967,816,3.386,817,3.386,818,5.098,819,2.967,820,4.932,821,2.32,822,2.32,823,3.386,824,3.386,825,2.485,826,3.386,827,2.967,828,3.386,829,3.386]],["title/controllers/FileController.html",[53,1.045,830,3.1]],["body/controllers/FileController.html",[3,0.144,4,0.144,5,0.196,7,0.459,8,1.371,12,0.478,14,0.999,15,0.011,16,0.913,17,0.44,18,0.913,20,1.06,22,0.286,25,0.517,26,0.144,27,0.185,40,1.029,51,0.008,52,0.008,53,1.227,55,1.192,58,1.158,63,1.34,64,2.32,165,2.351,186,2.234,189,2.524,207,2.008,237,2.413,243,2.876,830,4.709,831,4.347,832,6.417,833,4.961,834,5.652,835,4.961,836,4.961,837,5.622,838,4.347,839,4.347,840,4.347,841,3.943,842,3.641,843,4.587,844,4.347,845,4.961,846,4.961,847,4.961,848,4.347,849,4.961,850,4.961,851,4.961]],["title/modules/FileModule.html",[66,0.986,82,2.724]],["body/modules/FileModule.html",[3,0.151,4,0.151,5,0.135,15,0.011,22,0.291,25,0.54,26,0.151,27,0.193,51,0.009,52,0.009,55,1.586,66,1.694,68,1.9,69,1.9,70,2.029,71,2.029,72,1.9,73,2.841,74,2.841,82,5.286,95,2.583,96,1.963,97,1.963,100,3.163,102,5.246,103,3.006,830,5.329,843,5.213,844,4.543,852,4.543,853,4.543,854,4.543,855,5.185,856,5.185]],["title/injectables/FileService.html",[23,0.778,843,2.577]],["body/injectables/FileService.html",[3,0.125,4,0.125,5,0.153,7,0.4,8,1.251,12,0.64,14,1.18,15,0.011,16,1.078,17,0.589,18,1.078,20,0.924,22,0.271,23,1.078,25,0.45,26,0.125,27,0.161,29,1.534,40,1.215,46,1.946,51,0.008,52,0.008,63,1.168,103,2.506,141,1.534,147,1.355,164,1.582,165,1.584,169,3.435,189,2.357,207,1.749,235,2.021,255,2.786,257,2.786,306,3.511,345,1.876,349,2.786,350,3.787,382,3.435,834,5.279,843,3.573,857,3.787,858,6.994,859,5.856,860,3.435,861,5.63,862,5.856,863,5.856,864,4.322,865,3.435,866,3.435,867,4.322,868,5.132,869,4.322,870,3.787,871,3.787,872,3.787,873,3.787,874,3.787,875,6.642,876,4.322,877,4.322,878,4.322,879,4.322,880,4.322,881,4.322,882,4.322,883,4.322,884,4.322,885,4.322,886,4.322]],["title/classes/GetUserAdminDto.html",[27,0.157,679,2.895]],["body/classes/GetUserAdminDto.html",[3,0.136,4,0.136,5,0.122,7,0.432,12,0.594,15,0.011,17,0.547,21,3.411,22,0.263,26,0.179,27,0.273,51,0.008,52,0.008,58,1.44,60,1.087,164,1.667,211,2.102,247,2.261,285,1.339,292,3.176,618,2.709,624,2.796,629,4.496,632,2.272,633,4.062,653,2.47,654,3.714,655,4.734,656,3.202,657,4.734,658,4.214,659,3.429,660,3.202,661,4.734,662,3.202,663,3.013,664,2.851,666,3.013,678,4.904,679,4.228,680,5.069,887,4.673,888,4.095,889,4.673]],["title/injectables/JwtStrategy.html",[23,0.778,296,2.724]],["body/injectables/JwtStrategy.html",[3,0.118,4,0.118,5,0.106,7,0.374,8,1.197,12,0.539,14,1.128,15,0.011,16,1.031,17,0.497,18,1.031,20,0.866,21,2.239,22,0.286,23,1.031,25,0.422,26,0.118,27,0.151,29,1.437,32,2.267,39,4.452,40,0.84,41,3.123,51,0.007,52,0.007,64,1.894,141,1.437,147,1.756,153,2.775,154,2.141,156,2.972,162,4.471,165,2.353,188,4.452,189,2.279,211,1.704,244,4.361,245,2.972,296,3.611,299,2.972,304,4.111,306,2.961,317,4.111,414,2.267,463,3.219,575,2.972,890,3.219,891,5.602,892,4.05,893,4.05,894,4.908,895,4.05,896,3.549,897,3.549,898,3.219,899,3.549,900,4.908,901,3.219,902,3.219,903,2.775,904,4.111,905,3.549,906,3.549,907,3.549,908,3.549,909,3.549,910,3.549,911,3.549,912,3.549,913,3.549,914,3.549,915,3.549,916,3.549,917,3.549,918,3.549,919,3.549,920,3.549,921,3.549,922,3.549,923,3.549,924,3.549,925,3.549,926,3.549,927,3.549,928,3.549]],["title/classes/MatchEvent.html",[27,0.157,458,2.895]],["body/classes/MatchEvent.html",[3,0.174,4,0.174,5,0.157,7,0.554,12,0.696,15,0.011,17,0.64,26,0.174,27,0.223,51,0.009,52,0.009,60,1.115,164,1.951,285,1.718,458,4.949,929,5.254,930,6.16,931,6.16,932,5.996,933,5.996]],["title/controllers/MealRecoController.html",[53,1.045,934,3.1]],["body/controllers/MealRecoController.html",[3,0.143,4,0.143,5,0.128,7,0.454,8,1.363,12,0.473,14,0.99,15,0.011,16,0.905,17,0.436,18,0.905,20,1.05,22,0.295,25,0.512,26,0.143,27,0.183,40,1.02,51,0.008,52,0.008,53,1.216,55,1.181,58,1.147,60,0.981,63,1.328,64,2.299,125,3.907,136,5.589,165,1.801,186,2.214,211,2.279,235,3.311,237,3.102,430,3.698,725,3.907,825,3.607,934,4.681,935,4.307,936,6.378,937,5.589,938,4.916,939,5.498,940,4.916,941,4.916,942,4.565,943,4.307,944,4.916,945,4.916,946,4.916,947,4.916,948,4.916,949,4.916,950,4.916]],["title/classes/MealRecoDto.html",[27,0.157,939,3.1]],["body/classes/MealRecoDto.html",[3,0.163,4,0.163,5,0.146,7,0.518,12,0.667,15,0.011,17,0.614,22,0.213,26,0.163,27,0.258,51,0.009,52,0.009,58,1.616,60,1.089,164,1.871,247,2.052,285,1.605,288,3.095,291,4.158,292,3.044,629,3.661,658,4.588,939,5.083,951,4.907,952,6.591,953,5.6,954,5.6,955,5.6]],["title/modules/MealRecoModule.html",[66,0.986,83,2.895]],["body/modules/MealRecoModule.html",[3,0.151,4,0.151,5,0.136,15,0.011,22,0.291,25,0.542,26,0.151,27,0.193,51,0.009,52,0.009,55,1.589,66,1.697,68,1.906,69,1.906,70,2.035,71,2.035,72,1.906,73,2.846,74,2.035,83,5.691,92,4.927,95,2.588,96,1.969,97,1.969,100,4.035,110,4.134,934,5.337,942,5.207,943,4.558,956,4.558,957,4.558,958,5.202,959,5.202,960,5.202]],["title/injectables/MealRecoService.html",[23,0.778,942,2.724]],["body/injectables/MealRecoService.html",[3,0.102,4,0.102,5,0.092,7,0.325,8,1.082,12,0.572,14,1.02,15,0.011,16,0.932,17,0.527,18,0.932,20,0.75,22,0.247,23,0.932,25,0.366,26,0.102,27,0.131,29,2.307,30,2.463,32,2.404,40,1.051,43,1.856,46,2.675,51,0.007,52,0.007,60,1.069,63,0.949,64,2.778,103,2.036,141,1.246,147,1.101,164,1.368,189,2.108,200,2.406,211,1.807,255,2.264,257,2.264,258,2.577,306,3.436,317,3.716,345,2.199,466,5.697,511,3.594,513,5.205,527,2.791,566,3.47,658,4.623,664,3.089,825,3.716,860,2.791,861,5.27,937,4.438,942,3.265,952,3.077,961,3.077,962,5.064,963,5.064,964,3.511,965,5.94,966,5.94,967,3.077,968,3.511,969,3.511,970,3.511,971,3.511,972,3.511,973,3.511,974,3.511,975,3.511,976,3.511,977,3.511,978,3.511,979,3.511,980,3.511,981,3.511,982,5.94,983,5.064,984,3.511,985,3.511,986,3.511,987,3.511,988,5.064,989,3.511,990,3.511,991,3.511,992,3.511,993,3.511,994,3.511,995,3.511,996,3.511,997,3.077,998,3.511,999,3.511,1000,3.511,1001,3.511,1002,3.511,1003,3.511,1004,3.511,1005,3.511,1006,3.511,1007,3.511]],["title/classes/ModeratorAnswerDto.html",[27,0.157,1008,2.895]],["body/classes/ModeratorAnswerDto.html",[3,0.171,4,0.171,5,0.154,7,0.546,12,0.569,15,0.011,17,0.524,22,0.225,26,0.171,27,0.266,51,0.009,52,0.009,58,1.379,60,0.992,164,1.934,247,2.165,285,1.693,292,3.117,634,4.048,1008,4.905,1009,6.272,1010,4.695,1011,5.651,1012,5.177]],["title/controllers/NutritionController.html",[53,1.045,99,2.895]],["body/controllers/NutritionController.html",[3,0.102,4,0.102,5,0.092,7,0.326,8,1.086,12,0.693,14,1.449,15,0.011,16,1.324,17,0.638,18,1.324,20,1.537,22,0.248,25,0.367,26,0.102,27,0.131,30,1.715,40,1.492,51,0.007,52,0.007,53,0.873,55,0.847,58,1.678,60,1.112,63,0.953,94,3.633,99,3.481,186,1.588,190,1.949,206,3.976,221,4.388,235,2.784,237,2.896,428,2.151,429,1.949,549,2.473,770,2.803,774,3.09,777,3.09,779,2.588,786,2.588,787,3.09,790,3.09,794,2.803,818,3.09,1013,3.09,1014,2.803,1015,5.08,1016,5.08,1017,5.08,1018,5.08,1019,5.08,1020,5.08,1021,3.527,1022,4.464,1023,3.527,1024,3.527,1025,3.527,1026,3.527,1027,3.527,1028,3.527,1029,3.527,1030,5.178,1031,3.527,1032,3.527,1033,3.527,1034,4.464,1035,3.527,1036,3.527,1037,3.527,1038,3.09,1039,3.09,1040,3.09,1041,3.527,1042,3.527,1043,3.527,1044,3.527,1045,3.527,1046,3.527,1047,3.527,1048,3.527,1049,3.09,1050,3.527,1051,3.527,1052,3.527,1053,3.527,1054,3.527,1055,3.527,1056,3.527]],["title/classes/NutritionDto.html",[27,0.157,1022,2.895]],["body/classes/NutritionDto.html",[3,0.114,4,0.114,5,0.103,7,0.364,12,0.782,15,0.011,16,1.165,17,0.72,22,0.209,26,0.114,27,0.204,51,0.007,52,0.007,58,1.851,60,1.082,164,1.485,247,1.444,285,1.129,288,3.498,291,4.384,292,2.915,414,2.562,549,2.176,624,3.315,625,5.285,629,2.905,632,1.916,633,4.123,664,3.861,666,2.541,1022,3.766,1057,3.453,1058,5.03,1059,5.03,1060,3.861,1061,5.03,1062,5.928,1063,5.03,1064,5.03,1065,3.941,1066,3.941,1067,3.941,1068,3.941,1069,3.941,1070,3.941,1071,3.941,1072,3.941,1073,3.941,1074,3.941,1075,3.941]],["title/modules/NutritionModule.html",[66,0.986,84,2.895]],["body/modules/NutritionModule.html",[3,0.157,4,0.157,5,0.141,15,0.011,22,0.295,25,0.562,26,0.157,27,0.201,51,0.009,52,0.009,55,1.626,66,1.726,68,1.976,69,1.976,70,2.11,71,2.11,72,1.976,73,2.893,74,2.11,84,5.585,94,4.973,95,2.648,96,2.042,97,2.042,99,5.067,1014,4.286,1040,4.726,1076,5.393,1077,5.393,1078,5.393,1079,5.393,1080,5.393]],["title/injectables/NutritionService.html",[23,0.778,94,2.577]],["body/injectables/NutritionService.html",[3,0.066,4,0.066,5,0.059,7,0.21,8,0.777,12,0.612,14,1.281,15,0.012,16,1.171,17,0.564,18,1.171,20,1.294,22,0.216,23,0.669,25,0.237,26,0.066,27,0.085,29,2.344,32,2.451,40,1.178,43,2.401,46,2.046,51,0.005,52,0.005,60,1.007,63,0.614,94,2.218,141,0.806,147,0.712,165,2.852,189,2.762,190,2.009,207,2.298,211,1.382,240,1.023,242,1.465,311,1.965,339,1.105,345,3.098,400,1.637,414,2.451,415,3.686,549,2.454,554,4.526,624,2.757,697,2.107,699,2.491,700,1.768,709,2.491,802,2.344,803,1.557,805,2.491,807,4.526,809,3.185,821,3.113,822,3.113,825,4.848,1014,1.806,1022,3.557,1034,3.557,1038,1.991,1039,1.991,1058,4.512,1059,1.806,1060,4.502,1061,1.806,1062,4.126,1064,1.806,1081,1.991,1082,2.889,1083,2.272,1084,2.889,1085,2.272,1086,4.126,1087,2.272,1088,3.635,1089,2.272,1090,3.635,1091,2.272,1092,2.272,1093,3.185,1094,2.272,1095,1.806,1096,4.543,1097,2.272,1098,1.991,1099,2.272,1100,2.272,1101,2.272,1102,3.635,1103,3.635,1104,5.192,1105,4.543,1106,4.543,1107,2.272,1108,5.192,1109,5.192,1110,5.788,1111,5.678,1112,2.272,1113,2.272,1114,2.272,1115,5.678,1116,2.272,1117,2.272,1118,2.272,1119,2.272]],["title/controllers/OpenffController.html",[53,1.045,1120,3.1]],["body/controllers/OpenffController.html",[3,0.155,4,0.155,5,0.139,7,0.494,8,1.437,12,0.514,14,1.076,15,0.011,16,0.983,17,0.473,18,0.983,20,1.141,22,0.28,25,0.556,26,0.155,27,0.199,30,3.27,40,1.108,51,0.009,52,0.009,53,1.321,55,1.283,58,1.246,60,1.02,63,1.442,64,2.497,165,2.464,186,2.405,243,3.096,428,3.257,697,3.898,1120,4.935,1121,4.679,1122,5.34,1123,4.679,1124,5.34,1125,5.34,1126,4.746,1127,4.679,1128,5.34,1129,5.34,1130,5.34,1131,5.34]],["title/modules/OpenffModule.html",[66,0.986,85,2.895]],["body/modules/OpenffModule.html",[3,0.16,4,0.16,5,0.144,15,0.011,22,0.284,25,0.573,26,0.16,27,0.205,51,0.009,52,0.009,55,1.647,66,1.742,68,2.017,69,2.017,70,2.154,71,2.154,72,2.017,73,2.92,74,2.154,85,5.613,95,2.682,96,2.083,97,2.083,1120,5.477,1126,5.282,1127,4.823,1132,4.823,1133,4.823,1134,5.504,1135,5.504]],["title/injectables/OpenffService.html",[23,0.778,1126,2.724]],["body/injectables/OpenffService.html",[3,0.118,4,0.118,5,0.106,7,0.374,8,1.197,12,0.539,14,1.128,15,0.012,16,1.031,17,0.569,18,1.031,20,0.866,22,0.213,23,1.031,25,0.422,26,0.118,27,0.151,29,2.279,30,1.97,40,1.332,51,0.007,52,0.007,60,0.89,63,1.094,141,1.437,147,1.27,189,2.279,200,2.775,207,1.639,236,3.549,255,2.611,257,2.611,311,2.847,339,1.97,345,2.432,400,3.275,412,3.549,566,2.775,584,2.611,697,3.247,1063,3.219,1123,4.908,1126,3.611,1136,3.549,1137,2.972,1138,4.05,1139,4.05,1140,4.05,1141,4.05,1142,4.05,1143,4.05,1144,4.05,1145,4.05,1146,4.05,1147,4.05,1148,4.05,1149,4.05,1150,4.05,1151,4.05,1152,4.05,1153,4.05,1154,4.05,1155,4.05,1156,4.05,1157,4.05,1158,4.05,1159,6.422,1160,4.05,1161,4.05,1162,4.05,1163,4.05,1164,4.05,1165,4.05,1166,4.05,1167,4.05,1168,4.05,1169,4.05,1170,4.05,1171,4.05,1172,4.05,1173,4.05,1174,4.05,1175,4.05,1176,4.05,1177,4.05,1178,4.05,1179,4.05,1180,4.05,1181,4.05]],["title/controllers/PreferencesController.html",[53,1.045,1182,3.1]],["body/controllers/PreferencesController.html",[3,0.138,4,0.138,5,0.125,7,0.441,8,1.337,12,0.602,14,1.26,15,0.011,16,1.152,17,0.555,18,1.152,20,1.337,22,0.281,25,0.497,26,0.138,27,0.177,40,1.298,51,0.008,52,0.008,53,1.18,55,1.146,58,1.459,60,1.093,63,1.289,64,2.231,186,2.148,206,3.457,211,2.401,235,2.231,237,3.393,243,2.765,430,3.626,700,3.041,724,3.075,1182,4.59,1183,4.18,1184,4.18,1185,4.18,1186,4.77,1187,4.77,1188,5.075,1189,4.77,1190,4.18,1191,4.499,1192,4.18,1193,4.77,1194,4.77,1195,4.77,1196,4.77,1197,4.77]],["title/modules/PreferencesModule.html",[66,0.986,86,2.895]],["body/modules/PreferencesModule.html",[3,0.16,4,0.16,5,0.144,15,0.011,22,0.284,25,0.573,26,0.16,27,0.205,51,0.009,52,0.009,55,1.647,66,1.742,68,2.017,69,2.017,70,2.154,71,2.154,72,2.017,73,2.92,74,2.154,86,5.613,95,2.682,96,2.083,97,2.083,1182,5.477,1191,5.282,1192,4.823,1198,4.823,1199,4.823,1200,5.504,1201,5.504]],["title/injectables/PreferencesService.html",[23,0.778,1191,2.724]],["body/injectables/PreferencesService.html",[3,0.127,4,0.127,5,0.114,7,0.404,8,1.261,12,0.643,14,1.345,15,0.011,16,1.23,17,0.592,18,1.23,20,1.261,22,0.254,23,1.086,25,0.455,26,0.127,27,0.163,29,2.093,32,2.388,40,1.224,41,2.124,51,0.008,52,0.008,60,1.066,63,1.18,141,1.55,147,1.37,189,2.731,207,2.388,211,2.341,311,2.913,339,2.124,345,2.9,400,1.967,414,1.768,415,2.533,577,5.169,700,2.869,724,2.817,1137,3.206,1184,3.828,1185,5.169,1188,5.274,1190,3.828,1191,3.803,1202,3.828,1203,4.369,1204,4.369,1205,5.899,1206,4.369,1207,4.369,1208,3.206,1209,4.369]],["title/modules/PrismaModule.html",[66,0.986,87,2.895]],["body/modules/PrismaModule.html",[3,0.152,4,0.152,5,0.137,15,0.011,22,0.278,25,0.547,26,0.152,27,0.195,51,0.009,52,0.009,55,1.262,66,1.705,68,1.925,69,1.925,70,2.055,71,2.055,72,1.925,73,2.858,74,2.858,87,5.635,95,2.604,96,1.988,97,1.988,100,3.204,102,5.289,103,3.045,311,3.24,1210,4.603,1211,4.603,1212,4.603,1213,5.253,1214,6.655,1215,5.253]],["title/injectables/PrismaService.html",[23,0.778,311,1.599]],["body/injectables/PrismaService.html",[3,0.141,4,0.141,5,0.127,7,0.449,8,1.352,12,0.678,14,0.978,15,0.011,16,0.894,17,0.431,18,0.894,20,1.352,22,0.268,23,1.165,25,0.506,26,0.141,27,0.181,28,4.255,51,0.008,52,0.008,103,2.815,141,1.723,147,1.523,154,3.345,156,3.564,189,2.814,311,2.395,345,2.747,559,3.86,632,2.362,860,5.029,861,5.676,1216,4.255,1217,7.039,1218,7.93,1219,7.93,1220,4.857,1221,4.857,1222,4.857,1223,4.857,1224,4.857,1225,4.857,1226,4.857,1227,4.857]],["title/controllers/ReportsController.html",[53,1.045,1228,3.1]],["body/controllers/ReportsController.html",[3,0.134,4,0.134,5,0.121,7,0.428,8,1.311,12,0.591,14,1.236,15,0.011,16,1.13,17,0.544,18,1.13,20,1.311,22,0.261,25,0.483,26,0.134,27,0.172,40,1.273,51,0.008,52,0.008,53,1.146,55,1.113,58,1.432,60,1.137,63,1.252,64,2.166,186,2.086,189,2.778,207,2.483,235,2.166,237,3.345,410,3.636,430,3.988,1228,4.502,1229,4.06,1230,4.633,1231,6.028,1232,4.633,1233,4.633,1234,4.633,1235,7.323,1236,4.633,1237,6.416,1238,4.633,1239,4.633,1240,4.435,1241,4.06,1242,4.633,1243,4.633,1244,4.633,1245,4.633,1246,4.633]],["title/modules/ReportsModule.html",[66,0.986,88,2.895]],["body/modules/ReportsModule.html",[3,0.16,4,0.16,5,0.144,15,0.011,22,0.284,25,0.573,26,0.16,27,0.205,51,0.009,52,0.009,55,1.647,66,1.742,68,2.017,69,2.017,70,2.154,71,2.154,72,2.017,73,2.92,74,2.154,88,5.613,95,2.682,96,2.083,97,2.083,1228,5.477,1240,5.282,1241,4.823,1247,4.823,1248,4.823,1249,5.504,1250,5.504]],["title/injectables/ReportsService.html",[23,0.778,1240,2.724]],["body/injectables/ReportsService.html",[3,0.098,4,0.098,5,0.088,7,0.312,8,1.051,12,0.559,14,1.169,15,0.012,16,1.069,17,0.515,18,1.069,20,1.051,22,0.187,23,0.905,25,0.351,26,0.098,27,0.125,29,2.264,32,2.582,40,1.02,43,3.372,46,2.873,51,0.006,52,0.006,60,1.059,63,0.911,141,1.196,147,1.057,189,2.513,207,1.99,211,1.496,310,2.68,311,2.415,314,3.608,339,1.64,345,3.253,349,4.113,400,3.189,410,2.599,414,3.033,415,3.698,488,3,597,3,1231,5.086,1237,6.407,1240,3.17,1251,2.954,1252,3.372,1253,4.917,1254,3.372,1255,7.082,1256,4.917,1257,3.372,1258,2.174,1259,4.917,1260,4.917,1261,4.917,1262,6.38,1263,7.082,1264,4.309,1265,6.38,1266,5.07,1267,4.917,1268,2.954,1269,4.917]],["title/classes/Rooms.html",[27,0.157,507,3.1]],["body/classes/Rooms.html",[3,0.092,4,0.092,5,0.082,7,0.292,8,1,12,0.723,14,1.442,15,0.012,16,1.354,17,0.678,18,1.318,20,1.53,26,0.162,27,0.117,29,2.342,32,2.798,40,1.158,51,0.006,52,0.006,60,1.17,147,1.75,164,1.265,171,1.743,172,2.161,201,4.533,285,0.904,306,2.951,414,2.671,487,5.874,507,4.843,538,2.506,541,4.892,543,2.763,564,2.763,1270,2.506,1271,4.681,1272,4.681,1273,4.681,1274,4.681,1275,4.681,1276,4.681,1277,4.681,1278,4.681,1279,4.681,1280,3.154,1281,4.681,1282,5.783,1283,3.154,1284,7.158,1285,4.681,1286,3.154,1287,4.681,1288,3.154,1289,4.681,1290,3.154,1291,4.681,1292,3.154,1293,4.681,1294,3.154,1295,3.154,1296,4.681,1297,3.154,1298,4.681,1299,3.154,1300,5.583,1301,3.154,1302,4.681,1303,3.154,1304,3.154,1305,3.154]],["title/controllers/StepsController.html",[53,1.045,1306,3.1]],["body/controllers/StepsController.html",[3,0.161,4,0.161,5,0.145,7,0.512,8,1.471,12,0.534,14,1.116,15,0.011,16,1.02,17,0.491,18,1.02,20,1.184,22,0.262,25,0.577,26,0.161,27,0.206,30,2.695,40,1.15,51,0.009,52,0.009,53,1.703,55,1.332,58,1.293,63,1.497,221,4.199,429,3.063,1306,5.051,1307,4.856,1308,6.883,1309,5.542,1310,5.542,1311,5.542,1312,4.827,1313,4.856,1314,5.542,1315,5.542,1316,5.542]],["title/modules/StepsModule.html",[66,0.986,89,2.895]],["body/modules/StepsModule.html",[3,0.153,4,0.153,5,0.138,15,0.011,22,0.292,25,0.549,26,0.153,27,0.196,51,0.009,52,0.009,55,1.602,66,1.707,68,1.931,69,1.931,70,2.062,71,2.062,72,1.931,73,2.863,74,2.062,89,5.706,95,2.609,96,1.995,97,1.995,311,3.067,339,2.563,1306,5.369,1312,5.224,1313,4.618,1317,4.618,1318,4.618,1319,5.27,1320,5.27]],["title/injectables/StepsService.html",[23,0.778,1312,2.724]],["body/injectables/StepsService.html",[3,0.132,4,0.132,5,0.119,7,0.42,8,1.294,12,0.583,14,1.22,15,0.012,16,1.115,17,0.537,18,1.115,20,0.97,22,0.259,23,1.115,25,0.473,26,0.132,27,0.169,29,2.417,32,2.451,40,0.942,43,3.2,46,2.726,51,0.008,52,0.008,60,0.944,63,1.227,141,1.612,147,1.424,165,2.496,189,2.417,207,1.838,211,1.382,240,2.045,242,2.928,311,2.75,339,2.208,345,2.957,400,2.045,414,2.451,803,3.112,805,4.149,807,4.149,815,3.979,821,3.112,822,4.149,1312,3.903,1321,3.979,1322,6.055,1323,4.542,1324,6.055,1325,4.542,1326,6.055,1327,3.609,1328,6.055,1329,6.055,1330,4.542]],["title/controllers/TicketsController.html",[53,1.045,1331,3.1]],["body/controllers/TicketsController.html",[1,1.722,3,0.082,4,0.082,5,0.074,7,0.261,8,0.92,12,0.702,14,1.467,15,0.011,16,1.341,17,0.646,18,1.341,20,1.557,22,0.252,25,0.294,26,0.082,27,0.105,40,1.511,51,0.006,52,0.006,53,0.698,55,0.678,58,1.7,60,1.096,63,0.762,64,1.32,109,2.243,171,1.56,172,1.934,186,1.271,190,1.56,198,3.773,206,3.229,211,2.163,235,1.32,237,2.539,239,2.071,243,1.636,281,4.865,282,3.773,410,2.276,425,3.16,428,1.722,429,1.56,430,2.496,549,2.695,554,2.95,624,3.102,647,4.543,699,2.95,709,1.934,710,2.473,722,1.819,727,2.473,732,2.473,1008,4.725,1011,3.16,1331,3.16,1332,2.473,1333,2.822,1334,3.773,1335,2.776,1336,3.773,1337,4.306,1338,3.773,1339,3.773,1340,2.822,1341,2.822,1342,2.822,1343,2.473,1344,2.822,1345,2.822,1346,2.822,1347,2.822,1348,2.473,1349,2.822,1350,2.822,1351,2.822,1352,2.822,1353,2.473,1354,2.822,1355,2.822,1356,2.822,1357,2.822,1358,2.473,1359,2.822,1360,2.822,1361,2.822,1362,2.822,1363,6.29,1364,3.366,1365,2.473,1366,2.473,1367,2.473,1368,2.473,1369,2.822,1370,2.822,1371,2.822,1372,2.822,1373,2.822,1374,2.822,1375,2.822,1376,4.306,1377,2.822,1378,2.822,1379,2.822,1380,2.822,1381,2.822,1382,2.822,1383,2.822,1384,2.822,1385,2.822,1386,4.306,1387,2.822,1388,2.822,1389,2.822]],["title/modules/TicketsModule.html",[66,0.986,90,2.895]],["body/modules/TicketsModule.html",[3,0.16,4,0.16,5,0.144,15,0.011,22,0.284,25,0.573,26,0.16,27,0.205,51,0.009,52,0.009,55,1.647,66,1.742,68,2.017,69,2.017,70,2.154,71,2.154,72,2.017,73,2.92,74,2.154,90,5.613,95,2.682,96,2.083,97,2.083,1331,5.477,1364,5.282,1365,4.823,1390,4.823,1391,4.823,1392,5.504,1393,5.504]],["title/injectables/TicketsService.html",[23,0.778,1364,2.724]],["body/injectables/TicketsService.html",[3,0.049,4,0.106,5,0.044,7,0.154,8,0.603,12,0.623,14,1.267,15,0.012,16,1.158,17,0.574,18,1.158,20,1.3,22,0.211,23,0.52,25,0.174,26,0.049,27,0.062,29,2.232,32,2.836,40,1.262,41,2.958,46,0.752,51,0.004,52,0.004,60,1.055,63,0.451,103,0.969,141,0.593,147,0.524,164,0.762,169,1.328,189,2.72,200,2.951,206,0.924,207,2.364,211,2.098,235,1.32,306,2.938,311,1.976,339,0.813,345,2.939,382,1.328,400,2.914,410,1.492,425,2.071,486,4.871,488,1.019,549,2.635,558,5.33,566,2.511,567,3.211,582,1.464,583,1.464,586,2.473,587,2.473,618,0.969,624,2.836,647,2.951,650,1.464,699,1.934,709,1.934,722,1.077,861,4.079,865,1.328,866,1.328,870,1.464,871,1.464,872,1.464,873,1.464,874,1.464,1008,2.951,1011,4.616,1137,1.226,1208,4.464,1334,2.473,1335,1.82,1336,2.473,1338,2.473,1339,3.211,1343,2.473,1348,2.473,1353,2.473,1358,2.473,1364,1.82,1366,1.464,1367,1.464,1368,2.473,1394,1.464,1395,5.119,1396,2.823,1397,2.823,1398,1.671,1399,1.671,1400,1.671,1401,2.823,1402,1.671,1403,1.671,1404,1.671,1405,2.823,1406,4.575,1407,1.671,1408,2.823,1409,2.823,1410,2.823,1411,2.823,1412,4.306,1413,1.671,1414,1.671,1415,1.671,1416,3.16,1417,1.671,1418,1.671,1419,1.671,1420,1.671,1421,6.471,1422,1.671,1423,2.823,1424,1.671,1425,3.664,1426,1.671,1427,3.664,1428,1.671,1429,5.842,1430,3.664,1431,1.671,1432,3.664,1433,1.671,1434,2.823,1435,2.823,1436,1.671,1437,3.664,1438,1.671,1439,2.823,1440,2.823,1441,1.671,1442,2.823,1443,1.671,1444,1.671,1445,1.671,1446,1.671,1447,1.671,1448,1.671,1449,1.671,1450,1.671,1451,1.671,1452,3.664,1453,1.671,1454,1.671,1455,2.823,1456,2.823]],["title/classes/UpdateExercisesLibraryDto.html",[27,0.157,716,2.895]],["body/classes/UpdateExercisesLibraryDto.html",[3,0.163,4,0.163,5,0.146,7,0.518,12,0.539,15,0.011,17,0.497,22,0.286,26,0.163,27,0.258,51,0.009,52,0.009,58,1.307,60,0.96,154,2.96,164,1.871,247,2.052,285,1.605,288,3.095,291,3.829,292,2.804,410,2.96,549,2.586,615,3.61,617,4.45,716,4.746,723,4.45,1457,6.07,1458,5.6,1459,4.907,1460,4.45,1461,4.109,1462,5.6]],["title/classes/UpdateFeedbackUserDto.html",[27,0.157,773,2.895]],["body/classes/UpdateFeedbackUserDto.html",[3,0.156,4,0.156,5,0.14,7,0.497,12,0.711,15,0.011,17,0.655,22,0.204,26,0.156,27,0.251,51,0.009,52,0.009,58,1.576,60,0.936,164,1.824,247,1.97,285,1.54,292,2.733,549,2.539,624,3.135,629,3.902,634,4.627,637,4.272,638,6.47,639,6.47,640,4.71,642,4.71,643,4.71,666,3.466,773,4.627,1463,6.787,1464,5.375]],["title/classes/UpdateNutritionDto.html",[27,0.157,1034,2.895]],["body/classes/UpdateNutritionDto.html",[3,0.115,4,0.115,5,0.103,7,0.365,12,0.782,15,0.011,16,1.167,17,0.72,22,0.209,26,0.115,27,0.205,51,0.007,52,0.007,58,1.852,60,1.082,164,1.487,247,1.448,285,1.132,292,2.917,414,2.565,549,2.179,624,3.316,629,4.247,632,1.921,633,4.126,664,3.866,666,4.419,671,5.728,1034,3.773,1058,5.036,1059,5.036,1060,3.866,1061,5.036,1062,5.932,1063,5.036,1064,5.036,1465,3.462,1466,3.951,1467,3.951,1468,3.951,1469,3.951,1470,3.951,1471,3.951,1472,3.951,1473,3.951,1474,3.951,1475,3.951,1476,3.951]],["title/classes/UpdateOpenffDto.html",[27,0.157,1477,3.357]],["body/classes/UpdateOpenffDto.html",[3,0.179,4,0.179,5,0.161,15,0.011,22,0.279,26,0.179,27,0.229,51,0.01,52,0.01,154,3.254,285,1.764,410,3.254,644,4.518,646,4.893,1459,5.394,1460,4.893,1461,4.518,1477,5.831,1478,5.394,1479,6.157,1480,6.157]],["title/classes/UpdatePreferenceDto.html",[27,0.157,1188,2.895]],["body/classes/UpdatePreferenceDto.html",[3,0.154,4,0.154,5,0.138,7,0.49,12,0.707,15,0.011,17,0.651,21,4.487,22,0.202,26,0.154,27,0.249,51,0.009,52,0.009,58,1.713,164,1.809,247,1.944,285,1.52,629,4.074,678,6.126,888,6.43,1188,4.589,1481,6.754,1482,4.648,1483,7.339,1484,7.339,1485,7.339,1486,5.305,1487,5.305,1488,5.305]],["title/controllers/UserAdminController.html",[53,1.045,1489,3.1]],["body/controllers/UserAdminController.html",[1,2.665,3,0.127,4,0.127,5,0.114,7,0.404,8,1.261,12,0.568,14,1.188,15,0.011,16,1.086,17,0.523,18,1.086,20,1.261,21,3.692,22,0.292,25,0.455,26,0.127,27,0.163,40,1.224,51,0.008,52,0.008,53,1.081,55,1.05,58,1.377,60,1.066,63,1.18,64,2.043,165,2.447,186,1.967,211,1.795,235,2.759,237,2.124,239,3.206,248,3.828,281,4.329,429,4.129,538,4.688,549,2.028,653,3.78,679,2.994,680,5.248,725,3.472,767,3.828,1489,4.329,1490,3.828,1491,4.369,1492,5.899,1493,4.369,1494,4.369,1495,4.369,1496,4.369,1497,4.369,1498,5.899,1499,4.306,1500,3.828,1501,4.369,1502,3.828,1503,4.369,1504,4.369,1505,4.369,1506,4.369,1507,4.369,1508,4.369,1509,4.369]],["title/modules/UserAdminModule.html",[66,0.986,91,2.895]],["body/modules/UserAdminModule.html",[3,0.159,4,0.159,5,0.143,15,0.011,22,0.283,25,0.571,26,0.159,27,0.204,51,0.009,52,0.009,55,1.643,66,1.739,68,2.01,69,2.01,70,2.146,71,2.146,72,2.01,73,2.916,74,2.146,91,5.609,95,2.676,96,2.076,97,2.076,1489,5.468,1499,5.277,1500,4.806,1510,4.806,1511,4.806,1512,5.485,1513,5.485]],["title/injectables/UserAdminService.html",[23,0.778,1499,2.724]],["body/injectables/UserAdminService.html",[3,0.122,4,0.122,5,0.11,7,0.388,8,1.227,12,0.63,14,1.318,15,0.012,16,1.205,17,0.653,18,1.205,20,1.227,21,2.321,22,0.249,23,1.057,25,0.437,26,0.122,27,0.156,32,2.324,40,1.191,41,2.041,51,0.007,52,0.007,60,0.975,63,1.134,141,1.49,147,1.316,211,2.241,311,2.879,349,3.702,400,1.89,414,2.324,585,3.336,653,3.718,680,5.162,697,3.793,700,2.792,750,3.679,1137,3.081,1208,3.081,1266,3.336,1499,3.702,1502,3.679,1514,3.679,1515,4.198,1516,4.198,1517,4.213,1518,4.198,1519,5.742,1520,7.035,1521,4.198,1522,5.742,1523,4.198,1524,4.198,1525,4.198]],["title/classes/UserAnswerDto.html",[27,0.157,1416,3.1]],["body/classes/UserAnswerDto.html",[3,0.171,4,0.171,5,0.154,7,0.546,12,0.569,15,0.011,17,0.524,22,0.225,26,0.171,27,0.266,51,0.009,52,0.009,58,1.379,60,0.992,164,1.934,247,2.165,285,1.693,292,3.117,634,4.048,1010,4.695,1011,5.651,1012,5.177,1416,5.253,1526,6.272]],["title/injectables/UserInfoService.html",[23,0.778,511,2.335]],["body/injectables/UserInfoService.html",[3,0.055,4,0.055,5,0.122,7,0.175,8,0.67,12,0.615,14,1.241,15,0.012,16,1.134,17,0.584,18,1.134,20,1.316,22,0.243,23,0.577,24,1.506,25,0.197,26,0.055,27,0.07,29,2.449,32,2.934,40,1.278,43,3.377,46,2.877,51,0.004,52,0.004,60,1.057,127,1.391,128,1.391,141,0.673,147,0.983,165,2.656,189,2.783,207,2.493,211,2.054,221,1.913,240,0.853,242,2.022,306,2.12,311,1.765,339,0.922,345,3.187,349,1.222,400,2.326,414,2.665,415,2.994,511,1.733,549,1.603,632,0.922,653,2.464,655,2.149,656,1.299,657,2.149,658,1.913,660,1.299,661,2.149,662,1.299,663,1.222,700,1.525,802,2.022,803,1.299,805,2.149,807,4.378,819,1.661,821,3.539,822,2.748,834,3.188,843,2.844,930,4.681,931,4.896,1084,2.492,1086,3.705,1093,2.748,1095,2.492,1264,1.661,1266,3.188,1327,4.422,1335,2.022,1517,2.301,1527,1.661,1528,2.301,1529,4.085,1530,3.136,1531,2.748,1532,2.748,1533,4.011,1534,4.011,1535,4.662,1536,1.895,1537,3.194,1538,1.895,1539,3.136,1540,1.895,1541,3.136,1542,1.895,1543,1.895,1544,3.136,1545,1.895,1546,2.748,1547,1.895,1548,2.748,1549,1.895,1550,1.895,1551,1.895,1552,1.895,1553,1.222,1554,1.661,1555,1.661,1556,1.895,1557,3.136,1558,1.895,1559,3.515,1560,1.895,1561,2.748,1562,1.661,1563,1.895,1564,1.661,1565,1.895,1566,1.895,1567,4.662,1568,1.895,1569,1.895,1570,1.895,1571,1.895,1572,1.895,1573,1.895,1574,1.895,1575,1.895,1576,1.895,1577,1.895,1578,1.895,1579,1.895,1580,2.748,1581,4.662,1582,1.895,1583,1.895,1584,1.895,1585,1.895,1586,3.136,1587,1.895,1588,1.895,1589,1.895,1590,1.895,1591,1.895]],["title/controllers/UserInfosController.html",[53,1.045,1592,3.1]],["body/controllers/UserInfosController.html",[1,1.787,3,0.085,4,0.085,5,0.188,7,0.271,8,0.947,12,0.673,14,1.355,15,0.012,16,1.238,17,0.638,18,1.238,20,1.493,22,0.273,25,0.305,26,0.085,27,0.109,29,1.896,30,1.425,40,1.528,41,1.425,51,0.006,52,0.006,53,0.725,55,0.704,58,1.63,60,0.886,63,0.791,109,2.328,137,2.567,165,1.623,186,1.319,206,3.718,211,1.348,221,4.651,235,2.498,237,2.598,239,2.15,243,1.699,281,2.15,429,1.62,430,1.699,511,2.953,575,2.15,653,3.147,663,1.889,700,2.154,779,2.15,786,3.251,802,2.856,837,2.567,838,3.882,839,2.567,840,2.567,841,2.328,842,2.15,848,2.567,930,2.328,931,2.328,1335,2.856,1461,2.15,1517,3.251,1528,3.251,1529,5.218,1531,3.882,1532,3.882,1537,4.08,1546,2.567,1548,2.567,1554,2.567,1555,2.567,1592,3.251,1593,2.567,1594,2.93,1595,2.567,1596,2.93,1597,2.93,1598,2.93,1599,2.567,1600,2.93,1601,2.93,1602,2.93,1603,2.93,1604,2.93,1605,2.93,1606,2.93,1607,2.93,1608,2.93,1609,2.93,1610,2.93,1611,2.93,1612,2.93,1613,2.567,1614,4.43,1615,2.93,1616,2.93,1617,2.93,1618,2.93,1619,2.567,1620,2.93,1621,2.567,1622,2.93,1623,2.93,1624,2.93,1625,2.93,1626,2.93,1627,2.93,1628,2.93,1629,2.93,1630,2.93,1631,2.93,1632,2.93,1633,2.93,1634,2.93,1635,4.43,1636,2.93,1637,4.43,1638,2.93,1639,2.93,1640,2.93,1641,2.93,1642,2.93,1643,2.93,1644,2.93,1645,2.93,1646,2.93,1647,2.93,1648,2.93,1649,2.93,1650,2.93]],["title/classes/UserInfosDto.html",[27,0.157,1537,2.895]],["body/classes/UserInfosDto.html",[3,0.109,4,0.109,5,0.098,7,0.346,12,0.781,15,0.011,17,0.719,22,0.201,26,0.109,27,0.197,51,0.007,52,0.007,58,1.893,60,1.067,164,1.431,247,1.37,285,1.072,288,3.904,291,4.63,292,2.968,618,3.566,624,2.968,625,4.514,632,1.819,633,3.699,655,5.025,656,4.215,657,5.025,658,4.474,659,4.514,660,4.215,661,5.025,662,4.215,663,3.966,664,3.753,1060,3.232,1537,3.63,1564,5.39,1651,3.277,1652,3.74,1653,3.74,1654,3.74,1655,3.74,1656,3.74,1657,3.74,1658,3.74,1659,3.74,1660,3.74,1661,3.74,1662,3.74,1663,3.74]],["title/modules/UserInfosModule.html",[66,0.986,92,2.577]],["body/modules/UserInfosModule.html",[3,0.146,4,0.146,5,0.132,15,0.011,22,0.287,25,0.525,26,0.146,27,0.187,51,0.008,52,0.008,55,1.557,66,1.672,68,1.846,69,1.846,70,1.972,71,1.972,72,1.846,73,2.803,74,2.803,82,5.164,92,5.086,95,2.536,96,1.907,97,1.907,100,3.954,117,4.415,511,4.705,1592,5.257,1613,4.415,1664,4.415,1665,4.415,1666,4.415,1667,5.039,1668,5.039,1669,5.039]],["title/classes/UserNotFoundException.html",[27,0.157,240,1.902]],["body/classes/UserNotFoundException.html",[3,0.164,4,0.164,5,0.148,12,0.545,14,1.14,15,0.011,16,1.042,17,0.502,18,1.042,22,0.215,25,0.59,26,0.164,27,0.21,51,0.009,52,0.009,60,1.047,147,1.774,154,3.685,171,3.128,211,1.721,240,3.403,285,1.622,597,3.452,1258,4.872,1670,6.109,1671,3.877,1672,6.109,1673,4.497,1674,6.109,1675,4.152]],["title/classes/UserNotFoundException-1.html",[27,0.131,240,1.589,584,2.274]],["body/classes/UserNotFoundException-1.html",[3,0.153,4,0.153,5,0.138,12,0.509,14,1.065,15,0.011,16,0.973,17,0.469,18,0.973,22,0.201,25,0.551,26,0.194,27,0.249,51,0.009,52,0.009,60,1.067,147,1.658,154,3.873,171,2.923,240,3.3,241,4.579,285,1.515,488,3.225,549,2.298,597,3.225,1258,4.964,1553,3.409,1671,3.623,1673,4.202,1675,4.904,1676,6.421,1677,6.421,1678,4.633]],["title/classes/UserNotFoundException-2.html",[27,0.131,240,1.589,1679,3.528]],["body/classes/UserNotFoundException-2.html",[3,0.164,4,0.164,5,0.148,12,0.545,14,1.14,15,0.011,16,1.042,17,0.502,18,1.042,22,0.215,25,0.59,26,0.164,27,0.21,51,0.009,52,0.009,60,1.047,147,1.774,154,3.685,171,3.128,211,1.721,240,3.403,285,1.622,597,3.452,1258,4.872,1671,3.877,1672,6.109,1673,4.497,1674,6.109,1675,4.152,1680,6.109]],["title/classes/UserWithoutSidekickException.html",[27,0.157,1553,2.724]],["body/classes/UserWithoutSidekickException.html",[3,0.153,4,0.153,5,0.138,12,0.509,14,1.065,15,0.011,16,0.973,17,0.469,18,0.973,22,0.201,25,0.551,26,0.194,27,0.249,51,0.009,52,0.009,60,1.067,147,1.658,154,3.873,171,2.923,240,3.009,241,4.579,285,1.515,488,3.225,549,2.298,597,3.225,1258,4.964,1553,4.309,1671,3.623,1675,4.904,1676,6.421,1677,6.421,1678,4.633,1681,5.287]],["title/interfaces/ValidatedUser.html",[903,2.895,904,3.1]],["body/interfaces/ValidatedUser.html",[3,0.122,4,0.122,5,0.11,7,0.389,15,0.012,17,0.581,18,1.059,21,3.622,22,0.289,23,1.059,25,0.438,26,0.122,27,0.157,29,1.494,32,2.328,39,4.571,40,0.873,41,3.186,51,0.008,52,0.008,64,1.968,147,1.32,153,2.884,154,2.225,156,3.089,162,3.798,164,1.554,165,1.542,188,4.571,189,1.494,211,2.243,244,3.798,245,3.089,296,2.714,299,3.089,304,4.221,306,3.04,317,3.089,414,2.984,575,3.089,890,3.345,894,3.688,896,3.688,897,3.688,898,3.345,899,3.688,900,5.04,901,3.345,902,3.345,903,2.884,904,4.808,905,6.171,906,3.688,907,3.688,908,3.688,909,3.688,910,3.688,911,3.688,912,3.688,913,3.688,914,3.688,915,3.688,916,3.688,917,3.688,918,3.688,919,3.688,920,3.688,921,3.688,922,3.688,923,3.688,924,3.688,925,3.688,926,3.688,927,3.688,928,3.688,1682,4.209]],["title/controllers/WorkoutsController.html",[53,1.045,1683,3.1]],["body/controllers/WorkoutsController.html",[3,0.09,4,0.09,5,0.081,7,0.287,8,0.987,12,0.72,14,1.473,15,0.011,16,1.347,17,0.649,18,1.347,20,1.598,22,0.21,25,0.323,26,0.09,27,0.115,30,1.507,40,1.551,51,0.006,52,0.006,53,0.767,55,0.745,58,1.745,60,1.115,63,0.837,186,1.396,190,1.713,206,3.934,221,4.643,235,2.584,237,1.507,422,2.716,428,1.891,429,1.713,434,2.716,549,2.362,606,3.166,697,2.679,700,2.247,712,2.274,715,2.274,734,2.716,736,2.716,770,2.463,779,2.274,786,2.274,794,2.463,802,2.979,1030,5.813,1049,4.049,1082,3.672,1335,2.979,1528,3.391,1595,2.716,1599,2.716,1619,2.716,1621,2.716,1683,3.391,1684,2.716,1685,2.716,1686,4.049,1687,5.367,1688,4.342,1689,3.099,1690,3.099,1691,3.099,1692,3.099,1693,3.099,1694,2.716,1695,3.099,1696,3.099,1697,3.099,1698,3.099,1699,3.099,1700,3.099,1701,3.099,1702,3.099,1703,3.099,1704,3.099,1705,3.099,1706,3.099,1707,3.099,1708,2.716,1709,3.562,1710,2.716,1711,3.099,1712,3.099,1713,3.099,1714,3.099,1715,3.099,1716,3.099,1717,3.099,1718,3.099,1719,3.099,1720,3.099,1721,3.099,1722,3.099,1723,3.099,1724,3.099,1725,3.099,1726,3.099,1727,3.099,1728,3.099,1729,3.099,1730,3.099]],["title/classes/WorkoutsDto.html",[27,0.157,1688,2.577]],["body/classes/WorkoutsDto.html",[3,0.16,4,0.16,5,0.144,7,0.511,12,0.72,15,0.011,17,0.663,22,0.21,26,0.16,27,0.255,51,0.009,52,0.009,58,1.289,60,1.083,164,1.855,247,2.024,285,1.583,288,3.053,291,3.796,292,2.78,414,3.025,549,2.57,624,2.78,629,2.919,633,3.053,1060,4.56,1688,4.19,1731,4.839,1732,5.523,1733,5.523,1734,5.523]],["title/classes/WorkoutsDto-1.html",[27,0.131,584,2.274,1688,2.152]],["body/classes/WorkoutsDto-1.html",[3,0.147,4,0.147,5,0.132,7,0.467,12,0.754,15,0.011,17,0.694,22,0.192,26,0.147,27,0.242,51,0.008,52,0.008,58,1.674,60,1.049,164,1.754,247,1.852,285,1.449,288,2.794,291,4.186,292,2.628,414,2.904,549,2.467,624,3.244,625,4.765,633,3.966,1060,4.377,1688,3.962,1735,4.429,1736,6.287,1737,6.287,1738,5.055,1739,5.055,1740,5.055,1741,5.055,1742,5.055]],["title/modules/WorkoutsModule.html",[66,0.986,93,2.895]],["body/modules/WorkoutsModule.html",[3,0.159,4,0.159,5,0.143,15,0.011,22,0.283,25,0.571,26,0.159,27,0.204,51,0.009,52,0.009,55,1.643,66,1.739,68,2.01,69,2.01,70,2.146,71,2.146,72,2.01,73,2.916,74,2.146,93,5.609,95,2.676,96,2.076,97,2.076,1683,5.468,1709,5.277,1710,4.806,1743,4.806,1744,4.806,1745,5.485,1746,5.485]],["title/injectables/WorkoutsService.html",[23,0.778,1709,2.724]],["body/injectables/WorkoutsService.html",[3,0.059,4,0.059,5,0.053,7,0.187,8,0.707,12,0.648,14,1.318,15,0.012,16,1.204,17,0.58,18,1.204,20,1.398,22,0.23,23,0.609,25,0.211,26,0.059,27,0.075,29,2.388,32,2.558,40,1.311,41,2.6,43,3.033,46,2.585,51,0.004,52,0.004,60,1.079,63,0.546,141,0.717,147,0.634,165,2.946,189,2.853,207,2.558,211,2.097,240,0.91,241,1.385,242,2.132,311,1.835,339,0.983,345,2.922,400,1.489,414,2.323,415,3.099,511,1.117,527,1.606,549,2.37,554,1.385,597,2.017,606,2.266,624,2.648,697,1.917,700,1.608,712,2.426,715,2.426,720,1.233,802,2.132,803,1.385,805,2.266,807,3.322,821,3.322,822,1.385,997,1.771,1030,5.023,1060,2.017,1082,2.628,1084,2.628,1086,4.249,1095,1.606,1098,2.897,1110,1.771,1208,3.923,1258,1.303,1327,2.628,1335,2.132,1528,2.426,1553,1.303,1559,1.771,1561,2.897,1562,1.771,1580,3.677,1685,2.897,1686,5.029,1687,4.248,1688,3.696,1694,2.897,1708,1.771,1709,2.132,1736,1.771,1737,1.771,1747,1.771,1748,2.021,1749,2.021,1750,3.307,1751,2.021,1752,2.021,1753,3.307,1754,2.021,1755,2.021,1756,3.307,1757,2.021,1758,3.307,1759,2.021,1760,2.021,1761,2.021,1762,2.021,1763,4.848,1764,2.021,1765,5.74,1766,2.021,1767,2.021,1768,2.021,1769,2.021,1770,2.021,1771,4.848,1772,2.021,1773,3.307,1774,2.021,1775,2.021,1776,2.021,1777,2.021,1778,3.307,1779,2.021,1780,2.021,1781,2.021,1782,2.021]],["title/coverage.html",[1783,5.053]],["body/coverage.html",[0,1.9,1,1.458,5,0.062,6,2.095,15,0.011,17,0.212,23,1.466,27,0.306,46,1.076,51,0.005,52,0.005,53,1.912,54,1.754,56,2.095,61,1.541,72,0.876,94,1.458,99,1.638,108,1.754,142,2.095,146,2.095,162,1.386,163,2.095,165,0.876,184,1.754,185,2.095,203,1.638,240,2.115,241,2.593,244,1.386,286,2.095,296,1.541,305,2.095,311,0.905,312,1.541,375,2.095,416,1.754,417,2.095,430,1.386,431,1.458,441,2.095,458,1.638,506,3.008,507,1.754,511,1.321,529,1.9,554,5.979,615,1.541,616,2.095,617,3.008,635,1.638,636,2.095,637,3.008,644,1.754,645,2.095,646,3.008,647,1.638,648,2.095,649,2.095,653,2,654,3.008,679,1.638,681,2.095,693,1.754,694,2.095,716,1.638,720,1.458,742,2.095,758,1.754,759,2.095,773,1.638,780,1.541,801,2.095,830,1.754,831,2.095,843,1.458,857,2.095,890,3.008,903,1.638,904,1.754,929,2.095,934,1.754,935,2.095,939,1.754,942,1.541,951,2.095,961,2.095,1008,1.638,1009,2.095,1010,3.008,1013,2.095,1022,1.638,1034,1.638,1057,2.095,1081,2.095,1120,1.754,1121,2.095,1126,1.541,1136,2.095,1182,1.754,1183,2.095,1188,1.638,1191,1.541,1202,2.095,1216,2.095,1228,1.754,1229,2.095,1240,1.541,1251,2.095,1270,1.9,1306,1.754,1307,2.095,1312,1.541,1321,2.095,1331,1.754,1332,2.095,1364,1.541,1394,2.095,1416,1.754,1457,2.095,1463,2.095,1465,2.095,1477,1.9,1478,2.095,1481,2.095,1482,2.095,1489,1.754,1490,2.095,1499,1.541,1514,2.095,1526,2.095,1527,2.095,1537,1.638,1553,1.541,1592,1.754,1593,2.095,1651,2.095,1670,2.095,1671,3.661,1680,2.095,1683,1.754,1684,2.095,1688,2.309,1709,1.541,1731,2.095,1735,2.095,1747,2.095,1783,2.095,1784,2.095,1785,2.391,1786,2.391,1787,7.567,1788,4.698,1789,4.698,1790,6.192,1791,7.472,1792,7.095,1793,2.391,1794,5.342,1795,4.698,1796,6.192,1797,2.095,1798,2.095,1799,5.342,1800,4.698,1801,2.391,1802,2.095,1803,2.391,1804,2.391,1805,2.391]],["title/dependencies.html",[69,1.862,1806,3.091]],["body/dependencies.html",[15,0.012,25,0.49,27,0.23,51,0.008,52,0.008,69,1.722,103,2.725,107,3.736,125,3.736,127,3.449,128,3.449,153,3.221,247,1.722,304,3.449,330,4.119,335,4.119,336,4.119,337,4.119,338,4.119,475,4.119,477,3.736,632,2.286,841,4.923,842,3.449,858,5.428,865,4.923,866,4.923,868,4.119,898,4.923,901,3.736,902,3.736,967,4.119,1395,4.119,1460,3.736,1461,3.449,1807,4.701,1808,4.701,1809,7.654,1810,4.701,1811,4.701,1812,4.701,1813,4.701,1814,4.701,1815,4.701,1816,4.701,1817,4.701,1818,4.701,1819,4.701,1820,4.701,1821,4.701,1822,4.701,1823,4.701,1824,4.701,1825,4.701,1826,4.701,1827,4.701,1828,4.701,1829,4.701,1830,4.701,1831,4.701,1832,4.701,1833,4.701,1834,4.701,1835,4.701,1836,4.701,1837,4.701,1838,4.701,1839,4.701,1840,4.701]],["title/miscellaneous/functions.html",[1841,2.274,1842,4.452]],["body/miscellaneous/functions.html",[7,0.609,15,0.01,51,0.01,52,0.01,72,2.954,1802,5.77,1841,4.245,1842,5.77,1843,6.585]],["title/index.html",[7,0.326,1844,3.091,1845,3.091]],["body/index.html",[15,0.01,51,0.01,52,0.01,314,5.752,559,5.831,700,2.994,1846,6.157,1847,6.157,1848,6.157,1849,6.157,1850,6.157,1851,7.839,1852,6.157,1853,6.157,1854,6.157,1855,6.157,1856,6.157,1857,6.157,1858,6.157,1859,6.157,1860,6.157,1861,6.157]],["title/license.html",[1844,3.091,1845,3.091,1862,2.803]],["body/license.html",[15,0.008,42,4.294,51,0.008,52,0.008,97,1.855,461,3.895,488,2.99,827,4.294,842,3.596,1268,4.294,1406,4.294,1784,4.294,1862,3.895,1863,4.901,1864,7.07,1865,4.901,1866,4.901,1867,6.366,1868,4.901,1869,4.901,1870,4.901,1871,4.901,1872,4.901,1873,4.901,1874,6.366,1875,8.294,1876,4.901,1877,4.901,1878,4.901,1879,7.07,1880,4.901,1881,6.366,1882,4.901,1883,4.901,1884,6.366,1885,4.901,1886,4.901,1887,4.901,1888,4.901,1889,4.901,1890,4.901,1891,6.366,1892,4.901,1893,4.901,1894,4.901,1895,4.901,1896,4.901,1897,4.901,1898,6.366,1899,6.366,1900,4.901,1901,4.901,1902,4.901,1903,4.901,1904,4.901,1905,4.901,1906,4.901,1907,4.901,1908,4.901,1909,4.901,1910,4.901,1911,4.901,1912,4.901,1913,4.901,1914,4.901,1915,4.901,1916,4.901,1917,4.901,1918,4.901,1919,4.901,1920,4.901,1921,4.901,1922,4.901,1923,4.901,1924,4.901,1925,4.901]],["title/modules.html",[68,2.113]],["body/modules.html",[15,0.008,51,0.008,52,0.008,67,3.663,68,1.829,78,3.421,79,3.218,80,3.421,81,3.421,82,3.218,83,3.421,84,3.421,85,3.421,86,3.421,87,3.421,88,3.421,89,3.421,90,3.421,91,3.421,92,3.045,93,3.421,1926,8.662,1927,8.662,1928,8.662,1929,8.662]],["title/overview.html",[1930,5.053]],["body/overview.html",[0,2.279,15,0.011,51,0.006,52,0.006,55,0.689,61,3.399,66,0.669,67,6.32,68,1.051,69,1.051,70,1.122,71,1.122,72,1.051,73,1.122,74,1.122,75,2.512,76,2.512,77,2.512,78,5.198,79,4.718,80,4.34,81,4.34,82,4.47,83,4.751,84,4.34,85,4.34,86,4.34,87,4.571,88,4.571,89,4.751,90,4.34,91,4.34,92,4.553,93,4.34,94,3.593,95,1.705,96,1.085,97,1.085,141,1.018,162,3.056,244,3.056,285,0.822,293,2.512,295,2.512,296,3.399,311,2.704,312,3.797,431,3.216,498,2.512,499,2.512,501,2.512,511,3.833,584,2.81,720,3.216,738,2.512,739,2.512,780,3.399,797,2.512,798,2.512,843,4.23,852,2.512,853,2.512,854,2.512,903,1.965,942,3.399,956,2.512,957,2.512,1126,3.399,1132,2.512,1133,2.512,1191,3.399,1198,2.512,1199,2.512,1210,2.512,1211,2.512,1212,2.512,1240,3.399,1247,2.512,1248,2.512,1312,3.399,1317,2.512,1318,2.512,1364,3.399,1390,2.512,1391,2.512,1499,3.399,1510,2.512,1511,2.512,1664,2.512,1665,2.512,1666,2.512,1709,3.399,1743,2.512,1744,2.512,1930,2.512,1931,2.867,1932,2.867,1933,2.867,1934,2.867]],["title/properties.html",[164,1.373,1806,3.091]],["body/properties.html",[15,0.011,51,0.01,52,0.01,164,1.757,618,3.771,1862,5.169,1935,6.505,1936,6.505,1937,6.505,1938,6.505]],["title/miscellaneous/typealiases.html",[1841,2.274,1939,5.081]],["body/miscellaneous/typealiases.html",[7,0.578,15,0.01,17,0.723,51,0.01,52,0.01,487,5.434,1270,4.969,1282,6.489,1517,5.79,1841,4.031,1940,6.252,1941,7.405,1942,7.405,1943,6.252,1944,6.252]],["title/miscellaneous/variables.html",[1841,2.274,1945,4.452]],["body/miscellaneous/variables.html",[7,0.525,11,4.513,15,0.011,17,0.504,19,4.513,29,2.015,30,2.761,31,4.976,40,1.178,41,2.761,51,0.009,52,0.009,165,2.56,171,4.184,172,5.186,400,2.557,430,4.051,506,4.513,529,5.553,530,4.976,585,4.513,624,2.298,1797,4.976,1798,4.976,1841,3.661,1945,4.976,1946,5.679,1947,5.679,1948,5.679,1949,5.679,1950,5.679,1951,5.679]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AtGuard.html":{},"injectables/AuthConfig.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/CreateExercisesLibraryDto.html":{},"classes/CreateFeedbackUserDto.html":{},"classes/CreateOpenffDto.html":{},"classes/CreateTicketDto.html":{},"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"controllers/ExercisesLibraryController.html":{},"modules/ExercisesLibraryModule.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/FeedbackUserController.html":{},"modules/FeedbackUserModule.html":{},"injectables/FeedbackUserService.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GetUserAdminDto.html":{},"injectables/JwtStrategy.html":{},"classes/MatchEvent.html":{},"controllers/MealRecoController.html":{},"classes/MealRecoDto.html":{},"modules/MealRecoModule.html":{},"injectables/MealRecoService.html":{},"classes/ModeratorAnswerDto.html":{},"controllers/NutritionController.html":{},"classes/NutritionDto.html":{},"modules/NutritionModule.html":{},"injectables/NutritionService.html":{},"controllers/OpenffController.html":{},"modules/OpenffModule.html":{},"injectables/OpenffService.html":{},"controllers/PreferencesController.html":{},"modules/PreferencesModule.html":{},"injectables/PreferencesService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ReportsController.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"classes/Rooms.html":{},"controllers/StepsController.html":{},"modules/StepsModule.html":{},"injectables/StepsService.html":{},"controllers/TicketsController.html":{},"modules/TicketsModule.html":{},"injectables/TicketsService.html":{},"classes/UpdateExercisesLibraryDto.html":{},"classes/UpdateFeedbackUserDto.html":{},"classes/UpdateNutritionDto.html":{},"classes/UpdateOpenffDto.html":{},"classes/UpdatePreferenceDto.html":{},"controllers/UserAdminController.html":{},"modules/UserAdminModule.html":{},"injectables/UserAdminService.html":{},"classes/UserAnswerDto.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"classes/UserInfosDto.html":{},"modules/UserInfosModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{},"classes/UserWithoutSidekickException.html":{},"interfaces/ValidatedUser.html":{},"controllers/WorkoutsController.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{},"modules/WorkoutsModule.html":{},"injectables/WorkoutsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":554,"title":{},"body":{"injectables/ChatService.html":{},"injectables/NutritionService.html":{},"controllers/TicketsController.html":{},"injectables/WorkoutsService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1936,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1835,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1823,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":1001,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["0.28.5",{"_index":1818,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1822,"title":{},"body":{"dependencies.html":{}}}],["0.5.3",{"_index":1831,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1796,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1794,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1789,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1790,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1803,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1787,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1791,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1792,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1801,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1788,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1799,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1800,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1793,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":584,"title":{"classes/EditInfosDto-1.html":{},"classes/UserNotFoundException-1.html":{},"classes/WorkoutsDto-1.html":{}},"body":{"injectables/ChatService.html":{},"injectables/OpenffService.html":{},"overview.html":{}}}],["1.0",{"_index":1159,"title":{},"body":{"injectables/OpenffService.html":{}}}],["1.4.0",{"_index":1820,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1433,"title":{},"body":{"injectables/TicketsService.html":{}}}],["10.0.2",{"_index":1813,"title":{},"body":{"dependencies.html":{}}}],["100000000",{"_index":1629,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["15",{"_index":530,"title":{},"body":{"injectables/ChatService.html":{},"miscellaneous/variables.html":{}}}],["16",{"_index":1932,"title":{},"body":{"overview.html":{}}}],["17",{"_index":1931,"title":{},"body":{"overview.html":{}}}],["1mpnqzsdjrbns",{"_index":1178,"title":{},"body":{"injectables/OpenffService.html":{}}}],["2",{"_index":1679,"title":{"classes/UserNotFoundException-2.html":{}},"body":{}}],["2.0.2",{"_index":1811,"title":{},"body":{"dependencies.html":{}}}],["2.1.4",{"_index":1827,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1810,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1933,"title":{},"body":{"overview.html":{}}}],["200",{"_index":1777,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["2022",{"_index":1866,"title":{},"body":{"license.html":{}}}],["27",{"_index":1934,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":1829,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":1837,"title":{},"body":{"dependencies.html":{}}}],["3.289.0",{"_index":1807,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":1830,"title":{},"body":{"dependencies.html":{}}}],["3.433.0",{"_index":1808,"title":{},"body":{"dependencies.html":{}}}],["3.5",{"_index":997,"title":{},"body":{"injectables/MealRecoService.html":{},"injectables/WorkoutsService.html":{}}}],["300",{"_index":1003,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["4.0.0",{"_index":1832,"title":{},"body":{"dependencies.html":{}}}],["4.2.1",{"_index":1815,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":911,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["5.1.0",{"_index":1826,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":1816,"title":{},"body":{"dependencies.html":{}}}],["5.2.10",{"_index":1817,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"controllers/MealRecoController.html":{}}}],["7.2.0",{"_index":1839,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1456,"title":{},"body":{"injectables/TicketsService.html":{}}}],["9.0.0",{"_index":1840,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":1814,"title":{},"body":{"dependencies.html":{}}}],["9.3.9",{"_index":1809,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["_fileservice",{"_index":1533,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["_prismaservice",{"_index":805,"title":{},"body":{"injectables/FeedbackUserService.html":{},"injectables/NutritionService.html":{},"injectables/StepsService.html":{},"injectables/UserInfoService.html":{},"injectables/WorkoutsService.html":{}}}],["_res",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["_result",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["above",{"_index":1897,"title":{},"body":{"license.html":{}}}],["acceptable",{"_index":1634,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["access",{"_index":49,"title":{},"body":{"guards/AdminGuard.html":{}}}],["access_token",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesskeyid",{"_index":871,"title":{},"body":{"injectables/FileService.html":{},"injectables/TicketsService.html":{}}}],["acl",{"_index":883,"title":{},"body":{"injectables/FileService.html":{}}}],["act",{"_index":984,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["action",{"_index":1920,"title":{},"body":{"license.html":{}}}],["activities",{"_index":655,"title":{},"body":{"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"classes/GetUserAdminDto.html":{},"injectables/UserInfoService.html":{},"classes/UserInfosDto.html":{}}}],["add",{"_index":802,"title":{},"body":{"injectables/FeedbackUserService.html":{},"injectables/NutritionService.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"controllers/WorkoutsController.html":{},"injectables/WorkoutsService.html":{}}}],["add(@request",{"_index":1621,"title":{},"body":{"controllers/UserInfosController.html":{},"controllers/WorkoutsController.html":{}}}],["add(datas",{"_index":1084,"title":{},"body":{"injectables/NutritionService.html":{},"injectables/UserInfoService.html":{},"injectables/WorkoutsService.html":{}}}],["add(feedback",{"_index":806,"title":{},"body":{"injectables/FeedbackUserService.html":{}}}],["add(req",{"_index":1595,"title":{},"body":{"controllers/UserInfosController.html":{},"controllers/WorkoutsController.html":{}}}],["addfeedback",{"_index":761,"title":{},"body":{"controllers/FeedbackUserController.html":{}}}],["addfeedback(@request",{"_index":784,"title":{},"body":{"controllers/FeedbackUserController.html":{}}}],["addfeedback(req",{"_index":765,"title":{},"body":{"controllers/FeedbackUserController.html":{}}}],["addmeal",{"_index":1015,"title":{},"body":{"controllers/NutritionController.html":{}}}],["addmeal(@request",{"_index":1042,"title":{},"body":{"controllers/NutritionController.html":{}}}],["addmeal(req",{"_index":1021,"title":{},"body":{"controllers/NutritionController.html":{}}}],["addroom",{"_index":1271,"title":{},"body":{"classes/Rooms.html":{}}}],["addroom(room",{"_index":1279,"title":{},"body":{"classes/Rooms.html":{}}}],["addusertoroom",{"_index":1272,"title":{},"body":{"classes/Rooms.html":{}}}],["addusertoroom(roomid",{"_index":1281,"title":{},"body":{"classes/Rooms.html":{}}}],["admin",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["admin(@res",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{}}}],["admin(res",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["admin_response",{"_index":1449,"title":{},"body":{"injectables/TicketsService.html":{}}}],["adminguard",{"_index":1,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"controllers/TicketsController.html":{},"controllers/UserAdminController.html":{},"controllers/UserInfosController.html":{},"coverage.html":{}}}],["admins",{"_index":48,"title":{},"body":{"guards/AdminGuard.html":{}}}],["algorithms",{"_index":921,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["aliases",{"_index":1940,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowed",{"_index":1643,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["already",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazon",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["and/or",{"_index":1889,"title":{},"body":{"license.html":{}}}],["answer",{"_index":1011,"title":{},"body":{"classes/ModeratorAnswerDto.html":{},"controllers/TicketsController.html":{},"injectables/TicketsService.html":{},"classes/UserAnswerDto.html":{}}}],["answer(@body",{"_index":1379,"title":{},"body":{"controllers/TicketsController.html":{}}}],["answer(dto",{"_index":1340,"title":{},"body":{"controllers/TicketsController.html":{}}}],["answer(undefined",{"_index":1398,"title":{},"body":{"injectables/TicketsService.html":{}}}],["answer.dto",{"_index":1368,"title":{},"body":{"controllers/TicketsController.html":{},"injectables/TicketsService.html":{}}}],["answer.dto.ts",{"_index":1010,"title":{},"body":{"classes/ModeratorAnswerDto.html":{},"classes/UserAnswerDto.html":{},"coverage.html":{}}}],["answer.dto.ts:5",{"_index":1012,"title":{},"body":{"classes/ModeratorAnswerDto.html":{},"classes/UserAnswerDto.html":{}}}],["answered",{"_index":1440,"title":{},"body":{"injectables/TicketsService.html":{}}}],["answered_by_moderator",{"_index":1441,"title":{},"body":{"injectables/TicketsService.html":{}}}],["answered_by_user",{"_index":1438,"title":{},"body":{"injectables/TicketsService.html":{}}}],["apikey",{"_index":968,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["app",{"_index":1175,"title":{},"body":{"injectables/OpenffService.html":{}}}],["app.controller",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":54,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application/json",{"_index":1142,"title":{},"body":{"injectables/OpenffService.html":{}}}],["appmodule",{"_index":67,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":61,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argon",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon.hash(dto.password",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["arising",{"_index":1923,"title":{},"body":{"license.html":{}}}],["asc",{"_index":1435,"title":{},"body":{"injectables/TicketsService.html":{}}}],["assistant",{"_index":993,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["associated",{"_index":1876,"title":{},"body":{"license.html":{}}}],["async",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"injectables/ExercisesLibraryService.html":{},"injectables/FeedbackUserService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/MealRecoService.html":{},"injectables/NutritionService.html":{},"injectables/OpenffService.html":{},"injectables/PreferencesService.html":{},"injectables/PrismaService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"injectables/StepsService.html":{},"injectables/TicketsService.html":{},"injectables/UserInfoService.html":{},"interfaces/ValidatedUser.html":{},"injectables/WorkoutsService.html":{}}}],["atguard",{"_index":108,"title":{"injectables/AtGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/AtGuard.html":{},"coverage.html":{}}}],["audience",{"_index":915,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["auth",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.config",{"_index":299,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["auth.controller",{"_index":300,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["auth/auth.module",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["authconfig",{"_index":162,"title":{"injectables/AuthConfig.html":{}},"body":{"injectables/AuthConfig.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{},"coverage.html":{},"overview.html":{}}}],["authconfig.authority",{"_index":920,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["authconfig.authority}/.well",{"_index":913,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["authconfig.clientid",{"_index":916,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["authcontroller",{"_index":184,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authdto",{"_index":203,"title":{"classes/AuthDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authenticated",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticationdetails",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticationdetails.getpassword",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["authguard",{"_index":152,"title":{},"body":{"injectables/AtGuard.html":{}}}],["authguard('jwt",{"_index":155,"title":{},"body":{"injectables/AtGuard.html":{}}}],["authmodule",{"_index":78,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1938,"title":{},"body":{"properties.html":{}}}],["authority",{"_index":166,"title":{},"body":{"injectables/AuthConfig.html":{}}}],["authors",{"_index":1913,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":244,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{},"coverage.html":{},"overview.html":{}}}],["avatar",{"_index":1567,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["await",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ExercisesLibraryService.html":{},"injectables/FeedbackUserService.html":{},"injectables/FileService.html":{},"injectables/MealRecoService.html":{},"injectables/NutritionService.html":{},"injectables/OpenffService.html":{},"injectables/PreferencesService.html":{},"injectables/PrismaService.html":{},"injectables/ReportsService.html":{},"injectables/StepsService.html":{},"injectables/TicketsService.html":{},"injectables/UserInfoService.html":{},"injectables/WorkoutsService.html":{}}}],["aws",{"_index":865,"title":{},"body":{"injectables/FileService.html":{},"injectables/TicketsService.html":{},"dependencies.html":{}}}],["axios",{"_index":1819,"title":{},"body":{"dependencies.html":{}}}],["back",{"_index":980,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["base_url",{"_index":37,"title":{},"body":{"guards/AdminGuard.html":{}}}],["bio",{"_index":1572,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["birth_date",{"_index":1564,"title":{},"body":{"injectables/UserInfoService.html":{},"classes/UserInfosDto.html":{}}}],["body",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExercisesLibraryController.html":{},"controllers/FeedbackUserController.html":{},"injectables/FileService.html":{},"controllers/MealRecoController.html":{},"controllers/NutritionController.html":{},"controllers/PreferencesController.html":{},"controllers/ReportsController.html":{},"controllers/TicketsController.html":{},"injectables/TicketsService.html":{},"controllers/UserAdminController.html":{},"controllers/UserInfosController.html":{},"controllers/WorkoutsController.html":{}}}],["body(\"email",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{}}}],["body(\"reason",{"_index":1243,"title":{},"body":{"controllers/ReportsController.html":{}}}],["body(\"verificationcode",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{}}}],["body.goal",{"_index":950,"title":{},"body":{"controllers/MealRecoController.html":{}}}],["boolean",{"_index":21,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AtGuard.html":{},"classes/EditInfosDto.html":{},"classes/GetUserAdminDto.html":{},"injectables/JwtStrategy.html":{},"classes/UpdatePreferenceDto.html":{},"controllers/UserAdminController.html":{},"injectables/UserAdminService.html":{},"interfaces/ValidatedUser.html":{}}}],["bootstrap",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChatModule.html":{},"modules/ExercisesLibraryModule.html":{},"modules/FeedbackUserModule.html":{},"modules/FileModule.html":{},"modules/MealRecoModule.html":{},"modules/NutritionModule.html":{},"modules/OpenffModule.html":{},"modules/PreferencesModule.html":{},"modules/PrismaModule.html":{},"modules/ReportsModule.html":{},"modules/StepsModule.html":{},"modules/TicketsModule.html":{},"modules/UserAdminModule.html":{},"modules/UserInfosModule.html":{},"modules/WorkoutsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":607,"title":{},"body":{"injectables/ChatService.html":{}}}],["brands",{"_index":1151,"title":{},"body":{"injectables/OpenffService.html":{}}}],["breakfast",{"_index":1103,"title":{},"body":{"injectables/NutritionService.html":{}}}],["breakfasts",{"_index":1102,"title":{},"body":{"injectables/NutritionService.html":{}}}],["breakfasts.reduce((total",{"_index":1116,"title":{},"body":{"injectables/NutritionService.html":{}}}],["browse",{"_index":1929,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1926,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":878,"title":{},"body":{"injectables/FileService.html":{}}}],["burnedcalories",{"_index":1686,"title":{},"body":{"controllers/WorkoutsController.html":{},"injectables/WorkoutsService.html":{}}}],["burnedcalories(@request",{"_index":1717,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["burnedcalories(email",{"_index":1750,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["burnedcalories(req",{"_index":1691,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["c",{"_index":1865,"title":{},"body":{"license.html":{}}}],["cache",{"_index":908,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["calories",{"_index":1058,"title":{},"body":{"classes/NutritionDto.html":{},"injectables/NutritionService.html":{},"classes/UpdateNutritionDto.html":{}}}],["canactivate",{"_index":9,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AtGuard.html":{}}}],["canactivate(context",{"_index":10,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AtGuard.html":{}}}],["carbohydrates_100g",{"_index":1160,"title":{},"body":{"injectables/OpenffService.html":{}}}],["carbs",{"_index":1059,"title":{},"body":{"classes/NutritionDto.html":{},"injectables/NutritionService.html":{},"classes/UpdateNutritionDto.html":{}}}],["catch",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/FileService.html":{},"injectables/MealRecoService.html":{},"injectables/OpenffService.html":{}}}],["catch((error",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["cb",{"_index":1631,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["cb(new",{"_index":1640,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["cb(null",{"_index":1639,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["change",{"_index":1231,"title":{},"body":{"controllers/ReportsController.html":{},"injectables/ReportsService.html":{}}}],["change(currentuser",{"_index":1232,"title":{},"body":{"controllers/ReportsController.html":{}}}],["change(reporter",{"_index":1253,"title":{},"body":{"injectables/ReportsService.html":{}}}],["charge",{"_index":1871,"title":{},"body":{"license.html":{}}}],["charset",{"_index":1412,"title":{},"body":{"injectables/TicketsService.html":{}}}],["chat",{"_index":418,"title":{},"body":{"controllers/ChatController.html":{}}}],["chat.controller",{"_index":505,"title":{},"body":{"modules/ChatModule.html":{}}}],["chat.gateway",{"_index":504,"title":{},"body":{"modules/ChatModule.html":{}}}],["chat.helper",{"_index":528,"title":{},"body":{"injectables/ChatService.html":{}}}],["chat.service",{"_index":432,"title":{},"body":{"controllers/ChatController.html":{},"modules/ChatModule.html":{}}}],["chat/chat.gateway",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["chat/chat.module",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["chat/chat.service",{"_index":476,"title":{},"body":{"classes/ChatGateway.html":{}}}],["chatcontroller",{"_index":416,"title":{"controllers/ChatController.html":{}},"body":{"controllers/ChatController.html":{},"modules/ChatModule.html":{},"coverage.html":{}}}],["chatgateway",{"_index":312,"title":{"classes/ChatGateway.html":{}},"body":{"injectables/AuthService.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"coverage.html":{},"overview.html":{}}}],["chatmodule",{"_index":79,"title":{"modules/ChatModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChatModule.html":{},"modules.html":{},"overview.html":{}}}],["chatservice",{"_index":431,"title":{"injectables/ChatService.html":{}},"body":{"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"coverage.html":{},"overview.html":{}}}],["claim",{"_index":1916,"title":{},"body":{"license.html":{}}}],["class",{"_index":27,"title":{"classes/AuthDto.html":{},"classes/ChatGateway.html":{},"classes/CreateExercisesLibraryDto.html":{},"classes/CreateFeedbackUserDto.html":{},"classes/CreateOpenffDto.html":{},"classes/CreateTicketDto.html":{},"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"classes/GetUserAdminDto.html":{},"classes/MatchEvent.html":{},"classes/MealRecoDto.html":{},"classes/ModeratorAnswerDto.html":{},"classes/NutritionDto.html":{},"classes/Rooms.html":{},"classes/UpdateExercisesLibraryDto.html":{},"classes/UpdateFeedbackUserDto.html":{},"classes/UpdateNutritionDto.html":{},"classes/UpdateOpenffDto.html":{},"classes/UpdatePreferenceDto.html":{},"classes/UserAnswerDto.html":{},"classes/UserInfosDto.html":{},"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{},"classes/UserWithoutSidekickException.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{}},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AtGuard.html":{},"injectables/AuthConfig.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/CreateExercisesLibraryDto.html":{},"classes/CreateFeedbackUserDto.html":{},"classes/CreateOpenffDto.html":{},"classes/CreateTicketDto.html":{},"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"controllers/ExercisesLibraryController.html":{},"modules/ExercisesLibraryModule.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/FeedbackUserController.html":{},"modules/FeedbackUserModule.html":{},"injectables/FeedbackUserService.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GetUserAdminDto.html":{},"injectables/JwtStrategy.html":{},"classes/MatchEvent.html":{},"controllers/MealRecoController.html":{},"classes/MealRecoDto.html":{},"modules/MealRecoModule.html":{},"injectables/MealRecoService.html":{},"classes/ModeratorAnswerDto.html":{},"controllers/NutritionController.html":{},"classes/NutritionDto.html":{},"modules/NutritionModule.html":{},"injectables/NutritionService.html":{},"controllers/OpenffController.html":{},"modules/OpenffModule.html":{},"injectables/OpenffService.html":{},"controllers/PreferencesController.html":{},"modules/PreferencesModule.html":{},"injectables/PreferencesService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ReportsController.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"classes/Rooms.html":{},"controllers/StepsController.html":{},"modules/StepsModule.html":{},"injectables/StepsService.html":{},"controllers/TicketsController.html":{},"modules/TicketsModule.html":{},"injectables/TicketsService.html":{},"classes/UpdateExercisesLibraryDto.html":{},"classes/UpdateFeedbackUserDto.html":{},"classes/UpdateNutritionDto.html":{},"classes/UpdateOpenffDto.html":{},"classes/UpdatePreferenceDto.html":{},"controllers/UserAdminController.html":{},"modules/UserAdminModule.html":{},"injectables/UserAdminService.html":{},"classes/UserAnswerDto.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"classes/UserInfosDto.html":{},"modules/UserInfosModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{},"classes/UserWithoutSidekickException.html":{},"interfaces/ValidatedUser.html":{},"controllers/WorkoutsController.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{},"modules/WorkoutsModule.html":{},"injectables/WorkoutsService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":285,"title":{},"body":{"classes/AuthDto.html":{},"classes/ChatGateway.html":{},"classes/CreateExercisesLibraryDto.html":{},"classes/CreateFeedbackUserDto.html":{},"classes/CreateOpenffDto.html":{},"classes/CreateTicketDto.html":{},"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"classes/GetUserAdminDto.html":{},"classes/MatchEvent.html":{},"classes/MealRecoDto.html":{},"classes/ModeratorAnswerDto.html":{},"classes/NutritionDto.html":{},"classes/Rooms.html":{},"classes/UpdateExercisesLibraryDto.html":{},"classes/UpdateFeedbackUserDto.html":{},"classes/UpdateNutritionDto.html":{},"classes/UpdateOpenffDto.html":{},"classes/UpdatePreferenceDto.html":{},"classes/UserAnswerDto.html":{},"classes/UserInfosDto.html":{},"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{},"classes/UserWithoutSidekickException.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{},"overview.html":{}}}],["cli",{"_index":1825,"title":{},"body":{"dependencies.html":{}}}],["client",{"_index":466,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/MealRecoService.html":{}}}],["clientid",{"_index":167,"title":{},"body":{"injectables/AuthConfig.html":{},"injectables/AuthService.html":{}}}],["close",{"_index":1334,"title":{},"body":{"controllers/TicketsController.html":{},"injectables/TicketsService.html":{}}}],["close(@param(\"id",{"_index":1382,"title":{},"body":{"controllers/TicketsController.html":{}}}],["close(id",{"_index":1343,"title":{},"body":{"controllers/TicketsController.html":{},"injectables/TicketsService.html":{}}}],["closed",{"_index":1452,"title":{},"body":{"injectables/TicketsService.html":{}}}],["cluster_appmodule",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":293,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":294,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":295,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_chatmodule",{"_index":498,"title":{},"body":{"modules/ChatModule.html":{},"overview.html":{}}}],["cluster_chatmodule_exports",{"_index":501,"title":{},"body":{"modules/ChatModule.html":{},"overview.html":{}}}],["cluster_chatmodule_imports",{"_index":500,"title":{},"body":{"modules/ChatModule.html":{}}}],["cluster_chatmodule_providers",{"_index":499,"title":{},"body":{"modules/ChatModule.html":{},"overview.html":{}}}],["cluster_exerciseslibrarymodule",{"_index":738,"title":{},"body":{"modules/ExercisesLibraryModule.html":{},"overview.html":{}}}],["cluster_exerciseslibrarymodule_providers",{"_index":739,"title":{},"body":{"modules/ExercisesLibraryModule.html":{},"overview.html":{}}}],["cluster_feedbackusermodule",{"_index":797,"title":{},"body":{"modules/FeedbackUserModule.html":{},"overview.html":{}}}],["cluster_feedbackusermodule_providers",{"_index":798,"title":{},"body":{"modules/FeedbackUserModule.html":{},"overview.html":{}}}],["cluster_filemodule",{"_index":852,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_filemodule_exports",{"_index":853,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_filemodule_providers",{"_index":854,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_mealrecomodule",{"_index":956,"title":{},"body":{"modules/MealRecoModule.html":{},"overview.html":{}}}],["cluster_mealrecomodule_imports",{"_index":958,"title":{},"body":{"modules/MealRecoModule.html":{}}}],["cluster_mealrecomodule_providers",{"_index":957,"title":{},"body":{"modules/MealRecoModule.html":{},"overview.html":{}}}],["cluster_nutritionmodule",{"_index":1076,"title":{},"body":{"modules/NutritionModule.html":{}}}],["cluster_nutritionmodule_providers",{"_index":1077,"title":{},"body":{"modules/NutritionModule.html":{}}}],["cluster_openffmodule",{"_index":1132,"title":{},"body":{"modules/OpenffModule.html":{},"overview.html":{}}}],["cluster_openffmodule_providers",{"_index":1133,"title":{},"body":{"modules/OpenffModule.html":{},"overview.html":{}}}],["cluster_preferencesmodule",{"_index":1198,"title":{},"body":{"modules/PreferencesModule.html":{},"overview.html":{}}}],["cluster_preferencesmodule_providers",{"_index":1199,"title":{},"body":{"modules/PreferencesModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":1210,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":1212,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":1211,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_reportsmodule",{"_index":1247,"title":{},"body":{"modules/ReportsModule.html":{},"overview.html":{}}}],["cluster_reportsmodule_providers",{"_index":1248,"title":{},"body":{"modules/ReportsModule.html":{},"overview.html":{}}}],["cluster_stepsmodule",{"_index":1317,"title":{},"body":{"modules/StepsModule.html":{},"overview.html":{}}}],["cluster_stepsmodule_providers",{"_index":1318,"title":{},"body":{"modules/StepsModule.html":{},"overview.html":{}}}],["cluster_ticketsmodule",{"_index":1390,"title":{},"body":{"modules/TicketsModule.html":{},"overview.html":{}}}],["cluster_ticketsmodule_providers",{"_index":1391,"title":{},"body":{"modules/TicketsModule.html":{},"overview.html":{}}}],["cluster_useradminmodule",{"_index":1510,"title":{},"body":{"modules/UserAdminModule.html":{},"overview.html":{}}}],["cluster_useradminmodule_providers",{"_index":1511,"title":{},"body":{"modules/UserAdminModule.html":{},"overview.html":{}}}],["cluster_userinfosmodule",{"_index":1664,"title":{},"body":{"modules/UserInfosModule.html":{},"overview.html":{}}}],["cluster_userinfosmodule_exports",{"_index":1666,"title":{},"body":{"modules/UserInfosModule.html":{},"overview.html":{}}}],["cluster_userinfosmodule_imports",{"_index":1667,"title":{},"body":{"modules/UserInfosModule.html":{}}}],["cluster_userinfosmodule_providers",{"_index":1665,"title":{},"body":{"modules/UserInfosModule.html":{},"overview.html":{}}}],["cluster_workoutsmodule",{"_index":1743,"title":{},"body":{"modules/WorkoutsModule.html":{},"overview.html":{}}}],["cluster_workoutsmodule_providers",{"_index":1744,"title":{},"body":{"modules/WorkoutsModule.html":{},"overview.html":{}}}],["cognito",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["cognitoidtoken",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["cognitorefreshtoken",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["cognitouser",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["cognitouser(userdata",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["cognitouserpool",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["comment",{"_index":638,"title":{},"body":{"classes/CreateFeedbackUserDto.html":{},"classes/UpdateFeedbackUserDto.html":{}}}],["common/decorators",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ChatController.html":{},"controllers/FeedbackUserController.html":{},"controllers/FileController.html":{},"controllers/OpenffController.html":{},"controllers/PreferencesController.html":{},"controllers/TicketsController.html":{},"controllers/UserInfosController.html":{}}}],["common/decorators/current_user.decorator",{"_index":1239,"title":{},"body":{"controllers/ReportsController.html":{}}}],["common/events/match.event",{"_index":479,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{}}}],["common/guards",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"controllers/TicketsController.html":{},"controllers/UserInfosController.html":{}}}],["compose",{"_index":1848,"title":{},"body":{"index.html":{}}}],["concise",{"_index":986,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["conditions",{"_index":1896,"title":{},"body":{"license.html":{}}}],["configmodule",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/FileModule.html":{},"modules/PrismaModule.html":{}}}],["configmodule.forroot",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":861,"title":{},"body":{"injectables/FileService.html":{},"injectables/MealRecoService.html":{},"injectables/PrismaService.html":{},"injectables/TicketsService.html":{}}}],["configservice.get('database_url",{"_index":1225,"title":{},"body":{"injectables/PrismaService.html":{}}}],["configservice.get('openai_api_key",{"_index":969,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["configuration",{"_index":966,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["conflictexception",{"_index":1552,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["conflictexception(\"the",{"_index":1586,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["connect",{"_index":486,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/TicketsService.html":{}}}],["connected",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ChatService.html":{}}}],["connection",{"_index":1924,"title":{},"body":{"license.html":{}}}],["console.log(\"connect",{"_index":544,"title":{},"body":{"injectables/ChatService.html":{}}}],["console.log(\"disconnect",{"_index":550,"title":{},"body":{"injectables/ChatService.html":{}}}],["console.log(\"match",{"_index":489,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{}}}],["console.log(\"room",{"_index":596,"title":{},"body":{"injectables/ChatService.html":{}}}],["console.log('not",{"_index":928,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["console.log('user",{"_index":927,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["console.log(e",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(err",{"_index":886,"title":{},"body":{"injectables/FileService.html":{}}}],["console.log(id1",{"_index":1582,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["console.log(req.user",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{}}}],["console.log(room1",{"_index":593,"title":{},"body":{"injectables/ChatService.html":{}}}],["console.log(socket1",{"_index":600,"title":{},"body":{"injectables/ChatService.html":{}}}],["console.log(socket2",{"_index":603,"title":{},"body":{"injectables/ChatService.html":{}}}],["console.log(this.rooms",{"_index":560,"title":{},"body":{"injectables/ChatService.html":{}}}],["const",{"_index":29,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AtGuard.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ExercisesLibraryService.html":{},"injectables/FeedbackUserService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/MealRecoService.html":{},"injectables/NutritionService.html":{},"injectables/OpenffService.html":{},"injectables/PreferencesService.html":{},"injectables/ReportsService.html":{},"classes/Rooms.html":{},"injectables/StepsService.html":{},"injectables/TicketsService.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"interfaces/ValidatedUser.html":{},"injectables/WorkoutsService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":147,"title":{},"body":{"injectables/AtGuard.html":{},"injectables/AuthService.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"injectables/ExercisesLibraryService.html":{},"injectables/FeedbackUserService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/MealRecoService.html":{},"injectables/NutritionService.html":{},"injectables/OpenffService.html":{},"injectables/PreferencesService.html":{},"injectables/PrismaService.html":{},"injectables/ReportsService.html":{},"classes/Rooms.html":{},"injectables/StepsService.html":{},"injectables/TicketsService.html":{},"injectables/UserAdminService.html":{},"injectables/UserInfoService.html":{},"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{},"classes/UserWithoutSidekickException.html":{},"interfaces/ValidatedUser.html":{},"injectables/WorkoutsService.html":{}}}],["constructor(_prismaservice",{"_index":803,"title":{},"body":{"injectables/FeedbackUserService.html":{},"injectables/NutritionService.html":{},"injectables/StepsService.html":{},"injectables/UserInfoService.html":{},"injectables/WorkoutsService.html":{}}}],["constructor(authservice",{"_index":892,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(chatservice",{"_index":449,"title":{},"body":{"classes/ChatGateway.html":{}}}],["constructor(configservice",{"_index":860,"title":{},"body":{"injectables/FileService.html":{},"injectables/MealRecoService.html":{},"injectables/PrismaService.html":{}}}],["constructor(postemail",{"_index":1672,"title":{},"body":{"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-2.html":{}}}],["constructor(postid",{"_index":1676,"title":{},"body":{"classes/UserNotFoundException-1.html":{},"classes/UserWithoutSidekickException.html":{}}}],["constructor(prisma",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExercisesLibraryService.html":{},"injectables/ReportsService.html":{}}}],["constructor(prismaservice",{"_index":1137,"title":{},"body":{"injectables/OpenffService.html":{},"injectables/PreferencesService.html":{},"injectables/TicketsService.html":{},"injectables/UserAdminService.html":{}}}],["constructor(private",{"_index":63,"title":{},"body":{"controllers/AppController.html":{},"injectables/AtGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/FeedbackUserController.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"controllers/MealRecoController.html":{},"injectables/MealRecoService.html":{},"controllers/NutritionController.html":{},"injectables/NutritionService.html":{},"controllers/OpenffController.html":{},"injectables/OpenffService.html":{},"controllers/PreferencesController.html":{},"injectables/PreferencesService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"controllers/StepsController.html":{},"injectables/StepsService.html":{},"controllers/TicketsController.html":{},"injectables/TicketsService.html":{},"controllers/UserAdminController.html":{},"injectables/UserAdminService.html":{},"controllers/UserInfosController.html":{},"controllers/WorkoutsController.html":{},"injectables/WorkoutsService.html":{}}}],["constructor(reflector",{"_index":148,"title":{},"body":{"injectables/AtGuard.html":{}}}],["constructor(userinfosservice",{"_index":510,"title":{},"body":{"injectables/ChatService.html":{}}}],["contains",{"_index":1523,"title":{},"body":{"injectables/UserAdminService.html":{}}}],["content",{"_index":566,"title":{},"body":{"injectables/ChatService.html":{},"classes/CreateTicketDto.html":{},"injectables/MealRecoService.html":{},"injectables/OpenffService.html":{},"injectables/TicketsService.html":{}}}],["contenttype",{"_index":881,"title":{},"body":{"injectables/FileService.html":{}}}],["context",{"_index":19,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AtGuard.html":{},"miscellaneous/variables.html":{}}}],["context.getclass",{"_index":160,"title":{},"body":{"injectables/AtGuard.html":{}}}],["context.gethandler",{"_index":159,"title":{},"body":{"injectables/AtGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":31,"title":{},"body":{"guards/AdminGuard.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":1921,"title":{},"body":{"license.html":{}}}],["controller",{"_index":53,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ChatController.html":{},"controllers/ExercisesLibraryController.html":{},"controllers/FeedbackUserController.html":{},"controllers/FileController.html":{},"controllers/MealRecoController.html":{},"controllers/NutritionController.html":{},"controllers/OpenffController.html":{},"controllers/PreferencesController.html":{},"controllers/ReportsController.html":{},"controllers/StepsController.html":{},"controllers/TicketsController.html":{},"controllers/UserAdminController.html":{},"controllers/UserInfosController.html":{},"controllers/WorkoutsController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ChatController.html":{},"controllers/ExercisesLibraryController.html":{},"controllers/FeedbackUserController.html":{},"controllers/FileController.html":{},"controllers/MealRecoController.html":{},"controllers/NutritionController.html":{},"controllers/OpenffController.html":{},"controllers/PreferencesController.html":{},"controllers/ReportsController.html":{},"controllers/StepsController.html":{},"controllers/TicketsController.html":{},"controllers/UserAdminController.html":{},"controllers/UserInfosController.html":{},"controllers/WorkoutsController.html":{},"coverage.html":{}}}],["controller(\"auth",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller(\"chat",{"_index":433,"title":{},"body":{"controllers/ChatController.html":{}}}],["controller(\"reports",{"_index":1242,"title":{},"body":{"controllers/ReportsController.html":{}}}],["controller(\"user_infos",{"_index":1615,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["controller('exercises",{"_index":726,"title":{},"body":{"controllers/ExercisesLibraryController.html":{}}}],["controller('feedback",{"_index":783,"title":{},"body":{"controllers/FeedbackUserController.html":{}}}],["controller('file",{"_index":845,"title":{},"body":{"controllers/FileController.html":{}}}],["controller('meal",{"_index":946,"title":{},"body":{"controllers/MealRecoController.html":{}}}],["controller('nutrition",{"_index":1041,"title":{},"body":{"controllers/NutritionController.html":{}}}],["controller('openff",{"_index":1128,"title":{},"body":{"controllers/OpenffController.html":{}}}],["controller('preferences",{"_index":1193,"title":{},"body":{"controllers/PreferencesController.html":{}}}],["controller('tickets",{"_index":1369,"title":{},"body":{"controllers/TicketsController.html":{}}}],["controller('user_admin",{"_index":1503,"title":{},"body":{"controllers/UserAdminController.html":{}}}],["controller('workouts",{"_index":1711,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["controllers",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ChatController.html":{},"modules/ChatModule.html":{},"controllers/ExercisesLibraryController.html":{},"modules/ExercisesLibraryModule.html":{},"controllers/FeedbackUserController.html":{},"modules/FeedbackUserModule.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"controllers/MealRecoController.html":{},"modules/MealRecoModule.html":{},"controllers/NutritionController.html":{},"modules/NutritionModule.html":{},"controllers/OpenffController.html":{},"modules/OpenffModule.html":{},"controllers/PreferencesController.html":{},"modules/PreferencesModule.html":{},"modules/PrismaModule.html":{},"controllers/ReportsController.html":{},"modules/ReportsModule.html":{},"controllers/StepsController.html":{},"modules/StepsModule.html":{},"controllers/TicketsController.html":{},"modules/TicketsModule.html":{},"controllers/UserAdminController.html":{},"modules/UserAdminModule.html":{},"controllers/UserInfosController.html":{},"modules/UserInfosModule.html":{},"controllers/WorkoutsController.html":{},"modules/WorkoutsModule.html":{},"overview.html":{}}}],["copies",{"_index":1891,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1874,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1864,"title":{},"body":{"license.html":{}}}],["cors",{"_index":480,"title":{},"body":{"classes/ChatGateway.html":{}}}],["coverage",{"_index":1783,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"controllers/TicketsController.html":{},"injectables/TicketsService.html":{},"classes/UpdateExercisesLibraryDto.html":{},"classes/UpdateOpenffDto.html":{}}}],["create(@body",{"_index":727,"title":{},"body":{"controllers/ExercisesLibraryController.html":{},"controllers/TicketsController.html":{}}}],["create(createexerciseslibrarydto",{"_index":701,"title":{},"body":{"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{}}}],["create(createticketdto",{"_index":1346,"title":{},"body":{"controllers/TicketsController.html":{}}}],["create(currentuser",{"_index":1236,"title":{},"body":{"controllers/ReportsController.html":{}}}],["create(dto",{"_index":1401,"title":{},"body":{"injectables/TicketsService.html":{}}}],["create(reporter",{"_index":1256,"title":{},"body":{"injectables/ReportsService.html":{}}}],["createdat",{"_index":587,"title":{},"body":{"injectables/ChatService.html":{},"injectables/TicketsService.html":{}}}],["createexerciseslibrarydto",{"_index":615,"title":{"classes/CreateExercisesLibraryDto.html":{}},"body":{"classes/CreateExercisesLibraryDto.html":{},"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{},"classes/UpdateExercisesLibraryDto.html":{},"coverage.html":{}}}],["createfeedbackuserdto",{"_index":635,"title":{"classes/CreateFeedbackUserDto.html":{}},"body":{"classes/CreateFeedbackUserDto.html":{},"controllers/FeedbackUserController.html":{},"injectables/FeedbackUserService.html":{},"coverage.html":{}}}],["createopenffdto",{"_index":644,"title":{"classes/CreateOpenffDto.html":{}},"body":{"classes/CreateOpenffDto.html":{},"classes/UpdateOpenffDto.html":{},"coverage.html":{}}}],["createparamdecorator",{"_index":1949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createticketdto",{"_index":647,"title":{"classes/CreateTicketDto.html":{}},"body":{"classes/CreateTicketDto.html":{},"controllers/TicketsController.html":{},"injectables/TicketsService.html":{},"coverage.html":{}}}],["createuser",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuser(dto",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["credentials",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/TicketsService.html":{}}}],["currentuser",{"_index":1235,"title":{},"body":{"controllers/ReportsController.html":{}}}],["cursor",{"_index":425,"title":{},"body":{"controllers/ChatController.html":{},"injectables/ChatService.html":{},"controllers/TicketsController.html":{},"injectables/TicketsService.html":{}}}],["damages",{"_index":1917,"title":{},"body":{"license.html":{}}}],["darkmode",{"_index":1483,"title":{},"body":{"classes/UpdatePreferenceDto.html":{}}}],["data",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ExercisesLibraryService.html":{},"injectables/FeedbackUserService.html":{},"injectables/NutritionService.html":{},"injectables/OpenffService.html":{},"injectables/PreferencesService.html":{},"injectables/ReportsService.html":{},"injectables/StepsService.html":{},"injectables/TicketsService.html":{},"injectables/UserAdminService.html":{},"injectables/UserInfoService.html":{},"injectables/WorkoutsService.html":{},"miscellaneous/variables.html":{}}}],["datas",{"_index":1086,"title":{},"body":{"injectables/NutritionService.html":{},"injectables/UserInfoService.html":{},"injectables/WorkoutsService.html":{}}}],["datas.date",{"_index":1780,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["datas.duration",{"_index":1778,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["datas.exerciseid",{"_index":1773,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["datas.userid",{"_index":1098,"title":{},"body":{"injectables/NutritionService.html":{},"injectables/WorkoutsService.html":{}}}],["datas[\"userid",{"_index":1578,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["datasources",{"_index":1223,"title":{},"body":{"injectables/PrismaService.html":{}}}],["date",{"_index":1060,"title":{},"body":{"classes/NutritionDto.html":{},"injectables/NutritionService.html":{},"classes/UpdateNutritionDto.html":{},"classes/UserInfosDto.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{},"injectables/WorkoutsService.html":{}}}],["day",{"_index":1030,"title":{},"body":{"controllers/NutritionController.html":{},"controllers/WorkoutsController.html":{},"injectables/WorkoutsService.html":{}}}],["db",{"_index":559,"title":{},"body":{"injectables/ChatService.html":{},"injectables/PrismaService.html":{},"index.html":{}}}],["deal",{"_index":1878,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1925,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChatModule.html":{},"modules/ExercisesLibraryModule.html":{},"modules/FeedbackUserModule.html":{},"modules/FileModule.html":{},"modules/MealRecoModule.html":{},"modules/NutritionModule.html":{},"modules/OpenffModule.html":{},"modules/PreferencesModule.html":{},"modules/PrismaModule.html":{},"modules/ReportsModule.html":{},"modules/StepsModule.html":{},"modules/TicketsModule.html":{},"modules/UserAdminModule.html":{},"modules/UserInfosModule.html":{},"modules/WorkoutsModule.html":{},"overview.html":{}}}],["decorators",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"classes/CreateExercisesLibraryDto.html":{},"classes/CreateFeedbackUserDto.html":{},"classes/CreateTicketDto.html":{},"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"controllers/ExercisesLibraryController.html":{},"controllers/FeedbackUserController.html":{},"controllers/FileController.html":{},"classes/GetUserAdminDto.html":{},"controllers/MealRecoController.html":{},"classes/MealRecoDto.html":{},"classes/ModeratorAnswerDto.html":{},"controllers/NutritionController.html":{},"classes/NutritionDto.html":{},"controllers/OpenffController.html":{},"controllers/PreferencesController.html":{},"controllers/ReportsController.html":{},"controllers/StepsController.html":{},"controllers/TicketsController.html":{},"classes/UpdateExercisesLibraryDto.html":{},"classes/UpdateFeedbackUserDto.html":{},"classes/UpdateNutritionDto.html":{},"classes/UpdatePreferenceDto.html":{},"controllers/UserAdminController.html":{},"classes/UserAnswerDto.html":{},"controllers/UserInfosController.html":{},"classes/UserInfosDto.html":{},"controllers/WorkoutsController.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{}}}],["default",{"_index":171,"title":{},"body":{"injectables/AuthConfig.html":{},"injectables/ChatService.html":{},"classes/Rooms.html":{},"controllers/TicketsController.html":{},"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{},"classes/UserWithoutSidekickException.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":303,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AtGuard.html":{},"injectables/AuthConfig.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"classes/CreateExercisesLibraryDto.html":{},"classes/CreateFeedbackUserDto.html":{},"classes/CreateTicketDto.html":{},"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/FeedbackUserController.html":{},"injectables/FeedbackUserService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"classes/GetUserAdminDto.html":{},"injectables/JwtStrategy.html":{},"classes/MatchEvent.html":{},"controllers/MealRecoController.html":{},"classes/MealRecoDto.html":{},"injectables/MealRecoService.html":{},"classes/ModeratorAnswerDto.html":{},"controllers/NutritionController.html":{},"classes/NutritionDto.html":{},"injectables/NutritionService.html":{},"controllers/OpenffController.html":{},"injectables/OpenffService.html":{},"controllers/PreferencesController.html":{},"injectables/PreferencesService.html":{},"injectables/PrismaService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"classes/Rooms.html":{},"controllers/StepsController.html":{},"injectables/StepsService.html":{},"controllers/TicketsController.html":{},"injectables/TicketsService.html":{},"classes/UpdateExercisesLibraryDto.html":{},"classes/UpdateFeedbackUserDto.html":{},"classes/UpdateNutritionDto.html":{},"classes/UpdatePreferenceDto.html":{},"controllers/UserAdminController.html":{},"injectables/UserAdminService.html":{},"classes/UserAnswerDto.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"classes/UserInfosDto.html":{},"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{},"classes/UserWithoutSidekickException.html":{},"controllers/WorkoutsController.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{},"injectables/WorkoutsService.html":{}}}],["delete",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ExercisesLibraryController.html":{},"controllers/FeedbackUserController.html":{},"injectables/FeedbackUserService.html":{},"controllers/NutritionController.html":{},"injectables/NutritionService.html":{},"controllers/TicketsController.html":{},"controllers/WorkoutsController.html":{}}}],["delete(\"/:id",{"_index":790,"title":{},"body":{"controllers/FeedbackUserController.html":{},"controllers/NutritionController.html":{}}}],["delete(\"remove/:id",{"_index":1729,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["delete('/:id",{"_index":777,"title":{},"body":{"controllers/FeedbackUserController.html":{},"controllers/NutritionController.html":{}}}],["delete(':id",{"_index":713,"title":{},"body":{"controllers/ExercisesLibraryController.html":{}}}],["delete('remove/:id",{"_index":1704,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["delete(@body",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{}}}],["delete(dto",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["delete(id",{"_index":809,"title":{},"body":{"injectables/FeedbackUserService.html":{},"injectables/NutritionService.html":{}}}],["deleteuser",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["deleteuser(email",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["dependencies",{"_index":69,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChatModule.html":{},"modules/ExercisesLibraryModule.html":{},"modules/FeedbackUserModule.html":{},"modules/FileModule.html":{},"modules/MealRecoModule.html":{},"modules/NutritionModule.html":{},"modules/OpenffModule.html":{},"modules/PreferencesModule.html":{},"modules/PrismaModule.html":{},"modules/ReportsModule.html":{},"modules/StepsModule.html":{},"modules/TicketsModule.html":{},"modules/UserAdminModule.html":{},"modules/UserInfosModule.html":{},"modules/WorkoutsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":588,"title":{},"body":{"injectables/ChatService.html":{}}}],["description",{"_index":618,"title":{},"body":{"classes/CreateExercisesLibraryDto.html":{},"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"injectables/ExercisesLibraryService.html":{},"classes/GetUserAdminDto.html":{},"injectables/TicketsService.html":{},"classes/UserInfosDto.html":{},"properties.html":{}}}],["design",{"_index":1173,"title":{},"body":{"injectables/OpenffService.html":{}}}],["destination",{"_index":1408,"title":{},"body":{"injectables/TicketsService.html":{}}}],["dev",{"_index":1861,"title":{},"body":{"index.html":{}}}],["didn't",{"_index":1006,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["dinner",{"_index":1107,"title":{},"body":{"injectables/NutritionService.html":{}}}],["dinners",{"_index":1106,"title":{},"body":{"injectables/NutritionService.html":{}}}],["dinners.reduce((total",{"_index":1118,"title":{},"body":{"injectables/NutritionService.html":{}}}],["disconnect",{"_index":484,"title":{},"body":{"classes/ChatGateway.html":{}}}],["distribute",{"_index":1887,"title":{},"body":{"license.html":{}}}],["docker",{"_index":1847,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1784,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["doesn\\'t",{"_index":1678,"title":{},"body":{"classes/UserNotFoundException-1.html":{},"classes/UserWithoutSidekickException.html":{}}}],["dotenv",{"_index":1824,"title":{},"body":{"dependencies.html":{}}}],["dto",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FeedbackUserController.html":{},"controllers/NutritionController.html":{},"controllers/PreferencesController.html":{},"controllers/TicketsController.html":{},"injectables/TicketsService.html":{},"controllers/UserInfosController.html":{},"controllers/WorkoutsController.html":{}}}],["dto.content",{"_index":1423,"title":{},"body":{"injectables/TicketsService.html":{}}}],["dto.email",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto.password",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto.title",{"_index":1424,"title":{},"body":{"injectables/TicketsService.html":{}}}],["dto/create",{"_index":722,"title":{},"body":{"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/FeedbackUserController.html":{},"injectables/FeedbackUserService.html":{},"controllers/TicketsController.html":{},"injectables/TicketsService.html":{}}}],["dto/edit.dto",{"_index":1555,"title":{},"body":{"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{}}}],["dto/meal_reco.dto",{"_index":945,"title":{},"body":{"controllers/MealRecoController.html":{}}}],["dto/moderator",{"_index":1367,"title":{},"body":{"controllers/TicketsController.html":{},"injectables/TicketsService.html":{}}}],["dto/nutrition.dto",{"_index":1038,"title":{},"body":{"controllers/NutritionController.html":{},"injectables/NutritionService.html":{}}}],["dto/update",{"_index":724,"title":{},"body":{"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/FeedbackUserController.html":{},"injectables/FeedbackUserService.html":{},"controllers/PreferencesController.html":{},"injectables/PreferencesService.html":{}}}],["dto/update.dto",{"_index":1039,"title":{},"body":{"controllers/NutritionController.html":{},"injectables/NutritionService.html":{}}}],["dto/user",{"_index":1419,"title":{},"body":{"injectables/TicketsService.html":{}}}],["dto/user.dto",{"_index":1554,"title":{},"body":{"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{}}}],["dto/user_admin.dto",{"_index":1502,"title":{},"body":{"controllers/UserAdminController.html":{},"injectables/UserAdminService.html":{}}}],["dto/workouts.dto",{"_index":1708,"title":{},"body":{"controllers/WorkoutsController.html":{},"injectables/WorkoutsService.html":{}}}],["duration",{"_index":1736,"title":{},"body":{"classes/WorkoutsDto-1.html":{},"injectables/WorkoutsService.html":{}}}],["e",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/MealRecoService.html":{}}}],["editinfosdto",{"_index":653,"title":{"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{}},"body":{"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"classes/GetUserAdminDto.html":{},"controllers/UserAdminController.html":{},"injectables/UserAdminService.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"coverage.html":{}}}],["email",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"controllers/ChatController.html":{},"injectables/ChatService.html":{},"classes/EditInfosDto.html":{},"injectables/FeedbackUserService.html":{},"classes/GetUserAdminDto.html":{},"injectables/JwtStrategy.html":{},"controllers/MealRecoController.html":{},"injectables/MealRecoService.html":{},"injectables/NutritionService.html":{},"controllers/PreferencesController.html":{},"injectables/PreferencesService.html":{},"injectables/ReportsService.html":{},"injectables/StepsService.html":{},"controllers/TicketsController.html":{},"injectables/TicketsService.html":{},"controllers/UserAdminController.html":{},"injectables/UserAdminService.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-2.html":{},"interfaces/ValidatedUser.html":{},"injectables/WorkoutsService.html":{}}}],["emitter",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"classes/ChatGateway.html":{},"injectables/UserInfoService.html":{},"dependencies.html":{}}}],["energy_kcal_100g",{"_index":1155,"title":{},"body":{"injectables/OpenffService.html":{}}}],["err",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileService.html":{}}}],["err.message",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["error",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OpenffService.html":{}}}],["error(\"goal",{"_index":974,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["error('only",{"_index":1641,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["event",{"_index":461,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"license.html":{}}}],["event.id1",{"_index":594,"title":{},"body":{"injectables/ChatService.html":{}}}],["event.id2",{"_index":595,"title":{},"body":{"injectables/ChatService.html":{}}}],["event.id2].sort().join(\"_",{"_index":610,"title":{},"body":{"injectables/ChatService.html":{}}}],["eventemitter",{"_index":1534,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["eventemitter2",{"_index":1535,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["eventemittermodule",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["eventemittermodule.forroot",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["exception",{"_index":45,"title":{},"body":{"guards/AdminGuard.html":{}}}],["exceptions/not",{"_index":1095,"title":{},"body":{"injectables/NutritionService.html":{},"injectables/UserInfoService.html":{},"injectables/WorkoutsService.html":{}}}],["executioncontext",{"_index":11,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AtGuard.html":{},"miscellaneous/variables.html":{}}}],["exercise",{"_index":1765,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["exercise.met",{"_index":1775,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["exerciseid",{"_index":1737,"title":{},"body":{"classes/WorkoutsDto-1.html":{},"injectables/WorkoutsService.html":{}}}],["exercises",{"_index":695,"title":{},"body":{"controllers/ExercisesLibraryController.html":{}}}],["exercises_library.controller",{"_index":741,"title":{},"body":{"modules/ExercisesLibraryModule.html":{}}}],["exercises_library.dto",{"_index":723,"title":{},"body":{"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{},"classes/UpdateExercisesLibraryDto.html":{}}}],["exercises_library.dto.ts",{"_index":617,"title":{},"body":{"classes/CreateExercisesLibraryDto.html":{},"classes/UpdateExercisesLibraryDto.html":{},"coverage.html":{}}}],["exercises_library.dto.ts:11",{"_index":623,"title":{},"body":{"classes/CreateExercisesLibraryDto.html":{}}}],["exercises_library.dto.ts:15",{"_index":631,"title":{},"body":{"classes/CreateExercisesLibraryDto.html":{}}}],["exercises_library.dto.ts:18",{"_index":630,"title":{},"body":{"classes/CreateExercisesLibraryDto.html":{}}}],["exercises_library.dto.ts:22",{"_index":627,"title":{},"body":{"classes/CreateExercisesLibraryDto.html":{}}}],["exercises_library.dto.ts:26",{"_index":626,"title":{},"body":{"classes/CreateExercisesLibraryDto.html":{}}}],["exercises_library.dto.ts:7",{"_index":628,"title":{},"body":{"classes/CreateExercisesLibraryDto.html":{}}}],["exercises_library.dto.ts:8",{"_index":1458,"title":{},"body":{"classes/UpdateExercisesLibraryDto.html":{}}}],["exercises_library.service",{"_index":721,"title":{},"body":{"controllers/ExercisesLibraryController.html":{},"modules/ExercisesLibraryModule.html":{}}}],["exercises_library/exercises_library.module",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["exercises_library/exercises_library.service",{"_index":1762,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["exerciseslibrary",{"_index":751,"title":{},"body":{"injectables/ExercisesLibraryService.html":{}}}],["exerciseslibrarycontroller",{"_index":693,"title":{"controllers/ExercisesLibraryController.html":{}},"body":{"controllers/ExercisesLibraryController.html":{},"modules/ExercisesLibraryModule.html":{},"coverage.html":{}}}],["exerciseslibrarymodule",{"_index":80,"title":{"modules/ExercisesLibraryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ExercisesLibraryModule.html":{},"modules.html":{},"overview.html":{}}}],["exerciseslibraryservice",{"_index":720,"title":{"injectables/ExercisesLibraryService.html":{}},"body":{"controllers/ExercisesLibraryController.html":{},"modules/ExercisesLibraryModule.html":{},"injectables/ExercisesLibraryService.html":{},"injectables/WorkoutsService.html":{},"coverage.html":{},"overview.html":{}}}],["exists",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":26,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AtGuard.html":{},"injectables/AuthConfig.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/CreateExercisesLibraryDto.html":{},"classes/CreateFeedbackUserDto.html":{},"classes/CreateOpenffDto.html":{},"classes/CreateTicketDto.html":{},"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"controllers/ExercisesLibraryController.html":{},"modules/ExercisesLibraryModule.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/FeedbackUserController.html":{},"modules/FeedbackUserModule.html":{},"injectables/FeedbackUserService.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GetUserAdminDto.html":{},"injectables/JwtStrategy.html":{},"classes/MatchEvent.html":{},"controllers/MealRecoController.html":{},"classes/MealRecoDto.html":{},"modules/MealRecoModule.html":{},"injectables/MealRecoService.html":{},"classes/ModeratorAnswerDto.html":{},"controllers/NutritionController.html":{},"classes/NutritionDto.html":{},"modules/NutritionModule.html":{},"injectables/NutritionService.html":{},"controllers/OpenffController.html":{},"modules/OpenffModule.html":{},"injectables/OpenffService.html":{},"controllers/PreferencesController.html":{},"modules/PreferencesModule.html":{},"injectables/PreferencesService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ReportsController.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"classes/Rooms.html":{},"controllers/StepsController.html":{},"modules/StepsModule.html":{},"injectables/StepsService.html":{},"controllers/TicketsController.html":{},"modules/TicketsModule.html":{},"injectables/TicketsService.html":{},"classes/UpdateExercisesLibraryDto.html":{},"classes/UpdateFeedbackUserDto.html":{},"classes/UpdateNutritionDto.html":{},"classes/UpdateOpenffDto.html":{},"classes/UpdatePreferenceDto.html":{},"controllers/UserAdminController.html":{},"modules/UserAdminModule.html":{},"injectables/UserAdminService.html":{},"classes/UserAnswerDto.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"classes/UserInfosDto.html":{},"modules/UserInfosModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{},"classes/UserWithoutSidekickException.html":{},"interfaces/ValidatedUser.html":{},"controllers/WorkoutsController.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{},"modules/WorkoutsModule.html":{},"injectables/WorkoutsService.html":{}}}],["exports",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChatModule.html":{},"modules/ExercisesLibraryModule.html":{},"modules/FeedbackUserModule.html":{},"modules/FileModule.html":{},"modules/MealRecoModule.html":{},"modules/NutritionModule.html":{},"modules/OpenffModule.html":{},"modules/PreferencesModule.html":{},"modules/PrismaModule.html":{},"modules/ReportsModule.html":{},"modules/StepsModule.html":{},"modules/TicketsModule.html":{},"modules/UserAdminModule.html":{},"modules/UserInfosModule.html":{},"modules/WorkoutsModule.html":{},"overview.html":{}}}],["express",{"_index":842,"title":{},"body":{"controllers/FileController.html":{},"controllers/UserInfosController.html":{},"dependencies.html":{},"license.html":{}}}],["express.multer.file",{"_index":834,"title":{},"body":{"controllers/FileController.html":{},"injectables/FileService.html":{},"injectables/UserInfoService.html":{}}}],["extends",{"_index":154,"title":{},"body":{"injectables/AtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateExercisesLibraryDto.html":{},"classes/UpdateOpenffDto.html":{},"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{},"classes/UserWithoutSidekickException.html":{},"interfaces/ValidatedUser.html":{}}}],["extname",{"_index":1635,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["extractjwt",{"_index":896,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":918,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["false",{"_index":575,"title":{},"body":{"injectables/ChatService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserInfosController.html":{},"interfaces/ValidatedUser.html":{}}}],["fat",{"_index":1061,"title":{},"body":{"classes/NutritionDto.html":{},"injectables/NutritionService.html":{},"classes/UpdateNutritionDto.html":{}}}],["fat_100g",{"_index":1162,"title":{},"body":{"injectables/OpenffService.html":{}}}],["feedback",{"_index":760,"title":{},"body":{"controllers/FeedbackUserController.html":{},"injectables/FeedbackUserService.html":{}}}],["feedback_user.controller",{"_index":800,"title":{},"body":{"modules/FeedbackUserModule.html":{}}}],["feedback_user.dto",{"_index":782,"title":{},"body":{"controllers/FeedbackUserController.html":{},"injectables/FeedbackUserService.html":{}}}],["feedback_user.dto.ts",{"_index":637,"title":{},"body":{"classes/CreateFeedbackUserDto.html":{},"classes/UpdateFeedbackUserDto.html":{},"coverage.html":{}}}],["feedback_user.dto.ts:12",{"_index":640,"title":{},"body":{"classes/CreateFeedbackUserDto.html":{},"classes/UpdateFeedbackUserDto.html":{}}}],["feedback_user.dto.ts:4",{"_index":643,"title":{},"body":{"classes/CreateFeedbackUserDto.html":{},"classes/UpdateFeedbackUserDto.html":{}}}],["feedback_user.dto.ts:5",{"_index":641,"title":{},"body":{"classes/CreateFeedbackUserDto.html":{}}}],["feedback_user.dto.ts:8",{"_index":642,"title":{},"body":{"classes/CreateFeedbackUserDto.html":{},"classes/UpdateFeedbackUserDto.html":{}}}],["feedback_user.service",{"_index":781,"title":{},"body":{"controllers/FeedbackUserController.html":{},"modules/FeedbackUserModule.html":{}}}],["feedback_user/feedback_user.module",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["feedbackusercontroller",{"_index":758,"title":{"controllers/FeedbackUserController.html":{}},"body":{"controllers/FeedbackUserController.html":{},"modules/FeedbackUserModule.html":{},"coverage.html":{}}}],["feedbackusermodule",{"_index":81,"title":{"modules/FeedbackUserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FeedbackUserModule.html":{},"modules.html":{},"overview.html":{}}}],["feedbackuserservice",{"_index":780,"title":{"injectables/FeedbackUserService.html":{}},"body":{"controllers/FeedbackUserController.html":{},"modules/FeedbackUserModule.html":{},"injectables/FeedbackUserService.html":{},"coverage.html":{},"overview.html":{}}}],["fetch(request",{"_index":1140,"title":{},"body":{"injectables/OpenffService.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AtGuard.html":{},"injectables/AuthConfig.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/CreateExercisesLibraryDto.html":{},"classes/CreateFeedbackUserDto.html":{},"classes/CreateOpenffDto.html":{},"classes/CreateTicketDto.html":{},"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"controllers/ExercisesLibraryController.html":{},"modules/ExercisesLibraryModule.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/FeedbackUserController.html":{},"modules/FeedbackUserModule.html":{},"injectables/FeedbackUserService.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GetUserAdminDto.html":{},"injectables/JwtStrategy.html":{},"classes/MatchEvent.html":{},"controllers/MealRecoController.html":{},"classes/MealRecoDto.html":{},"modules/MealRecoModule.html":{},"injectables/MealRecoService.html":{},"classes/ModeratorAnswerDto.html":{},"controllers/NutritionController.html":{},"classes/NutritionDto.html":{},"modules/NutritionModule.html":{},"injectables/NutritionService.html":{},"controllers/OpenffController.html":{},"modules/OpenffModule.html":{},"injectables/OpenffService.html":{},"controllers/PreferencesController.html":{},"modules/PreferencesModule.html":{},"injectables/PreferencesService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ReportsController.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"classes/Rooms.html":{},"controllers/StepsController.html":{},"modules/StepsModule.html":{},"injectables/StepsService.html":{},"controllers/TicketsController.html":{},"modules/TicketsModule.html":{},"injectables/TicketsService.html":{},"classes/UpdateExercisesLibraryDto.html":{},"classes/UpdateFeedbackUserDto.html":{},"classes/UpdateNutritionDto.html":{},"classes/UpdateOpenffDto.html":{},"classes/UpdatePreferenceDto.html":{},"controllers/UserAdminController.html":{},"modules/UserAdminModule.html":{},"injectables/UserAdminService.html":{},"classes/UserAnswerDto.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"classes/UserInfosDto.html":{},"modules/UserInfosModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{},"classes/UserWithoutSidekickException.html":{},"interfaces/ValidatedUser.html":{},"controllers/WorkoutsController.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{},"modules/WorkoutsModule.html":{},"injectables/WorkoutsService.html":{},"coverage.html":{}}}],["file.buffer",{"_index":880,"title":{},"body":{"injectables/FileService.html":{}}}],["file.controller",{"_index":856,"title":{},"body":{"modules/FileModule.html":{}}}],["file.mimetype",{"_index":882,"title":{},"body":{"injectables/FileService.html":{}}}],["file.service",{"_index":844,"title":{},"body":{"controllers/FileController.html":{},"modules/FileModule.html":{}}}],["file/file.module",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/UserInfosModule.html":{}}}],["file/file.service",{"_index":1556,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["filecontroller",{"_index":830,"title":{"controllers/FileController.html":{}},"body":{"controllers/FileController.html":{},"modules/FileModule.html":{},"coverage.html":{}}}],["filefilter",{"_index":1630,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["fileinterceptor",{"_index":840,"title":{},"body":{"controllers/FileController.html":{},"controllers/UserInfosController.html":{}}}],["filemodule",{"_index":82,"title":{"modules/FileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FileModule.html":{},"modules/UserInfosModule.html":{},"modules.html":{},"overview.html":{}}}],["files",{"_index":1877,"title":{},"body":{"license.html":{}}}],["fileservice",{"_index":843,"title":{"injectables/FileService.html":{}},"body":{"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/UserInfoService.html":{},"coverage.html":{},"overview.html":{}}}],["filesize",{"_index":1628,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["filetypes",{"_index":1632,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["filetypes.test(file.mimetype",{"_index":1638,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["filetypes.test(path.extname(file.originalname).tolowercase",{"_index":1636,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["filetypevalidator",{"_index":1611,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["find",{"_index":1335,"title":{},"body":{"controllers/TicketsController.html":{},"injectables/TicketsService.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"controllers/WorkoutsController.html":{},"injectables/WorkoutsService.html":{}}}],["find(@param('id",{"_index":1721,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["find(@query('cursor",{"_index":1371,"title":{},"body":{"controllers/TicketsController.html":{}}}],["find(@request",{"_index":1616,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["find(cursor",{"_index":1348,"title":{},"body":{"controllers/TicketsController.html":{},"injectables/TicketsService.html":{}}}],["find(id",{"_index":1694,"title":{},"body":{"controllers/WorkoutsController.html":{},"injectables/WorkoutsService.html":{}}}],["find(req",{"_index":1597,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["find(useremail",{"_index":1539,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["findall",{"_index":697,"title":{},"body":{"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{},"injectables/NutritionService.html":{},"controllers/OpenffController.html":{},"injectables/OpenffService.html":{},"injectables/UserAdminService.html":{},"controllers/WorkoutsController.html":{},"injectables/WorkoutsService.html":{}}}],["findall(@param(\"request",{"_index":1130,"title":{},"body":{"controllers/OpenffController.html":{}}}],["findall(@request",{"_index":1723,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["findall(email",{"_index":1753,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["findall(req",{"_index":1696,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["findall(request",{"_index":1123,"title":{},"body":{"controllers/OpenffController.html":{},"injectables/OpenffService.html":{}}}],["findall(undefined",{"_index":1516,"title":{},"body":{"injectables/UserAdminService.html":{}}}],["findall(useremail",{"_index":1088,"title":{},"body":{"injectables/NutritionService.html":{}}}],["findalladmin",{"_index":1687,"title":{},"body":{"controllers/WorkoutsController.html":{},"injectables/WorkoutsService.html":{}}}],["findbyday",{"_index":1082,"title":{},"body":{"injectables/NutritionService.html":{},"controllers/WorkoutsController.html":{},"injectables/WorkoutsService.html":{}}}],["findbyday(@request",{"_index":1714,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["findbyday(email",{"_index":1756,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["findbyday(req",{"_index":1699,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["findbyday(useremail",{"_index":1090,"title":{},"body":{"injectables/NutritionService.html":{}}}],["findbymuscle",{"_index":698,"title":{},"body":{"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{}}}],["findbymuscle(@query('muscle",{"_index":730,"title":{},"body":{"controllers/ExercisesLibraryController.html":{}}}],["findbymuscle(muscle",{"_index":705,"title":{},"body":{"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{}}}],["findone",{"_index":699,"title":{},"body":{"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{},"injectables/NutritionService.html":{},"controllers/TicketsController.html":{},"injectables/TicketsService.html":{}}}],["findone(@param('id",{"_index":732,"title":{},"body":{"controllers/ExercisesLibraryController.html":{},"controllers/TicketsController.html":{}}}],["findone(id",{"_index":709,"title":{},"body":{"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{},"injectables/NutritionService.html":{},"controllers/TicketsController.html":{},"injectables/TicketsService.html":{}}}],["findsidekick",{"_index":1528,"title":{},"body":{"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"controllers/WorkoutsController.html":{},"injectables/WorkoutsService.html":{}}}],["findsidekick(@request",{"_index":1619,"title":{},"body":{"controllers/UserInfosController.html":{},"controllers/WorkoutsController.html":{}}}],["findsidekick(email",{"_index":1758,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["findsidekick(req",{"_index":1599,"title":{},"body":{"controllers/UserInfosController.html":{},"controllers/WorkoutsController.html":{}}}],["findsidekick(useremail",{"_index":1541,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["finduserbysocketid",{"_index":1273,"title":{},"body":{"classes/Rooms.html":{}}}],["finduserbysocketid(socketid",{"_index":1285,"title":{},"body":{"classes/Rooms.html":{}}}],["finduserswithoutsidekick",{"_index":1529,"title":{},"body":{"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{}}}],["firstname",{"_index":656,"title":{},"body":{"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"classes/GetUserAdminDto.html":{},"injectables/UserInfoService.html":{},"classes/UserInfosDto.html":{}}}],["fitness",{"_index":1909,"title":{},"body":{"license.html":{}}}],["following",{"_index":1895,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":44,"title":{},"body":{"guards/AdminGuard.html":{}}}],["forbiddenexception",{"_index":24,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthService.html":{},"injectables/UserInfoService.html":{}}}],["forbiddenexception(\"user",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('only",{"_index":47,"title":{},"body":{"guards/AdminGuard.html":{}}}],["forgotpassword",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["forgotpassword(@body(\"email",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpassword(email",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["formatted_goal",{"_index":976,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["formatted_goal}\\n",{"_index":991,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["forwardref",{"_index":503,"title":{},"body":{"modules/ChatModule.html":{}}}],["found",{"_index":597,"title":{},"body":{"injectables/ChatService.html":{},"injectables/ReportsService.html":{},"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{},"classes/UserWithoutSidekickException.html":{},"injectables/WorkoutsService.html":{}}}],["found.exception",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{},"injectables/FeedbackUserService.html":{},"injectables/NutritionService.html":{},"injectables/StepsService.html":{},"injectables/UserInfoService.html":{},"injectables/WorkoutsService.html":{}}}],["found.exception.ts",{"_index":1671,"title":{},"body":{"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{},"classes/UserWithoutSidekickException.html":{},"coverage.html":{}}}],["found.exception.ts:3",{"_index":1673,"title":{},"body":{"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{}}}],["found.exception.ts:9",{"_index":1681,"title":{},"body":{"classes/UserWithoutSidekickException.html":{}}}],["free",{"_index":1870,"title":{},"body":{"license.html":{}}}],["from_id",{"_index":563,"title":{},"body":{"injectables/ChatService.html":{}}}],["fulluser",{"_index":578,"title":{},"body":{"injectables/ChatService.html":{}}}],["fulluser.sidekick_id",{"_index":581,"title":{},"body":{"injectables/ChatService.html":{}}}],["function",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["functions",{"_index":1842,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1894,"title":{},"body":{"license.html":{}}}],["gain",{"_index":978,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["gender",{"_index":657,"title":{},"body":{"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"classes/GetUserAdminDto.html":{},"injectables/UserInfoService.html":{},"classes/UserInfosDto.html":{}}}],["generateseed",{"_index":1852,"title":{},"body":{"index.html":{}}}],["get(\"/:id",{"_index":794,"title":{},"body":{"controllers/FeedbackUserController.html":{},"controllers/NutritionController.html":{},"controllers/WorkoutsController.html":{}}}],["get(\"/all",{"_index":434,"title":{},"body":{"controllers/ChatController.html":{},"controllers/WorkoutsController.html":{}}}],["get(\"/calories",{"_index":1716,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["get(\"/day",{"_index":1713,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["get(\"/me",{"_index":1384,"title":{},"body":{"controllers/TicketsController.html":{}}}],["get(\"/sidekick",{"_index":1719,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["get(\"/v2/all",{"_index":437,"title":{},"body":{"controllers/ChatController.html":{}}}],["get(\":request",{"_index":1129,"title":{},"body":{"controllers/OpenffController.html":{}}}],["get(\"admin",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TicketsController.html":{}}}],["get(\"find_users_without_sidekick",{"_index":1649,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["get(\"findall",{"_index":1044,"title":{},"body":{"controllers/NutritionController.html":{}}}],["get(\"findbyday",{"_index":1047,"title":{},"body":{"controllers/NutritionController.html":{}}}],["get(\"me",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(\"public",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(\"sidekick",{"_index":1618,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["get(\"steps",{"_index":1314,"title":{},"body":{"controllers/StepsController.html":{}}}],["get('/:id",{"_index":770,"title":{},"body":{"controllers/FeedbackUserController.html":{},"controllers/NutritionController.html":{},"controllers/WorkoutsController.html":{}}}],["get('/all",{"_index":422,"title":{},"body":{"controllers/ChatController.html":{},"controllers/WorkoutsController.html":{}}}],["get('/calories",{"_index":1692,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["get('/day",{"_index":1700,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["get('/me",{"_index":1354,"title":{},"body":{"controllers/TicketsController.html":{}}}],["get('/sidekick",{"_index":1702,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["get('/v2/all",{"_index":426,"title":{},"body":{"controllers/ChatController.html":{}}}],["get(':id",{"_index":710,"title":{},"body":{"controllers/ExercisesLibraryController.html":{},"controllers/TicketsController.html":{}}}],["get('findall",{"_index":1025,"title":{},"body":{"controllers/NutritionController.html":{}}}],["get('findbyday",{"_index":1031,"title":{},"body":{"controllers/NutritionController.html":{}}}],["get('me",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('muscle",{"_index":706,"title":{},"body":{"controllers/ExercisesLibraryController.html":{}}}],["get('sidekick",{"_index":1600,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["get('steps",{"_index":1310,"title":{},"body":{"controllers/StepsController.html":{}}}],["get(@getcurrentuseremail",{"_index":1196,"title":{},"body":{"controllers/PreferencesController.html":{}}}],["get(email",{"_index":1185,"title":{},"body":{"controllers/PreferencesController.html":{},"injectables/PreferencesService.html":{}}}],["getall",{"_index":508,"title":{},"body":{"injectables/ChatService.html":{},"controllers/FeedbackUserController.html":{},"injectables/FeedbackUserService.html":{}}}],["getall(email",{"_index":514,"title":{},"body":{"injectables/ChatService.html":{}}}],["getallmessages",{"_index":419,"title":{},"body":{"controllers/ChatController.html":{}}}],["getallmessages(@getcurrentuseremail",{"_index":435,"title":{},"body":{"controllers/ChatController.html":{}}}],["getallmessages(email",{"_index":421,"title":{},"body":{"controllers/ChatController.html":{}}}],["getallmessagesv2",{"_index":420,"title":{},"body":{"controllers/ChatController.html":{}}}],["getallmessagesv2(@getcurrentuseremail",{"_index":438,"title":{},"body":{"controllers/ChatController.html":{}}}],["getallmessagesv2(email",{"_index":424,"title":{},"body":{"controllers/ChatController.html":{}}}],["getallnutrition",{"_index":1016,"title":{},"body":{"controllers/NutritionController.html":{}}}],["getallnutrition(@request",{"_index":1045,"title":{},"body":{"controllers/NutritionController.html":{}}}],["getallnutrition(req",{"_index":1024,"title":{},"body":{"controllers/NutritionController.html":{}}}],["getallv2",{"_index":509,"title":{},"body":{"injectables/ChatService.html":{}}}],["getallv2(email",{"_index":516,"title":{},"body":{"injectables/ChatService.html":{}}}],["getbyid",{"_index":762,"title":{},"body":{"controllers/FeedbackUserController.html":{},"injectables/FeedbackUserService.html":{}}}],["getbyid(@param('id",{"_index":795,"title":{},"body":{"controllers/FeedbackUserController.html":{}}}],["getbyid(id",{"_index":769,"title":{},"body":{"controllers/FeedbackUserController.html":{},"injectables/FeedbackUserService.html":{}}}],["getcalories",{"_index":1308,"title":{},"body":{"controllers/StepsController.html":{}}}],["getcalories(@request",{"_index":1315,"title":{},"body":{"controllers/StepsController.html":{}}}],["getcalories(req",{"_index":1309,"title":{},"body":{"controllers/StepsController.html":{}}}],["getcurrentuseremail",{"_index":430,"title":{},"body":{"controllers/ChatController.html":{},"controllers/MealRecoController.html":{},"controllers/PreferencesController.html":{},"controllers/ReportsController.html":{},"controllers/TicketsController.html":{},"controllers/UserInfosController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gethello",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getmeal",{"_index":1017,"title":{},"body":{"controllers/NutritionController.html":{}}}],["getmeal(@param('id",{"_index":1051,"title":{},"body":{"controllers/NutritionController.html":{}}}],["getmeal(id",{"_index":1027,"title":{},"body":{"controllers/NutritionController.html":{}}}],["getnutritionforoneday",{"_index":1018,"title":{},"body":{"controllers/NutritionController.html":{}}}],["getnutritionforoneday(@request",{"_index":1048,"title":{},"body":{"controllers/NutritionController.html":{}}}],["getnutritionforoneday(req",{"_index":1029,"title":{},"body":{"controllers/NutritionController.html":{}}}],["getparams",{"_index":1396,"title":{},"body":{"injectables/TicketsService.html":{}}}],["getparams(to",{"_index":1405,"title":{},"body":{"injectables/TicketsService.html":{}}}],["getroom",{"_index":1274,"title":{},"body":{"classes/Rooms.html":{}}}],["getroom(roomid",{"_index":1287,"title":{},"body":{"classes/Rooms.html":{}}}],["getroomusers",{"_index":1275,"title":{},"body":{"classes/Rooms.html":{}}}],["getroomusers(roomid",{"_index":1289,"title":{},"body":{"classes/Rooms.html":{}}}],["getstepsbyid",{"_index":1322,"title":{},"body":{"injectables/StepsService.html":{}}}],["getstepsbyid(useremail",{"_index":1324,"title":{},"body":{"injectables/StepsService.html":{}}}],["gettickets",{"_index":1336,"title":{},"body":{"controllers/TicketsController.html":{},"injectables/TicketsService.html":{}}}],["gettickets(@getcurrentuseremail",{"_index":1385,"title":{},"body":{"controllers/TicketsController.html":{}}}],["gettickets(email",{"_index":1353,"title":{},"body":{"controllers/TicketsController.html":{},"injectables/TicketsService.html":{}}}],["getticketsfromemail",{"_index":1337,"title":{},"body":{"controllers/TicketsController.html":{}}}],["getticketsfromemail(@query(\"email",{"_index":1387,"title":{},"body":{"controllers/TicketsController.html":{}}}],["getticketsfromemail(email",{"_index":1356,"title":{},"body":{"controllers/TicketsController.html":{}}}],["getticketsfromid",{"_index":1338,"title":{},"body":{"controllers/TicketsController.html":{},"injectables/TicketsService.html":{}}}],["getticketsfromid(@query(\"id",{"_index":1388,"title":{},"body":{"controllers/TicketsController.html":{}}}],["getticketsfromid(id",{"_index":1358,"title":{},"body":{"controllers/TicketsController.html":{},"injectables/TicketsService.html":{}}}],["getting",{"_index":1844,"title":{"index.html":{},"license.html":{}},"body":{}}],["getuseradmindto",{"_index":679,"title":{"classes/GetUserAdminDto.html":{}},"body":{"classes/EditInfosDto.html":{},"classes/GetUserAdminDto.html":{},"controllers/UserAdminController.html":{},"coverage.html":{}}}],["getuserfromid",{"_index":1530,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["getuserfromid(id",{"_index":1544,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["global",{"_index":1214,"title":{},"body":{"modules/PrismaModule.html":{}}}],["goal",{"_index":658,"title":{},"body":{"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"classes/GetUserAdminDto.html":{},"classes/MealRecoDto.html":{},"injectables/MealRecoService.html":{},"injectables/UserInfoService.html":{},"classes/UserInfosDto.html":{}}}],["goal_weight",{"_index":659,"title":{},"body":{"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"classes/GetUserAdminDto.html":{},"classes/UserInfosDto.html":{}}}],["gpt",{"_index":996,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["granted",{"_index":1869,"title":{},"body":{"license.html":{}}}],["guard",{"_index":0,"title":{"guards/AdminGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AdminGuard.html":{}}}],["handleconnection",{"_index":443,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{}}}],["handleconnection(socket",{"_index":452,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{}}}],["handledisconnect",{"_index":444,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{}}}],["handledisconnect(socket",{"_index":455,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{}}}],["handlematch",{"_index":445,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{}}}],["handlematch(event",{"_index":457,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{}}}],["handlemessage",{"_index":446,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{}}}],["handlemessage(client",{"_index":462,"title":{},"body":{"classes/ChatGateway.html":{}}}],["handlemessage(socket",{"_index":521,"title":{},"body":{"injectables/ChatService.html":{}}}],["handleseen",{"_index":447,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{}}}],["handleseen(client",{"_index":467,"title":{},"body":{"classes/ChatGateway.html":{}}}],["handleseen(socket",{"_index":523,"title":{},"body":{"injectables/ChatService.html":{}}}],["handlewriting",{"_index":448,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{}}}],["handlewriting(client",{"_index":470,"title":{},"body":{"classes/ChatGateway.html":{}}}],["handlewriting(socket",{"_index":525,"title":{},"body":{"injectables/ChatService.html":{}}}],["hash",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["hassidekick",{"_index":680,"title":{},"body":{"classes/EditInfosDto.html":{},"classes/GetUserAdminDto.html":{},"controllers/UserAdminController.html":{},"injectables/UserAdminService.html":{}}}],["headers",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{},"injectables/OpenffService.html":{}}}],["hello",{"_index":144,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":989,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["hereby",{"_index":1868,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1914,"title":{},"body":{"license.html":{}}}],["html",{"_index":1411,"title":{},"body":{"injectables/TicketsService.html":{}}}],["http://13.37.217.239",{"_index":38,"title":{},"body":{"guards/AdminGuard.html":{}}}],["https://${this.configservice.get(\"aws_bucket_name\")}.s3.${this.configservice.get(\"aws_region\")}.amazonaws.com/${key",{"_index":885,"title":{},"body":{"injectables/FileService.html":{}}}],["https://cognito",{"_index":173,"title":{},"body":{"injectables/AuthConfig.html":{}}}],["https://media.istockphoto.com/id/1357365823/vector/default",{"_index":1166,"title":{},"body":{"injectables/OpenffService.html":{}}}],["httpstatus",{"_index":1551,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["httpstatus.ok",{"_index":1589,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["icon",{"_index":1168,"title":{},"body":{"injectables/OpenffService.html":{}}}],["id",{"_index":549,"title":{},"body":{"injectables/ChatService.html":{},"classes/CreateFeedbackUserDto.html":{},"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/FeedbackUserController.html":{},"injectables/FeedbackUserService.html":{},"controllers/NutritionController.html":{},"classes/NutritionDto.html":{},"injectables/NutritionService.html":{},"controllers/TicketsController.html":{},"injectables/TicketsService.html":{},"classes/UpdateExercisesLibraryDto.html":{},"classes/UpdateFeedbackUserDto.html":{},"classes/UpdateNutritionDto.html":{},"controllers/UserAdminController.html":{},"injectables/UserInfoService.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserWithoutSidekickException.html":{},"controllers/WorkoutsController.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{},"injectables/WorkoutsService.html":{}}}],["id.tostring",{"_index":1767,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["id1",{"_index":930,"title":{},"body":{"classes/MatchEvent.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{}}}],["id2",{"_index":931,"title":{},"body":{"classes/MatchEvent.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{}}}],["identifier",{"_index":1785,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["idp.${process.env.cognito_region}.amazonaws.com/${process.env.cognito_user_pool_id",{"_index":174,"title":{},"body":{"injectables/AuthConfig.html":{}}}],["image",{"_index":1167,"title":{},"body":{"injectables/OpenffService.html":{}}}],["image_front_url",{"_index":1164,"title":{},"body":{"injectables/OpenffService.html":{}}}],["images",{"_index":1642,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["implements",{"_index":28,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/PrismaService.html":{}}}],["implied",{"_index":1905,"title":{},"body":{"license.html":{}}}],["import",{"_index":22,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AtGuard.html":{},"injectables/AuthConfig.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/CreateExercisesLibraryDto.html":{},"classes/CreateFeedbackUserDto.html":{},"classes/CreateTicketDto.html":{},"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"controllers/ExercisesLibraryController.html":{},"modules/ExercisesLibraryModule.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/FeedbackUserController.html":{},"modules/FeedbackUserModule.html":{},"injectables/FeedbackUserService.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GetUserAdminDto.html":{},"injectables/JwtStrategy.html":{},"controllers/MealRecoController.html":{},"classes/MealRecoDto.html":{},"modules/MealRecoModule.html":{},"injectables/MealRecoService.html":{},"classes/ModeratorAnswerDto.html":{},"controllers/NutritionController.html":{},"classes/NutritionDto.html":{},"modules/NutritionModule.html":{},"injectables/NutritionService.html":{},"controllers/OpenffController.html":{},"modules/OpenffModule.html":{},"injectables/OpenffService.html":{},"controllers/PreferencesController.html":{},"modules/PreferencesModule.html":{},"injectables/PreferencesService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ReportsController.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"controllers/StepsController.html":{},"modules/StepsModule.html":{},"injectables/StepsService.html":{},"controllers/TicketsController.html":{},"modules/TicketsModule.html":{},"injectables/TicketsService.html":{},"classes/UpdateExercisesLibraryDto.html":{},"classes/UpdateFeedbackUserDto.html":{},"classes/UpdateNutritionDto.html":{},"classes/UpdateOpenffDto.html":{},"classes/UpdatePreferenceDto.html":{},"controllers/UserAdminController.html":{},"modules/UserAdminModule.html":{},"injectables/UserAdminService.html":{},"classes/UserAnswerDto.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"classes/UserInfosDto.html":{},"modules/UserInfosModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{},"classes/UserWithoutSidekickException.html":{},"interfaces/ValidatedUser.html":{},"controllers/WorkoutsController.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{},"modules/WorkoutsModule.html":{},"injectables/WorkoutsService.html":{}}}],["imports",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChatModule.html":{},"modules/FileModule.html":{},"modules/MealRecoModule.html":{},"modules/PrismaModule.html":{},"modules/UserInfosModule.html":{}}}],["include",{"_index":1208,"title":{},"body":{"injectables/PreferencesService.html":{},"injectables/TicketsService.html":{},"injectables/UserAdminService.html":{},"injectables/WorkoutsService.html":{}}}],["included",{"_index":1900,"title":{},"body":{"license.html":{}}}],["including",{"_index":1881,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AtGuard.html":{},"injectables/AuthConfig.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"classes/CreateExercisesLibraryDto.html":{},"classes/CreateFeedbackUserDto.html":{},"classes/CreateTicketDto.html":{},"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/FeedbackUserController.html":{},"injectables/FeedbackUserService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"classes/GetUserAdminDto.html":{},"injectables/JwtStrategy.html":{},"classes/MatchEvent.html":{},"controllers/MealRecoController.html":{},"classes/MealRecoDto.html":{},"injectables/MealRecoService.html":{},"classes/ModeratorAnswerDto.html":{},"controllers/NutritionController.html":{},"classes/NutritionDto.html":{},"injectables/NutritionService.html":{},"controllers/OpenffController.html":{},"injectables/OpenffService.html":{},"controllers/PreferencesController.html":{},"injectables/PreferencesService.html":{},"injectables/PrismaService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"classes/Rooms.html":{},"controllers/StepsController.html":{},"injectables/StepsService.html":{},"controllers/TicketsController.html":{},"injectables/TicketsService.html":{},"classes/UpdateExercisesLibraryDto.html":{},"classes/UpdateFeedbackUserDto.html":{},"classes/UpdateNutritionDto.html":{},"classes/UpdatePreferenceDto.html":{},"controllers/UserAdminController.html":{},"injectables/UserAdminService.html":{},"classes/UserAnswerDto.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"classes/UserInfosDto.html":{},"interfaces/ValidatedUser.html":{},"controllers/WorkoutsController.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{},"injectables/WorkoutsService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AtGuard.html":{},"injectables/AuthConfig.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/CreateExercisesLibraryDto.html":{},"classes/CreateFeedbackUserDto.html":{},"classes/CreateOpenffDto.html":{},"classes/CreateTicketDto.html":{},"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"controllers/ExercisesLibraryController.html":{},"modules/ExercisesLibraryModule.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/FeedbackUserController.html":{},"modules/FeedbackUserModule.html":{},"injectables/FeedbackUserService.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GetUserAdminDto.html":{},"injectables/JwtStrategy.html":{},"classes/MatchEvent.html":{},"controllers/MealRecoController.html":{},"classes/MealRecoDto.html":{},"modules/MealRecoModule.html":{},"injectables/MealRecoService.html":{},"classes/ModeratorAnswerDto.html":{},"controllers/NutritionController.html":{},"classes/NutritionDto.html":{},"modules/NutritionModule.html":{},"injectables/NutritionService.html":{},"controllers/OpenffController.html":{},"modules/OpenffModule.html":{},"injectables/OpenffService.html":{},"controllers/PreferencesController.html":{},"modules/PreferencesModule.html":{},"injectables/PreferencesService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ReportsController.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"classes/Rooms.html":{},"controllers/StepsController.html":{},"modules/StepsModule.html":{},"injectables/StepsService.html":{},"controllers/TicketsController.html":{},"modules/TicketsModule.html":{},"injectables/TicketsService.html":{},"classes/UpdateExercisesLibraryDto.html":{},"classes/UpdateFeedbackUserDto.html":{},"classes/UpdateNutritionDto.html":{},"classes/UpdateOpenffDto.html":{},"classes/UpdatePreferenceDto.html":{},"controllers/UserAdminController.html":{},"modules/UserAdminModule.html":{},"injectables/UserAdminService.html":{},"classes/UserAnswerDto.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"classes/UserInfosDto.html":{},"modules/UserInfosModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{},"classes/UserWithoutSidekickException.html":{},"interfaces/ValidatedUser.html":{},"controllers/WorkoutsController.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{},"modules/WorkoutsModule.html":{},"injectables/WorkoutsService.html":{}}}],["initiated",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectable",{"_index":23,"title":{"injectables/AppService.html":{},"injectables/AtGuard.html":{},"injectables/AuthConfig.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ExercisesLibraryService.html":{},"injectables/FeedbackUserService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/MealRecoService.html":{},"injectables/NutritionService.html":{},"injectables/OpenffService.html":{},"injectables/PreferencesService.html":{},"injectables/PrismaService.html":{},"injectables/ReportsService.html":{},"injectables/StepsService.html":{},"injectables/TicketsService.html":{},"injectables/UserAdminService.html":{},"injectables/UserInfoService.html":{},"injectables/WorkoutsService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AppService.html":{},"injectables/AtGuard.html":{},"injectables/AuthConfig.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ExercisesLibraryService.html":{},"injectables/FeedbackUserService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/MealRecoService.html":{},"injectables/NutritionService.html":{},"injectables/OpenffService.html":{},"injectables/PreferencesService.html":{},"injectables/PrismaService.html":{},"injectables/ReportsService.html":{},"injectables/StepsService.html":{},"injectables/TicketsService.html":{},"injectables/UserAdminService.html":{},"injectables/UserInfoService.html":{},"interfaces/ValidatedUser.html":{},"injectables/WorkoutsService.html":{},"coverage.html":{}}}],["injectables",{"_index":141,"title":{},"body":{"injectables/AppService.html":{},"injectables/AtGuard.html":{},"injectables/AuthConfig.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ExercisesLibraryService.html":{},"injectables/FeedbackUserService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/MealRecoService.html":{},"injectables/NutritionService.html":{},"injectables/OpenffService.html":{},"injectables/PreferencesService.html":{},"injectables/PrismaService.html":{},"injectables/ReportsService.html":{},"injectables/StepsService.html":{},"injectables/TicketsService.html":{},"injectables/UserAdminService.html":{},"injectables/UserInfoService.html":{},"injectables/WorkoutsService.html":{},"overview.html":{}}}],["interface",{"_index":903,"title":{"interfaces/ValidatedUser.html":{}},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":1682,"title":{},"body":{"interfaces/ValidatedUser.html":{}}}],["internalservererrorexception",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["isadmin",{"_index":905,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["isboolean",{"_index":678,"title":{},"body":{"classes/EditInfosDto.html":{},"classes/GetUserAdminDto.html":{},"classes/UpdatePreferenceDto.html":{}}}],["isemail",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["isglobal",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":633,"title":{},"body":{"classes/CreateExercisesLibraryDto.html":{},"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"classes/GetUserAdminDto.html":{},"classes/NutritionDto.html":{},"classes/UpdateNutritionDto.html":{},"classes/UserInfosDto.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{}}}],["isnotempty",{"_index":291,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateExercisesLibraryDto.html":{},"classes/CreateFeedbackUserDto.html":{},"classes/MealRecoDto.html":{},"classes/NutritionDto.html":{},"classes/UpdateExercisesLibraryDto.html":{},"classes/UserInfosDto.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{}}}],["isnotempty()@isint",{"_index":625,"title":{},"body":{"classes/CreateExercisesLibraryDto.html":{},"classes/NutritionDto.html":{},"classes/UserInfosDto.html":{},"classes/WorkoutsDto-1.html":{}}}],["isnotempty()@isstring",{"_index":288,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateExercisesLibraryDto.html":{},"classes/CreateFeedbackUserDto.html":{},"classes/MealRecoDto.html":{},"classes/NutritionDto.html":{},"classes/UpdateExercisesLibraryDto.html":{},"classes/UserInfosDto.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{}}}],["isnotempty()@isstring()@isoptional",{"_index":953,"title":{},"body":{"classes/MealRecoDto.html":{}}}],["isnumber",{"_index":634,"title":{},"body":{"classes/CreateExercisesLibraryDto.html":{},"classes/CreateFeedbackUserDto.html":{},"classes/ModeratorAnswerDto.html":{},"classes/UpdateFeedbackUserDto.html":{},"classes/UserAnswerDto.html":{}}}],["isoptional",{"_index":629,"title":{},"body":{"classes/CreateExercisesLibraryDto.html":{},"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"classes/GetUserAdminDto.html":{},"classes/MealRecoDto.html":{},"classes/NutritionDto.html":{},"classes/UpdateFeedbackUserDto.html":{},"classes/UpdateNutritionDto.html":{},"classes/UpdatePreferenceDto.html":{},"classes/WorkoutsDto.html":{}}}],["isoptional()@isboolean",{"_index":888,"title":{},"body":{"classes/GetUserAdminDto.html":{},"classes/UpdatePreferenceDto.html":{}}}],["isoptional()@isint",{"_index":671,"title":{},"body":{"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"classes/UpdateNutritionDto.html":{}}}],["isoptional()@isnumber",{"_index":1464,"title":{},"body":{"classes/UpdateFeedbackUserDto.html":{}}}],["isoptional()@isstring",{"_index":666,"title":{},"body":{"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"classes/GetUserAdminDto.html":{},"classes/NutritionDto.html":{},"classes/UpdateFeedbackUserDto.html":{},"classes/UpdateNutritionDto.html":{}}}],["ispublic",{"_index":157,"title":{},"body":{"injectables/AtGuard.html":{}}}],["isstring",{"_index":292,"title":{},"body":{"classes/AuthDto.html":{},"classes/CreateExercisesLibraryDto.html":{},"classes/CreateFeedbackUserDto.html":{},"classes/CreateTicketDto.html":{},"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"classes/GetUserAdminDto.html":{},"classes/MealRecoDto.html":{},"classes/ModeratorAnswerDto.html":{},"classes/NutritionDto.html":{},"classes/UpdateExercisesLibraryDto.html":{},"classes/UpdateFeedbackUserDto.html":{},"classes/UpdateNutritionDto.html":{},"classes/UserAnswerDto.html":{},"classes/UserInfosDto.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{}}}],["issuer",{"_index":919,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["jpeg|jpg|png",{"_index":1633,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["js",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["json.stringify",{"_index":1448,"title":{},"body":{"injectables/TicketsService.html":{}}}],["jwks",{"_index":901,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{},"dependencies.html":{}}}],["jwksrequestsperminute",{"_index":910,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["jwksuri",{"_index":912,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["jwt",{"_index":304,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":917,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["jwtstrategy",{"_index":296,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":875,"title":{},"body":{"injectables/FileService.html":{}}}],["kind",{"_index":1904,"title":{},"body":{"license.html":{}}}],["known/jwks.json",{"_index":914,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["last_action",{"_index":1427,"title":{},"body":{"injectables/TicketsService.html":{}}}],["lastname",{"_index":660,"title":{},"body":{"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"classes/GetUserAdminDto.html":{},"injectables/UserInfoService.html":{},"classes/UserInfosDto.html":{}}}],["launch",{"_index":1846,"title":{},"body":{"index.html":{}}}],["legend",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChatModule.html":{},"modules/ExercisesLibraryModule.html":{},"modules/FeedbackUserModule.html":{},"modules/FileModule.html":{},"modules/MealRecoModule.html":{},"modules/NutritionModule.html":{},"modules/OpenffModule.html":{},"modules/PreferencesModule.html":{},"modules/PrismaModule.html":{},"modules/ReportsModule.html":{},"modules/StepsModule.html":{},"modules/TicketsModule.html":{},"modules/UserAdminModule.html":{},"modules/UserInfosModule.html":{},"modules/WorkoutsModule.html":{},"overview.html":{}}}],["level",{"_index":661,"title":{},"body":{"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"classes/GetUserAdminDto.html":{},"injectables/UserInfoService.html":{},"classes/UserInfosDto.html":{}}}],["liability",{"_index":1918,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1915,"title":{},"body":{"license.html":{}}}],["library",{"_index":696,"title":{},"body":{"controllers/ExercisesLibraryController.html":{}}}],["license",{"_index":1862,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["limit",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"controllers/UserInfosController.html":{}}}],["limitation",{"_index":1882,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1906,"title":{},"body":{"license.html":{}}}],["limits",{"_index":1627,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["linkusers",{"_index":1531,"title":{},"body":{"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{}}}],["linkusers(@body",{"_index":1647,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["linkusers(req",{"_index":1546,"title":{},"body":{"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{}}}],["literal",{"_index":1517,"title":{},"body":{"injectables/UserAdminService.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"miscellaneous/typealiases.html":{}}}],["location",{"_index":662,"title":{},"body":{"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"classes/GetUserAdminDto.html":{},"injectables/UserInfoService.html":{},"classes/UserInfosDto.html":{}}}],["login",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(dto",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logout",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logout(@body",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(email",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["lose",{"_index":979,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["lunch",{"_index":1104,"title":{},"body":{"injectables/NutritionService.html":{}}}],["lunch.reduce((total",{"_index":1117,"title":{},"body":{"injectables/NutritionService.html":{}}}],["match",{"_index":485,"title":{},"body":{"classes/ChatGateway.html":{}}}],["matchevent",{"_index":458,"title":{"classes/MatchEvent.html":{}},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"classes/MatchEvent.html":{},"coverage.html":{}}}],["matching",{"_index":52,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AtGuard.html":{},"injectables/AuthConfig.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/CreateExercisesLibraryDto.html":{},"classes/CreateFeedbackUserDto.html":{},"classes/CreateOpenffDto.html":{},"classes/CreateTicketDto.html":{},"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"controllers/ExercisesLibraryController.html":{},"modules/ExercisesLibraryModule.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/FeedbackUserController.html":{},"modules/FeedbackUserModule.html":{},"injectables/FeedbackUserService.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GetUserAdminDto.html":{},"injectables/JwtStrategy.html":{},"classes/MatchEvent.html":{},"controllers/MealRecoController.html":{},"classes/MealRecoDto.html":{},"modules/MealRecoModule.html":{},"injectables/MealRecoService.html":{},"classes/ModeratorAnswerDto.html":{},"controllers/NutritionController.html":{},"classes/NutritionDto.html":{},"modules/NutritionModule.html":{},"injectables/NutritionService.html":{},"controllers/OpenffController.html":{},"modules/OpenffModule.html":{},"injectables/OpenffService.html":{},"controllers/PreferencesController.html":{},"modules/PreferencesModule.html":{},"injectables/PreferencesService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ReportsController.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"classes/Rooms.html":{},"controllers/StepsController.html":{},"modules/StepsModule.html":{},"injectables/StepsService.html":{},"controllers/TicketsController.html":{},"modules/TicketsModule.html":{},"injectables/TicketsService.html":{},"classes/UpdateExercisesLibraryDto.html":{},"classes/UpdateFeedbackUserDto.html":{},"classes/UpdateNutritionDto.html":{},"classes/UpdateOpenffDto.html":{},"classes/UpdatePreferenceDto.html":{},"controllers/UserAdminController.html":{},"modules/UserAdminModule.html":{},"injectables/UserAdminService.html":{},"classes/UserAnswerDto.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"classes/UserInfosDto.html":{},"modules/UserInfosModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{},"classes/UserWithoutSidekickException.html":{},"interfaces/ValidatedUser.html":{},"controllers/WorkoutsController.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{},"modules/WorkoutsModule.html":{},"injectables/WorkoutsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max_tokens",{"_index":1002,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["maxfilesizevalidator",{"_index":1612,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["me(@request",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["me(req",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["meal",{"_index":825,"title":{},"body":{"injectables/FeedbackUserService.html":{},"controllers/MealRecoController.html":{},"injectables/MealRecoService.html":{},"injectables/NutritionService.html":{}}}],["meal.calories",{"_index":1111,"title":{},"body":{"injectables/NutritionService.html":{}}}],["meal.carbs",{"_index":1112,"title":{},"body":{"injectables/NutritionService.html":{}}}],["meal.fat",{"_index":1114,"title":{},"body":{"injectables/NutritionService.html":{}}}],["meal.protein",{"_index":1113,"title":{},"body":{"injectables/NutritionService.html":{}}}],["meal_reco.controller",{"_index":960,"title":{},"body":{"modules/MealRecoModule.html":{}}}],["meal_reco.service",{"_index":943,"title":{},"body":{"controllers/MealRecoController.html":{},"modules/MealRecoModule.html":{}}}],["meal_reco/meal_reco.module",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["mealreco",{"_index":937,"title":{},"body":{"controllers/MealRecoController.html":{},"injectables/MealRecoService.html":{}}}],["mealreco(@body",{"_index":948,"title":{},"body":{"controllers/MealRecoController.html":{}}}],["mealreco(body",{"_index":938,"title":{},"body":{"controllers/MealRecoController.html":{}}}],["mealreco(user_needs",{"_index":963,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["mealrecocontroller",{"_index":934,"title":{"controllers/MealRecoController.html":{}},"body":{"controllers/MealRecoController.html":{},"modules/MealRecoModule.html":{},"coverage.html":{}}}],["mealrecodto",{"_index":939,"title":{"classes/MealRecoDto.html":{}},"body":{"controllers/MealRecoController.html":{},"classes/MealRecoDto.html":{},"coverage.html":{}}}],["mealrecomodule",{"_index":83,"title":{"modules/MealRecoModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MealRecoModule.html":{},"modules.html":{},"overview.html":{}}}],["mealrecoservice",{"_index":942,"title":{"injectables/MealRecoService.html":{}},"body":{"controllers/MealRecoController.html":{},"modules/MealRecoModule.html":{},"injectables/MealRecoService.html":{},"coverage.html":{},"overview.html":{}}}],["meals",{"_index":1115,"title":{},"body":{"injectables/NutritionService.html":{}}}],["merchantability",{"_index":1908,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1885,"title":{},"body":{"license.html":{}}}],["message",{"_index":558,"title":{},"body":{"injectables/ChatService.html":{},"injectables/TicketsService.html":{}}}],["messages",{"_index":999,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["met",{"_index":619,"title":{},"body":{"classes/CreateExercisesLibraryDto.html":{},"injectables/ExercisesLibraryService.html":{}}}],["metadata",{"_index":1834,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":1141,"title":{},"body":{"injectables/OpenffService.html":{}}}],["methods",{"_index":8,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AtGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/FeedbackUserController.html":{},"injectables/FeedbackUserService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"controllers/MealRecoController.html":{},"injectables/MealRecoService.html":{},"controllers/NutritionController.html":{},"injectables/NutritionService.html":{},"controllers/OpenffController.html":{},"injectables/OpenffService.html":{},"controllers/PreferencesController.html":{},"injectables/PreferencesService.html":{},"injectables/PrismaService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"classes/Rooms.html":{},"controllers/StepsController.html":{},"injectables/StepsService.html":{},"controllers/TicketsController.html":{},"injectables/TicketsService.html":{},"controllers/UserAdminController.html":{},"injectables/UserAdminService.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"controllers/WorkoutsController.html":{},"injectables/WorkoutsService.html":{}}}],["migrate",{"_index":1860,"title":{},"body":{"index.html":{}}}],["mimetype",{"_index":1637,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["miscellaneous",{"_index":1841,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1170,"title":{},"body":{"injectables/OpenffService.html":{}}}],["mit",{"_index":1863,"title":{},"body":{"license.html":{}}}],["mobile",{"_index":1174,"title":{},"body":{"injectables/OpenffService.html":{}}}],["model",{"_index":995,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["moderator",{"_index":1444,"title":{},"body":{"injectables/TicketsService.html":{}}}],["moderatoranswerdto",{"_index":1008,"title":{"classes/ModeratorAnswerDto.html":{}},"body":{"classes/ModeratorAnswerDto.html":{},"controllers/TicketsController.html":{},"injectables/TicketsService.html":{},"coverage.html":{}}}],["modify",{"_index":827,"title":{},"body":{"injectables/FeedbackUserService.html":{},"license.html":{}}}],["modifyfeedback",{"_index":763,"title":{},"body":{"controllers/FeedbackUserController.html":{}}}],["modifyfeedback(@param('id",{"_index":788,"title":{},"body":{"controllers/FeedbackUserController.html":{}}}],["modifyfeedback(id",{"_index":772,"title":{},"body":{"controllers/FeedbackUserController.html":{}}}],["modifying",{"_index":1858,"title":{},"body":{"index.html":{}}}],["modifymeal",{"_index":1019,"title":{},"body":{"controllers/NutritionController.html":{}}}],["modifymeal(@param('id",{"_index":1053,"title":{},"body":{"controllers/NutritionController.html":{}}}],["modifymeal(id",{"_index":1033,"title":{},"body":{"controllers/NutritionController.html":{}}}],["module",{"_index":66,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChatModule.html":{},"modules/ExercisesLibraryModule.html":{},"modules/FeedbackUserModule.html":{},"modules/FileModule.html":{},"modules/MealRecoModule.html":{},"modules/NutritionModule.html":{},"modules/OpenffModule.html":{},"modules/PreferencesModule.html":{},"modules/PrismaModule.html":{},"modules/ReportsModule.html":{},"modules/StepsModule.html":{},"modules/TicketsModule.html":{},"modules/UserAdminModule.html":{},"modules/UserInfosModule.html":{},"modules/WorkoutsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChatModule.html":{},"modules/ExercisesLibraryModule.html":{},"modules/FeedbackUserModule.html":{},"modules/FileModule.html":{},"modules/MealRecoModule.html":{},"modules/NutritionModule.html":{},"modules/OpenffModule.html":{},"modules/PreferencesModule.html":{},"modules/PrismaModule.html":{},"modules/ReportsModule.html":{},"modules/StepsModule.html":{},"modules/TicketsModule.html":{},"modules/UserAdminModule.html":{},"modules/UserInfosModule.html":{},"modules/WorkoutsModule.html":{},"overview.html":{}}}],["modules",{"_index":68,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChatModule.html":{},"modules/ExercisesLibraryModule.html":{},"modules/FeedbackUserModule.html":{},"modules/FileModule.html":{},"modules/MealRecoModule.html":{},"modules/NutritionModule.html":{},"modules/OpenffModule.html":{},"modules/PreferencesModule.html":{},"modules/PrismaModule.html":{},"modules/ReportsModule.html":{},"modules/StepsModule.html":{},"modules/TicketsModule.html":{},"modules/UserAdminModule.html":{},"modules/UserInfosModule.html":{},"modules/WorkoutsModule.html":{},"modules.html":{},"overview.html":{}}}],["multer",{"_index":1828,"title":{},"body":{"dependencies.html":{}}}],["muscle",{"_index":708,"title":{},"body":{"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{}}}],["muscle_group",{"_index":753,"title":{},"body":{"injectables/ExercisesLibraryService.html":{}}}],["musclegroup",{"_index":620,"title":{},"body":{"classes/CreateExercisesLibraryDto.html":{},"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{}}}],["name",{"_index":16,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AtGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"classes/CreateExercisesLibraryDto.html":{},"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/FeedbackUserController.html":{},"injectables/FeedbackUserService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"controllers/MealRecoController.html":{},"injectables/MealRecoService.html":{},"controllers/NutritionController.html":{},"classes/NutritionDto.html":{},"injectables/NutritionService.html":{},"controllers/OpenffController.html":{},"injectables/OpenffService.html":{},"controllers/PreferencesController.html":{},"injectables/PreferencesService.html":{},"injectables/PrismaService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"classes/Rooms.html":{},"controllers/StepsController.html":{},"injectables/StepsService.html":{},"controllers/TicketsController.html":{},"injectables/TicketsService.html":{},"classes/UpdateNutritionDto.html":{},"controllers/UserAdminController.html":{},"injectables/UserAdminService.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{},"classes/UserWithoutSidekickException.html":{},"controllers/WorkoutsController.html":{},"injectables/WorkoutsService.html":{}}}],["need",{"_index":826,"title":{},"body":{"injectables/FeedbackUserService.html":{}}}],["needs",{"_index":987,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["nestjs/common",{"_index":25,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AtGuard.html":{},"injectables/AuthConfig.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ChatController.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"controllers/ExercisesLibraryController.html":{},"modules/ExercisesLibraryModule.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/FeedbackUserController.html":{},"modules/FeedbackUserModule.html":{},"injectables/FeedbackUserService.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"controllers/MealRecoController.html":{},"modules/MealRecoModule.html":{},"injectables/MealRecoService.html":{},"controllers/NutritionController.html":{},"modules/NutritionModule.html":{},"injectables/NutritionService.html":{},"controllers/OpenffController.html":{},"modules/OpenffModule.html":{},"injectables/OpenffService.html":{},"controllers/PreferencesController.html":{},"modules/PreferencesModule.html":{},"injectables/PreferencesService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ReportsController.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"controllers/StepsController.html":{},"modules/StepsModule.html":{},"injectables/StepsService.html":{},"controllers/TicketsController.html":{},"modules/TicketsModule.html":{},"injectables/TicketsService.html":{},"controllers/UserAdminController.html":{},"modules/UserAdminModule.html":{},"injectables/UserAdminService.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"modules/UserInfosModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{},"classes/UserWithoutSidekickException.html":{},"interfaces/ValidatedUser.html":{},"controllers/WorkoutsController.html":{},"modules/WorkoutsModule.html":{},"injectables/WorkoutsService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"injectables/MealRecoService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/TicketsService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"injectables/AtGuard.html":{},"dependencies.html":{}}}],["nestjs/event",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"classes/ChatGateway.html":{},"injectables/UserInfoService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":1812,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":1460,"title":{},"body":{"classes/UpdateExercisesLibraryDto.html":{},"classes/UpdateOpenffDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":153,"title":{},"body":{"injectables/AtGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":841,"title":{},"body":{"controllers/FileController.html":{},"controllers/UserInfosController.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"controllers/MealRecoController.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":475,"title":{},"body":{"classes/ChatGateway.html":{},"dependencies.html":{}}}],["new",{"_index":46,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthService.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"injectables/FeedbackUserService.html":{},"injectables/FileService.html":{},"injectables/MealRecoService.html":{},"injectables/NutritionService.html":{},"injectables/ReportsService.html":{},"injectables/StepsService.html":{},"injectables/TicketsService.html":{},"injectables/UserInfoService.html":{},"injectables/WorkoutsService.html":{},"coverage.html":{}}}],["newdatas",{"_index":820,"title":{},"body":{"injectables/FeedbackUserService.html":{}}}],["newdatas['userid",{"_index":823,"title":{},"body":{"injectables/FeedbackUserService.html":{}}}],["newpasswordrequired",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser.authenticateuser(authenticationdetails",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser.completenewpasswordchallenge",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["node_modules/.prisma/client/index.d",{"_index":1079,"title":{},"body":{"modules/NutritionModule.html":{}}}],["noninfringement",{"_index":1912,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":1258,"title":{},"body":{"injectables/ReportsService.html":{},"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{},"classes/UserWithoutSidekickException.html":{},"injectables/WorkoutsService.html":{}}}],["notfoundexception(\"user",{"_index":1262,"title":{},"body":{"injectables/ReportsService.html":{}}}],["notfoundexception('no",{"_index":1766,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["notice",{"_index":1898,"title":{},"body":{"license.html":{}}}],["notifications",{"_index":1484,"title":{},"body":{"classes/UpdatePreferenceDto.html":{}}}],["npm",{"_index":1854,"title":{},"body":{"index.html":{}}}],["npx",{"_index":1851,"title":{},"body":{"index.html":{}}}],["null",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/FileService.html":{},"injectables/ReportsService.html":{},"injectables/UserAdminService.html":{},"injectables/UserInfoService.html":{}}}],["number",{"_index":624,"title":{},"body":{"classes/CreateExercisesLibraryDto.html":{},"classes/CreateFeedbackUserDto.html":{},"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"injectables/ExercisesLibraryService.html":{},"classes/GetUserAdminDto.html":{},"classes/NutritionDto.html":{},"injectables/NutritionService.html":{},"controllers/TicketsController.html":{},"injectables/TicketsService.html":{},"classes/UpdateFeedbackUserDto.html":{},"classes/UpdateNutritionDto.html":{},"classes/UserInfosDto.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{},"injectables/WorkoutsService.html":{},"miscellaneous/variables.html":{}}}],["number(id",{"_index":818,"title":{},"body":{"injectables/FeedbackUserService.html":{},"controllers/NutritionController.html":{}}}],["nutriments",{"_index":1154,"title":{},"body":{"injectables/OpenffService.html":{}}}],["nutrition",{"_index":1014,"title":{},"body":{"controllers/NutritionController.html":{},"modules/NutritionModule.html":{},"injectables/NutritionService.html":{}}}],["nutrition.controller",{"_index":1080,"title":{},"body":{"modules/NutritionModule.html":{}}}],["nutrition.reduce((total",{"_index":1109,"title":{},"body":{"injectables/NutritionService.html":{}}}],["nutrition.service",{"_index":1040,"title":{},"body":{"controllers/NutritionController.html":{},"modules/NutritionModule.html":{}}}],["nutrition/nutrition.controller",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["nutrition/nutrition.module",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["nutrition/nutrition.service",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["nutrition_grades",{"_index":1179,"title":{},"body":{"injectables/OpenffService.html":{}}}],["nutritioncontroller",{"_index":99,"title":{"controllers/NutritionController.html":{}},"body":{"modules/AppModule.html":{},"controllers/NutritionController.html":{},"modules/NutritionModule.html":{},"coverage.html":{}}}],["nutritiondto",{"_index":1022,"title":{"classes/NutritionDto.html":{}},"body":{"controllers/NutritionController.html":{},"classes/NutritionDto.html":{},"injectables/NutritionService.html":{},"coverage.html":{}}}],["nutritionist",{"_index":985,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["nutritionmodule",{"_index":84,"title":{"modules/NutritionModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NutritionModule.html":{},"modules.html":{},"overview.html":{}}}],["nutritionservice",{"_index":94,"title":{"injectables/NutritionService.html":{}},"body":{"modules/AppModule.html":{},"controllers/NutritionController.html":{},"modules/NutritionModule.html":{},"injectables/NutritionService.html":{},"coverage.html":{},"overview.html":{}}}],["obtaining",{"_index":1873,"title":{},"body":{"license.html":{}}}],["onevent",{"_index":478,"title":{},"body":{"classes/ChatGateway.html":{}}}],["onevent('match",{"_index":459,"title":{},"body":{"classes/ChatGateway.html":{}}}],["onfailure",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["onfailure(err",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["onmoduledestroy",{"_index":1218,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onmoduleinit",{"_index":1219,"title":{},"body":{"injectables/PrismaService.html":{}}}],["onsuccess",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["onsuccess(res",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["open",{"_index":1426,"title":{},"body":{"injectables/TicketsService.html":{}}}],["openai",{"_index":967,"title":{},"body":{"injectables/MealRecoService.html":{},"dependencies.html":{}}}],["openaiapi",{"_index":965,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["openaiapi(configuration",{"_index":971,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["opened_by_user",{"_index":1428,"title":{},"body":{"injectables/TicketsService.html":{}}}],["openff",{"_index":1122,"title":{},"body":{"controllers/OpenffController.html":{}}}],["openff.controller",{"_index":1135,"title":{},"body":{"modules/OpenffModule.html":{}}}],["openff.dto",{"_index":1479,"title":{},"body":{"classes/UpdateOpenffDto.html":{}}}],["openff.dto.ts",{"_index":646,"title":{},"body":{"classes/CreateOpenffDto.html":{},"classes/UpdateOpenffDto.html":{},"coverage.html":{}}}],["openff.service",{"_index":1127,"title":{},"body":{"controllers/OpenffController.html":{},"modules/OpenffModule.html":{}}}],["openff/openff.module",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["openffcontroller",{"_index":1120,"title":{"controllers/OpenffController.html":{}},"body":{"controllers/OpenffController.html":{},"modules/OpenffModule.html":{},"coverage.html":{}}}],["openffmodule",{"_index":85,"title":{"modules/OpenffModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OpenffModule.html":{},"modules.html":{},"overview.html":{}}}],["openffservice",{"_index":1126,"title":{"injectables/OpenffService.html":{}},"body":{"controllers/OpenffController.html":{},"modules/OpenffModule.html":{},"injectables/OpenffService.html":{},"coverage.html":{},"overview.html":{}}}],["optional",{"_index":18,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AtGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/FeedbackUserController.html":{},"injectables/FeedbackUserService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"controllers/MealRecoController.html":{},"injectables/MealRecoService.html":{},"controllers/NutritionController.html":{},"injectables/NutritionService.html":{},"controllers/OpenffController.html":{},"injectables/OpenffService.html":{},"controllers/PreferencesController.html":{},"injectables/PreferencesService.html":{},"injectables/PrismaService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"classes/Rooms.html":{},"controllers/StepsController.html":{},"injectables/StepsService.html":{},"controllers/TicketsController.html":{},"injectables/TicketsService.html":{},"controllers/UserAdminController.html":{},"injectables/UserAdminService.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{},"classes/UserWithoutSidekickException.html":{},"interfaces/ValidatedUser.html":{},"controllers/WorkoutsController.html":{},"injectables/WorkoutsService.html":{}}}],["orderby",{"_index":586,"title":{},"body":{"injectables/ChatService.html":{},"injectables/TicketsService.html":{}}}],["origin",{"_index":481,"title":{},"body":{"classes/ChatGateway.html":{}}}],["otherwise",{"_index":42,"title":{},"body":{"guards/AdminGuard.html":{},"license.html":{}}}],["out",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChatModule.html":{},"modules/ExercisesLibraryModule.html":{},"modules/FeedbackUserModule.html":{},"modules/FileModule.html":{},"modules/MealRecoModule.html":{},"modules/NutritionModule.html":{},"modules/OpenffModule.html":{},"modules/PreferencesModule.html":{},"modules/PrismaModule.html":{},"modules/ReportsModule.html":{},"modules/StepsModule.html":{},"modules/TicketsModule.html":{},"modules/UserAdminModule.html":{},"modules/UserInfosModule.html":{},"modules/WorkoutsModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1930,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1806,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":1171,"title":{},"body":{"injectables/OpenffService.html":{}}}],["pagesize",{"_index":529,"title":{},"body":{"injectables/ChatService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":428,"title":{},"body":{"controllers/ChatController.html":{},"controllers/ExercisesLibraryController.html":{},"controllers/FeedbackUserController.html":{},"controllers/NutritionController.html":{},"controllers/OpenffController.html":{},"controllers/TicketsController.html":{},"controllers/WorkoutsController.html":{}}}],["param(\"id",{"_index":1376,"title":{},"body":{"controllers/TicketsController.html":{}}}],["parameters",{"_index":14,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AtGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/FeedbackUserController.html":{},"injectables/FeedbackUserService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"controllers/MealRecoController.html":{},"injectables/MealRecoService.html":{},"controllers/NutritionController.html":{},"injectables/NutritionService.html":{},"controllers/OpenffController.html":{},"injectables/OpenffService.html":{},"controllers/PreferencesController.html":{},"injectables/PreferencesService.html":{},"injectables/PrismaService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"classes/Rooms.html":{},"controllers/StepsController.html":{},"injectables/StepsService.html":{},"controllers/TicketsController.html":{},"injectables/TicketsService.html":{},"controllers/UserAdminController.html":{},"injectables/UserAdminService.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{},"classes/UserWithoutSidekickException.html":{},"controllers/WorkoutsController.html":{},"injectables/WorkoutsService.html":{}}}],["params",{"_index":1442,"title":{},"body":{"injectables/TicketsService.html":{}}}],["parseboolpipe",{"_index":1498,"title":{},"body":{"controllers/UserAdminController.html":{}}}],["parsefilepipe",{"_index":837,"title":{},"body":{"controllers/FileController.html":{},"controllers/UserInfosController.html":{}}}],["parseintpipe",{"_index":1363,"title":{},"body":{"controllers/TicketsController.html":{}}}],["partialtype",{"_index":1459,"title":{},"body":{"classes/UpdateExercisesLibraryDto.html":{},"classes/UpdateOpenffDto.html":{}}}],["partialtype(createexerciseslibrarydto",{"_index":1462,"title":{},"body":{"classes/UpdateExercisesLibraryDto.html":{}}}],["partialtype(createopenffdto",{"_index":1480,"title":{},"body":{"classes/UpdateOpenffDto.html":{}}}],["particular",{"_index":1910,"title":{},"body":{"license.html":{}}}],["passport",{"_index":898,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{},"dependencies.html":{}}}],["passportjwtsecret",{"_index":900,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["passportmodule",{"_index":298,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":302,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":899,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["passportstrategy(strategy",{"_index":906,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["password",{"_index":287,"title":{},"body":{"classes/AuthDto.html":{},"injectables/AuthService.html":{}}}],["patch",{"_index":719,"title":{},"body":{"controllers/ExercisesLibraryController.html":{},"controllers/FeedbackUserController.html":{}}}],["patch(':id",{"_index":717,"title":{},"body":{"controllers/ExercisesLibraryController.html":{}}}],["path",{"_index":1614,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["payload",{"_index":463,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":924,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["payload.sub",{"_index":923,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["payload['cognito:groups",{"_index":925,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["payload['cognito:groups'].includes('admin",{"_index":926,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["period",{"_index":1062,"title":{},"body":{"classes/NutritionDto.html":{},"injectables/NutritionService.html":{},"classes/UpdateNutritionDto.html":{}}}],["permission",{"_index":1867,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1892,"title":{},"body":{"license.html":{}}}],["person",{"_index":1872,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1893,"title":{},"body":{"license.html":{}}}],["photo.jpg?s=612x612&w=0&k=20&c=pm_optehhbtzkujqllcjlz",{"_index":1176,"title":{},"body":{"injectables/OpenffService.html":{}}}],["picture",{"_index":1063,"title":{},"body":{"classes/NutritionDto.html":{},"injectables/OpenffService.html":{},"classes/UpdateNutritionDto.html":{}}}],["pool",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["poolurl",{"_index":168,"title":{},"body":{"injectables/AuthConfig.html":{}}}],["portions",{"_index":1902,"title":{},"body":{"license.html":{}}}],["post",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ExercisesLibraryController.html":{},"controllers/FeedbackUserController.html":{},"controllers/FileController.html":{},"controllers/MealRecoController.html":{},"controllers/NutritionController.html":{},"controllers/PreferencesController.html":{},"controllers/ReportsController.html":{},"controllers/TicketsController.html":{},"controllers/UserAdminController.html":{},"controllers/UserInfosController.html":{},"controllers/WorkoutsController.html":{}}}],["post(\"/update",{"_index":1507,"title":{},"body":{"controllers/UserAdminController.html":{}}}],["post(\":id/admin/answer",{"_index":1378,"title":{},"body":{"controllers/TicketsController.html":{}}}],["post(\":id/answer",{"_index":1374,"title":{},"body":{"controllers/TicketsController.html":{}}}],["post(\":id/close",{"_index":1381,"title":{},"body":{"controllers/TicketsController.html":{}}}],["post(\"add",{"_index":1725,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["post(\"change",{"_index":1245,"title":{},"body":{"controllers/ReportsController.html":{}}}],["post(\"delete",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"forgotpassword",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"link_users",{"_index":1646,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["post(\"login",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"logout",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"refresh",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"register",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"resetpassword",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/avatar",{"_index":1626,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["post('/avatar')@useinterceptors(undefined",{"_index":1606,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["post(':id/answer",{"_index":1361,"title":{},"body":{"controllers/TicketsController.html":{}}}],["post('add",{"_index":1689,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["post('change",{"_index":1233,"title":{},"body":{"controllers/ReportsController.html":{}}}],["post('upload",{"_index":847,"title":{},"body":{"controllers/FileController.html":{}}}],["post()@throttle(1",{"_index":940,"title":{},"body":{"controllers/MealRecoController.html":{}}}],["postemail",{"_index":1674,"title":{},"body":{"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-2.html":{}}}],["postid",{"_index":1677,"title":{},"body":{"classes/UserNotFoundException-1.html":{},"classes/UserWithoutSidekickException.html":{}}}],["preference.dto",{"_index":1190,"title":{},"body":{"controllers/PreferencesController.html":{},"injectables/PreferencesService.html":{}}}],["preference.dto.ts",{"_index":1482,"title":{},"body":{"classes/UpdatePreferenceDto.html":{},"coverage.html":{}}}],["preference.dto.ts:10",{"_index":1488,"title":{},"body":{"classes/UpdatePreferenceDto.html":{}}}],["preference.dto.ts:14",{"_index":1487,"title":{},"body":{"classes/UpdatePreferenceDto.html":{}}}],["preference.dto.ts:6",{"_index":1486,"title":{},"body":{"classes/UpdatePreferenceDto.html":{}}}],["preferences",{"_index":1184,"title":{},"body":{"controllers/PreferencesController.html":{},"injectables/PreferencesService.html":{}}}],["preferences.controller",{"_index":1201,"title":{},"body":{"modules/PreferencesModule.html":{}}}],["preferences.service",{"_index":1192,"title":{},"body":{"controllers/PreferencesController.html":{},"modules/PreferencesModule.html":{}}}],["preferences/preferences.module",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["preferencescontroller",{"_index":1182,"title":{"controllers/PreferencesController.html":{}},"body":{"controllers/PreferencesController.html":{},"modules/PreferencesModule.html":{},"coverage.html":{}}}],["preferencesmodule",{"_index":86,"title":{"modules/PreferencesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PreferencesModule.html":{},"modules.html":{},"overview.html":{}}}],["preferencesservice",{"_index":1191,"title":{"injectables/PreferencesService.html":{}},"body":{"controllers/PreferencesController.html":{},"modules/PreferencesModule.html":{},"injectables/PreferencesService.html":{},"coverage.html":{},"overview.html":{}}}],["prefix",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ChatController.html":{},"controllers/ExercisesLibraryController.html":{},"controllers/FeedbackUserController.html":{},"controllers/FileController.html":{},"controllers/MealRecoController.html":{},"controllers/NutritionController.html":{},"controllers/OpenffController.html":{},"controllers/PreferencesController.html":{},"controllers/ReportsController.html":{},"controllers/TicketsController.html":{},"controllers/UserAdminController.html":{},"controllers/UserInfosController.html":{},"controllers/WorkoutsController.html":{}}}],["prisma",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ExercisesLibraryService.html":{},"injectables/ReportsService.html":{},"index.html":{}}}],["prisma.service",{"_index":1215,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":632,"title":{},"body":{"classes/CreateExercisesLibraryDto.html":{},"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{},"classes/GetUserAdminDto.html":{},"classes/NutritionDto.html":{},"injectables/PrismaService.html":{},"classes/UpdateNutritionDto.html":{},"injectables/UserInfoService.html":{},"classes/UserInfosDto.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma/prisma.service",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/FeedbackUserService.html":{},"injectables/NutritionService.html":{},"injectables/OpenffService.html":{},"injectables/PreferencesService.html":{},"injectables/ReportsService.html":{},"modules/StepsModule.html":{},"injectables/StepsService.html":{},"injectables/TicketsService.html":{},"injectables/UserInfoService.html":{},"injectables/WorkoutsService.html":{}}}],["prismaclient",{"_index":1217,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":87,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":311,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/ExercisesLibraryService.html":{},"injectables/FeedbackUserService.html":{},"injectables/NutritionService.html":{},"injectables/OpenffService.html":{},"injectables/PreferencesService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ReportsService.html":{},"modules/StepsModule.html":{},"injectables/StepsService.html":{},"injectables/TicketsService.html":{},"injectables/UserAdminService.html":{},"injectables/UserInfoService.html":{},"injectables/WorkoutsService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/FeedbackUserService.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"injectables/MealRecoService.html":{},"classes/Rooms.html":{},"injectables/TicketsService.html":{},"injectables/UserInfoService.html":{},"interfaces/ValidatedUser.html":{}}}],["process.env.cognito_client_id",{"_index":176,"title":{},"body":{"injectables/AuthConfig.html":{}}}],["process.env.cognito_pool_url",{"_index":178,"title":{},"body":{"injectables/AuthConfig.html":{}}}],["process.env.cognito_region",{"_index":180,"title":{},"body":{"injectables/AuthConfig.html":{}}}],["process.env.cognito_user_pool_id",{"_index":182,"title":{},"body":{"injectables/AuthConfig.html":{}}}],["product.brands",{"_index":1152,"title":{},"body":{"injectables/OpenffService.html":{}}}],["product.carbohydrates_100g",{"_index":1161,"title":{},"body":{"injectables/OpenffService.html":{}}}],["product.energy_kcal_100g",{"_index":1156,"title":{},"body":{"injectables/OpenffService.html":{}}}],["product.fat_100g",{"_index":1163,"title":{},"body":{"injectables/OpenffService.html":{}}}],["product.image_front_url",{"_index":1165,"title":{},"body":{"injectables/OpenffService.html":{}}}],["product.nutriscore",{"_index":1180,"title":{},"body":{"injectables/OpenffService.html":{}}}],["product.product_name",{"_index":1149,"title":{},"body":{"injectables/OpenffService.html":{}}}],["product.proteins_100g",{"_index":1158,"title":{},"body":{"injectables/OpenffService.html":{}}}],["product_name",{"_index":1148,"title":{},"body":{"injectables/OpenffService.html":{}}}],["products",{"_index":1145,"title":{},"body":{"injectables/OpenffService.html":{}}}],["products.map((product",{"_index":1147,"title":{},"body":{"injectables/OpenffService.html":{}}}],["promise",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/MealRecoService.html":{},"interfaces/ValidatedUser.html":{}}}],["promise((resolve",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.all",{"_index":1264,"title":{},"body":{"injectables/ReportsService.html":{},"injectables/UserInfoService.html":{}}}],["prompt",{"_index":982,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["prompt.push",{"_index":992,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["properties",{"_index":164,"title":{"properties.html":{}},"body":{"injectables/AuthConfig.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"classes/CreateExercisesLibraryDto.html":{},"classes/CreateFeedbackUserDto.html":{},"classes/CreateTicketDto.html":{},"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"injectables/FileService.html":{},"classes/GetUserAdminDto.html":{},"classes/MatchEvent.html":{},"classes/MealRecoDto.html":{},"injectables/MealRecoService.html":{},"classes/ModeratorAnswerDto.html":{},"classes/NutritionDto.html":{},"classes/Rooms.html":{},"injectables/TicketsService.html":{},"classes/UpdateExercisesLibraryDto.html":{},"classes/UpdateFeedbackUserDto.html":{},"classes/UpdateNutritionDto.html":{},"classes/UpdatePreferenceDto.html":{},"classes/UserAnswerDto.html":{},"classes/UserInfosDto.html":{},"interfaces/ValidatedUser.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{},"properties.html":{}}}],["protein",{"_index":1064,"title":{},"body":{"classes/NutritionDto.html":{},"injectables/NutritionService.html":{},"classes/UpdateNutritionDto.html":{}}}],["proteins_100g",{"_index":1157,"title":{},"body":{"injectables/OpenffService.html":{}}}],["provide",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":1268,"title":{},"body":{"injectables/ReportsService.html":{},"license.html":{}}}],["providers",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChatModule.html":{},"modules/ExercisesLibraryModule.html":{},"modules/FeedbackUserModule.html":{},"modules/FileModule.html":{},"modules/MealRecoModule.html":{},"modules/NutritionModule.html":{},"modules/OpenffModule.html":{},"modules/PreferencesModule.html":{},"modules/PrismaModule.html":{},"modules/ReportsModule.html":{},"modules/StepsModule.html":{},"modules/TicketsModule.html":{},"modules/UserAdminModule.html":{},"modules/UserInfosModule.html":{},"modules/WorkoutsModule.html":{},"overview.html":{}}}],["public",{"_index":165,"title":{},"body":{"injectables/AuthConfig.html":{},"controllers/AuthController.html":{},"controllers/ChatController.html":{},"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/FeedbackUserController.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"controllers/MealRecoController.html":{},"injectables/NutritionService.html":{},"controllers/OpenffController.html":{},"injectables/StepsService.html":{},"controllers/UserAdminController.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"interfaces/ValidatedUser.html":{},"injectables/WorkoutsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get",{"_index":767,"title":{},"body":{"controllers/FeedbackUserController.html":{},"controllers/UserAdminController.html":{}}}],["public()@get(':request",{"_index":1124,"title":{},"body":{"controllers/OpenffController.html":{}}}],["public()@get('find_users_without_sidekick",{"_index":1602,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["public()@get('public",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post",{"_index":702,"title":{},"body":{"controllers/ExercisesLibraryController.html":{}}}],["public()@post('/update",{"_index":1494,"title":{},"body":{"controllers/UserAdminController.html":{}}}],["public()@post('delete",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('forgotpassword",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('login",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('logout",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('refresh",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('register",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('resetpassword",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('upload')@useinterceptors(undefined",{"_index":835,"title":{},"body":{"controllers/FileController.html":{}}}],["publish",{"_index":1886,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1911,"title":{},"body":{"license.html":{}}}],["put",{"_index":779,"title":{},"body":{"controllers/FeedbackUserController.html":{},"controllers/NutritionController.html":{},"controllers/UserInfosController.html":{},"controllers/WorkoutsController.html":{}}}],["put(\"/:id",{"_index":787,"title":{},"body":{"controllers/FeedbackUserController.html":{},"controllers/NutritionController.html":{}}}],["put(\"/update",{"_index":1623,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["put(\"update/:id",{"_index":1727,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["put('/:id",{"_index":774,"title":{},"body":{"controllers/FeedbackUserController.html":{},"controllers/NutritionController.html":{}}}],["put('/update",{"_index":1609,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["put('update/:id",{"_index":1706,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["query",{"_index":429,"title":{},"body":{"controllers/ChatController.html":{},"controllers/ExercisesLibraryController.html":{},"controllers/FeedbackUserController.html":{},"controllers/NutritionController.html":{},"controllers/StepsController.html":{},"controllers/TicketsController.html":{},"controllers/UserAdminController.html":{},"controllers/UserInfosController.html":{},"controllers/WorkoutsController.html":{}}}],["query(\"cursor",{"_index":439,"title":{},"body":{"controllers/ChatController.html":{}}}],["query('day",{"_index":1049,"title":{},"body":{"controllers/NutritionController.html":{},"controllers/WorkoutsController.html":{}}}],["query('sidekick",{"_index":1505,"title":{},"body":{"controllers/UserAdminController.html":{}}}],["ratelimit",{"_index":909,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["rating",{"_index":639,"title":{},"body":{"classes/CreateFeedbackUserDto.html":{},"classes/UpdateFeedbackUserDto.html":{}}}],["read",{"_index":884,"title":{},"body":{"injectables/FileService.html":{}}}],["readonly",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"controllers/ExercisesLibraryController.html":{},"controllers/FeedbackUserController.html":{},"controllers/FileController.html":{},"injectables/JwtStrategy.html":{},"controllers/MealRecoController.html":{},"injectables/MealRecoService.html":{},"controllers/OpenffController.html":{},"controllers/PreferencesController.html":{},"controllers/ReportsController.html":{},"controllers/TicketsController.html":{},"controllers/UserAdminController.html":{},"interfaces/ValidatedUser.html":{}}}],["reason",{"_index":1237,"title":{},"body":{"controllers/ReportsController.html":{},"injectables/ReportsService.html":{}}}],["received",{"_index":570,"title":{},"body":{"injectables/ChatService.html":{}}}],["reco",{"_index":936,"title":{},"body":{"controllers/MealRecoController.html":{}}}],["recommendation",{"_index":988,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["referer",{"_index":34,"title":{},"body":{"guards/AdminGuard.html":{}}}],["reflect",{"_index":1833,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":149,"title":{},"body":{"injectables/AtGuard.html":{}}}],["refresh",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refresh(@body(\"rt",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(rt",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refresh_token",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["region",{"_index":169,"title":{},"body":{"injectables/AuthConfig.html":{},"injectables/FileService.html":{},"injectables/TicketsService.html":{}}}],["register",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(dto",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["reject",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["reject(e",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["reject(err",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["reject(new",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["remove",{"_index":606,"title":{},"body":{"injectables/ChatService.html":{},"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/WorkoutsController.html":{},"injectables/WorkoutsService.html":{}}}],["remove(@param('id",{"_index":736,"title":{},"body":{"controllers/ExercisesLibraryController.html":{},"controllers/WorkoutsController.html":{}}}],["remove(id",{"_index":712,"title":{},"body":{"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/WorkoutsController.html":{},"injectables/WorkoutsService.html":{}}}],["removefeedback",{"_index":764,"title":{},"body":{"controllers/FeedbackUserController.html":{}}}],["removefeedback(@param('id",{"_index":791,"title":{},"body":{"controllers/FeedbackUserController.html":{}}}],["removefeedback(id",{"_index":776,"title":{},"body":{"controllers/FeedbackUserController.html":{}}}],["removemeal",{"_index":1020,"title":{},"body":{"controllers/NutritionController.html":{}}}],["removemeal(@param('id",{"_index":1055,"title":{},"body":{"controllers/NutritionController.html":{}}}],["removemeal(id",{"_index":1036,"title":{},"body":{"controllers/NutritionController.html":{}}}],["removeroom",{"_index":1276,"title":{},"body":{"classes/Rooms.html":{}}}],["removeroom(roomid",{"_index":1291,"title":{},"body":{"classes/Rooms.html":{}}}],["removeuserfromroom",{"_index":1277,"title":{},"body":{"classes/Rooms.html":{}}}],["removeuserfromroom(roomid",{"_index":1293,"title":{},"body":{"classes/Rooms.html":{}}}],["replytoaddresses",{"_index":1410,"title":{},"body":{"injectables/TicketsService.html":{}}}],["reporter",{"_index":1255,"title":{},"body":{"injectables/ReportsService.html":{}}}],["reporteremail",{"_index":1269,"title":{},"body":{"injectables/ReportsService.html":{}}}],["reports",{"_index":1230,"title":{},"body":{"controllers/ReportsController.html":{}}}],["reports.controller",{"_index":1250,"title":{},"body":{"modules/ReportsModule.html":{}}}],["reports.service",{"_index":1241,"title":{},"body":{"controllers/ReportsController.html":{},"modules/ReportsModule.html":{}}}],["reports/reports.module",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["reportscontroller",{"_index":1228,"title":{"controllers/ReportsController.html":{}},"body":{"controllers/ReportsController.html":{},"modules/ReportsModule.html":{},"coverage.html":{}}}],["reportsmodule",{"_index":88,"title":{"modules/ReportsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ReportsModule.html":{},"modules.html":{},"overview.html":{}}}],["reportsservice",{"_index":1240,"title":{"injectables/ReportsService.html":{}},"body":{"controllers/ReportsController.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"coverage.html":{},"overview.html":{}}}],["req",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FeedbackUserController.html":{},"controllers/NutritionController.html":{},"controllers/StepsController.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"controllers/WorkoutsController.html":{}}}],["req.user.email",{"_index":786,"title":{},"body":{"controllers/FeedbackUserController.html":{},"controllers/NutritionController.html":{},"controllers/UserInfosController.html":{},"controllers/WorkoutsController.html":{}}}],["request",{"_index":30,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FeedbackUserController.html":{},"injectables/MealRecoService.html":{},"controllers/NutritionController.html":{},"controllers/OpenffController.html":{},"injectables/OpenffService.html":{},"controllers/StepsController.html":{},"controllers/UserInfosController.html":{},"controllers/WorkoutsController.html":{},"miscellaneous/variables.html":{}}}],["request.headers.referer",{"_index":35,"title":{},"body":{"guards/AdminGuard.html":{}}}],["request.headers.referrer",{"_index":36,"title":{},"body":{"guards/AdminGuard.html":{}}}],["request.user",{"_index":33,"title":{},"body":{"guards/AdminGuard.html":{}}}],["request?.user?.email",{"_index":1950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":975,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["requiredattributes",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["res",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/MealRecoService.html":{},"injectables/OpenffService.html":{},"injectables/TicketsService.html":{}}}],["res.data.choices[0].message.content",{"_index":1004,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["res.getidtoken().getjwttoken",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.getrefreshtoken().gettoken",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.status(200).send",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.then((response",{"_index":1143,"title":{},"body":{"injectables/OpenffService.html":{}}}],["res?.getidtoken()?.getjwttoken",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["res?.getrefreshtoken()?.gettoken",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ChatModule.html":{},"modules/ExercisesLibraryModule.html":{},"modules/FeedbackUserModule.html":{},"modules/FileModule.html":{},"modules/MealRecoModule.html":{},"modules/NutritionModule.html":{},"modules/OpenffModule.html":{},"modules/PreferencesModule.html":{},"modules/PrismaModule.html":{},"modules/ReportsModule.html":{},"modules/StepsModule.html":{},"modules/TicketsModule.html":{},"modules/UserAdminModule.html":{},"modules/UserInfosModule.html":{},"modules/WorkoutsModule.html":{},"overview.html":{}}}],["resetpassword",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["resetpassword(@body",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(dto",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["resolve",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve(data",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve(res",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolve(result",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["response",{"_index":1429,"title":{},"body":{"injectables/TicketsService.html":{}}}],["response.json",{"_index":1144,"title":{},"body":{"injectables/OpenffService.html":{}}}],["responses",{"_index":1434,"title":{},"body":{"injectables/TicketsService.html":{}}}],["restriction",{"_index":1880,"title":{},"body":{"license.html":{}}}],["result",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["result.getidtoken().getjwttoken",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["result.getrefreshtoken().gettoken",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":51,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AtGuard.html":{},"injectables/AuthConfig.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/CreateExercisesLibraryDto.html":{},"classes/CreateFeedbackUserDto.html":{},"classes/CreateOpenffDto.html":{},"classes/CreateTicketDto.html":{},"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"controllers/ExercisesLibraryController.html":{},"modules/ExercisesLibraryModule.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/FeedbackUserController.html":{},"modules/FeedbackUserModule.html":{},"injectables/FeedbackUserService.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GetUserAdminDto.html":{},"injectables/JwtStrategy.html":{},"classes/MatchEvent.html":{},"controllers/MealRecoController.html":{},"classes/MealRecoDto.html":{},"modules/MealRecoModule.html":{},"injectables/MealRecoService.html":{},"classes/ModeratorAnswerDto.html":{},"controllers/NutritionController.html":{},"classes/NutritionDto.html":{},"modules/NutritionModule.html":{},"injectables/NutritionService.html":{},"controllers/OpenffController.html":{},"modules/OpenffModule.html":{},"injectables/OpenffService.html":{},"controllers/PreferencesController.html":{},"modules/PreferencesModule.html":{},"injectables/PreferencesService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ReportsController.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"classes/Rooms.html":{},"controllers/StepsController.html":{},"modules/StepsModule.html":{},"injectables/StepsService.html":{},"controllers/TicketsController.html":{},"modules/TicketsModule.html":{},"injectables/TicketsService.html":{},"classes/UpdateExercisesLibraryDto.html":{},"classes/UpdateFeedbackUserDto.html":{},"classes/UpdateNutritionDto.html":{},"classes/UpdateOpenffDto.html":{},"classes/UpdatePreferenceDto.html":{},"controllers/UserAdminController.html":{},"modules/UserAdminModule.html":{},"injectables/UserAdminService.html":{},"classes/UserAnswerDto.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"classes/UserInfosDto.html":{},"modules/UserInfosModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{},"classes/UserWithoutSidekickException.html":{},"interfaces/ValidatedUser.html":{},"controllers/WorkoutsController.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{},"modules/WorkoutsModule.html":{},"injectables/WorkoutsService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":40,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AtGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/FeedbackUserController.html":{},"injectables/FeedbackUserService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"controllers/MealRecoController.html":{},"injectables/MealRecoService.html":{},"controllers/NutritionController.html":{},"injectables/NutritionService.html":{},"controllers/OpenffController.html":{},"injectables/OpenffService.html":{},"controllers/PreferencesController.html":{},"injectables/PreferencesService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"classes/Rooms.html":{},"controllers/StepsController.html":{},"injectables/StepsService.html":{},"controllers/TicketsController.html":{},"injectables/TicketsService.html":{},"controllers/UserAdminController.html":{},"injectables/UserAdminService.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"interfaces/ValidatedUser.html":{},"controllers/WorkoutsController.html":{},"injectables/WorkoutsService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":20,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AtGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/FeedbackUserController.html":{},"injectables/FeedbackUserService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"injectables/JwtStrategy.html":{},"controllers/MealRecoController.html":{},"injectables/MealRecoService.html":{},"controllers/NutritionController.html":{},"injectables/NutritionService.html":{},"controllers/OpenffController.html":{},"injectables/OpenffService.html":{},"controllers/PreferencesController.html":{},"injectables/PreferencesService.html":{},"injectables/PrismaService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"classes/Rooms.html":{},"controllers/StepsController.html":{},"injectables/StepsService.html":{},"controllers/TicketsController.html":{},"injectables/TicketsService.html":{},"controllers/UserAdminController.html":{},"injectables/UserAdminService.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"controllers/WorkoutsController.html":{},"injectables/WorkoutsService.html":{}}}],["rights",{"_index":1883,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1836,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":983,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["room",{"_index":487,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"classes/Rooms.html":{},"miscellaneous/typealiases.html":{}}}],["room.name",{"_index":1298,"title":{},"body":{"classes/Rooms.html":{}}}],["room.users",{"_index":1302,"title":{},"body":{"classes/Rooms.html":{}}}],["room.users.filter((user",{"_index":1303,"title":{},"body":{"classes/Rooms.html":{}}}],["room.users.find((user",{"_index":1304,"title":{},"body":{"classes/Rooms.html":{}}}],["room.users.push(user",{"_index":1301,"title":{},"body":{"classes/Rooms.html":{}}}],["room1",{"_index":589,"title":{},"body":{"injectables/ChatService.html":{}}}],["room2",{"_index":591,"title":{},"body":{"injectables/ChatService.html":{}}}],["roomid",{"_index":1284,"title":{},"body":{"classes/Rooms.html":{}}}],["roomname",{"_index":535,"title":{},"body":{"injectables/ChatService.html":{}}}],["rooms",{"_index":507,"title":{"classes/Rooms.html":{}},"body":{"injectables/ChatService.html":{},"classes/Rooms.html":{},"coverage.html":{}}}],["route",{"_index":50,"title":{},"body":{"guards/AdminGuard.html":{}}}],["rs256",{"_index":922,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["rsa",{"_index":902,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{},"dependencies.html":{}}}],["rt",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["run",{"_index":1855,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1838,"title":{},"body":{"dependencies.html":{}}}],["s3",{"_index":858,"title":{},"body":{"injectables/FileService.html":{},"dependencies.html":{}}}],["save",{"_index":557,"title":{},"body":{"injectables/ChatService.html":{}}}],["schema",{"_index":1850,"title":{},"body":{"index.html":{}}}],["schema.prisma",{"_index":1859,"title":{},"body":{"index.html":{}}}],["sdk/client",{"_index":866,"title":{},"body":{"injectables/FileService.html":{},"injectables/TicketsService.html":{},"dependencies.html":{}}}],["secretaccesskey",{"_index":873,"title":{},"body":{"injectables/FileService.html":{},"injectables/TicketsService.html":{}}}],["secretorkeyprovider",{"_index":907,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["seeddev",{"_index":1853,"title":{},"body":{"index.html":{}}}],["seen",{"_index":574,"title":{},"body":{"injectables/ChatService.html":{}}}],["sell",{"_index":1890,"title":{},"body":{"license.html":{}}}],["sent",{"_index":567,"title":{},"body":{"injectables/ChatService.html":{},"injectables/TicketsService.html":{}}}],["server",{"_index":442,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{}}}],["server.sockets.sockets.get(room1?.users[0]?.socketid",{"_index":599,"title":{},"body":{"injectables/ChatService.html":{}}}],["server.sockets.sockets.get(room2?.users[0]?.socketid",{"_index":602,"title":{},"body":{"injectables/ChatService.html":{}}}],["ses",{"_index":1395,"title":{},"body":{"injectables/TicketsService.html":{},"dependencies.html":{}}}],["sesclient",{"_index":1418,"title":{},"body":{"injectables/TicketsService.html":{}}}],["setavatar",{"_index":1532,"title":{},"body":{"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{}}}],["setavatar(@getcurrentuseremail",{"_index":1644,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["setavatar(email",{"_index":1548,"title":{},"body":{"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{}}}],["setmetadata('ispublic",{"_index":1951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":1899,"title":{},"body":{"license.html":{}}}],["shape",{"_index":981,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["sidekick",{"_index":488,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"injectables/ReportsService.html":{},"injectables/TicketsService.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserWithoutSidekickException.html":{},"license.html":{}}}],["sidekick.eip@gmail.com",{"_index":1454,"title":{},"body":{"injectables/TicketsService.html":{}}}],["sidekick].sort().join(\"_",{"_index":536,"title":{},"body":{"injectables/ChatService.html":{}}}],["sidekick_id",{"_index":1266,"title":{},"body":{"injectables/ReportsService.html":{},"injectables/UserAdminService.html":{},"injectables/UserInfoService.html":{}}}],["sidekickdatas",{"_index":1563,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["sidekickdatas.activities",{"_index":1576,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["sidekickdatas.avatar",{"_index":1568,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["sidekickdatas.birth_date",{"_index":1565,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["sidekickdatas.description",{"_index":1573,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["sidekickdatas.firstname",{"_index":1570,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["sidekickdatas.gender",{"_index":1566,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["sidekickdatas.goal",{"_index":1574,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["sidekickdatas.lastname",{"_index":1569,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["sidekickdatas.level",{"_index":1575,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["sidekickdatas.location",{"_index":1577,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["sidekickdatas.size",{"_index":1571,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["sidekickid",{"_index":543,"title":{},"body":{"injectables/ChatService.html":{},"classes/Rooms.html":{}}}],["size",{"_index":663,"title":{},"body":{"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"classes/GetUserAdminDto.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"classes/UserInfosDto.html":{}}}],["skip",{"_index":583,"title":{},"body":{"injectables/ChatService.html":{},"injectables/TicketsService.html":{}}}],["snacks",{"_index":1108,"title":{},"body":{"injectables/NutritionService.html":{}}}],["snacks.reduce((total",{"_index":1119,"title":{},"body":{"injectables/NutritionService.html":{}}}],["socket",{"_index":453,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{}}}],["socket.broadcast.emit(\"message",{"_index":556,"title":{},"body":{"injectables/ChatService.html":{}}}],["socket.broadcast.emit(\"seen",{"_index":572,"title":{},"body":{"injectables/ChatService.html":{}}}],["socket.broadcast.emit(\"writing",{"_index":568,"title":{},"body":{"injectables/ChatService.html":{}}}],["socket.disconnect",{"_index":532,"title":{},"body":{"injectables/ChatService.html":{}}}],["socket.emit(\"message",{"_index":546,"title":{},"body":{"injectables/ChatService.html":{}}}],["socket.emit(\"seen",{"_index":576,"title":{},"body":{"injectables/ChatService.html":{}}}],["socket.emit(\"writing",{"_index":569,"title":{},"body":{"injectables/ChatService.html":{}}}],["socket.handshake.auth.token",{"_index":531,"title":{},"body":{"injectables/ChatService.html":{}}}],["socket.id",{"_index":542,"title":{},"body":{"injectables/ChatService.html":{}}}],["socket.io",{"_index":477,"title":{},"body":{"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"dependencies.html":{}}}],["socket.join(roomname",{"_index":545,"title":{},"body":{"injectables/ChatService.html":{}}}],["socket1",{"_index":598,"title":{},"body":{"injectables/ChatService.html":{}}}],["socket1?.emit(\"match",{"_index":604,"title":{},"body":{"injectables/ChatService.html":{}}}],["socket1?.id",{"_index":613,"title":{},"body":{"injectables/ChatService.html":{}}}],["socket1?.join(roomname",{"_index":611,"title":{},"body":{"injectables/ChatService.html":{}}}],["socket2",{"_index":601,"title":{},"body":{"injectables/ChatService.html":{}}}],["socket2?.emit(\"match",{"_index":605,"title":{},"body":{"injectables/ChatService.html":{}}}],["socket2?.id",{"_index":614,"title":{},"body":{"injectables/ChatService.html":{}}}],["socket2?.join(roomname",{"_index":612,"title":{},"body":{"injectables/ChatService.html":{}}}],["socketid",{"_index":541,"title":{},"body":{"injectables/ChatService.html":{},"classes/Rooms.html":{}}}],["socketuser",{"_index":1282,"title":{},"body":{"classes/Rooms.html":{},"miscellaneous/typealiases.html":{}}}],["software",{"_index":1875,"title":{},"body":{"license.html":{}}}],["sorry",{"_index":1005,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["sounds",{"_index":1485,"title":{},"body":{"classes/UpdatePreferenceDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AtGuard.html":{},"injectables/AuthConfig.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"modules/ChatModule.html":{},"injectables/ChatService.html":{},"classes/CreateExercisesLibraryDto.html":{},"classes/CreateFeedbackUserDto.html":{},"classes/CreateOpenffDto.html":{},"classes/CreateTicketDto.html":{},"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"controllers/ExercisesLibraryController.html":{},"modules/ExercisesLibraryModule.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/FeedbackUserController.html":{},"modules/FeedbackUserModule.html":{},"injectables/FeedbackUserService.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GetUserAdminDto.html":{},"injectables/JwtStrategy.html":{},"classes/MatchEvent.html":{},"controllers/MealRecoController.html":{},"classes/MealRecoDto.html":{},"modules/MealRecoModule.html":{},"injectables/MealRecoService.html":{},"classes/ModeratorAnswerDto.html":{},"controllers/NutritionController.html":{},"classes/NutritionDto.html":{},"modules/NutritionModule.html":{},"injectables/NutritionService.html":{},"controllers/OpenffController.html":{},"modules/OpenffModule.html":{},"injectables/OpenffService.html":{},"controllers/PreferencesController.html":{},"modules/PreferencesModule.html":{},"injectables/PreferencesService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ReportsController.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"classes/Rooms.html":{},"controllers/StepsController.html":{},"modules/StepsModule.html":{},"injectables/StepsService.html":{},"controllers/TicketsController.html":{},"modules/TicketsModule.html":{},"injectables/TicketsService.html":{},"classes/UpdateExercisesLibraryDto.html":{},"classes/UpdateFeedbackUserDto.html":{},"classes/UpdateNutritionDto.html":{},"classes/UpdateOpenffDto.html":{},"classes/UpdatePreferenceDto.html":{},"controllers/UserAdminController.html":{},"modules/UserAdminModule.html":{},"injectables/UserAdminService.html":{},"classes/UserAnswerDto.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"classes/UserInfosDto.html":{},"modules/UserInfosModule.html":{},"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{},"classes/UserWithoutSidekickException.html":{},"interfaces/ValidatedUser.html":{},"controllers/WorkoutsController.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{},"modules/WorkoutsModule.html":{},"injectables/WorkoutsService.html":{}}}],["src/.../chat.helper.ts",{"_index":1941,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../chat.service.ts",{"_index":1947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../current_user.decorator.ts",{"_index":1946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1843,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.decorator.ts",{"_index":1948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tokens.types.ts",{"_index":1943,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":59,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":142,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":143,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.config.ts",{"_index":163,"title":{},"body":{"injectables/AuthConfig.html":{},"coverage.html":{}}}],["src/auth/auth.config.ts:5",{"_index":183,"title":{},"body":{"injectables/AuthConfig.html":{}}}],["src/auth/auth.config.ts:6",{"_index":177,"title":{},"body":{"injectables/AuthConfig.html":{}}}],["src/auth/auth.config.ts:7",{"_index":181,"title":{},"body":{"injectables/AuthConfig.html":{}}}],["src/auth/auth.config.ts:8",{"_index":175,"title":{},"body":{"injectables/AuthConfig.html":{}}}],["src/auth/auth.config.ts:9",{"_index":179,"title":{},"body":{"injectables/AuthConfig.html":{}}}],["src/auth/auth.controller.ts",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:15",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:21",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:31",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:37",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:43",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:53",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:59",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:64",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:71",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:77",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":297,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:128",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:142",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:179",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:200",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:219",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:22",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:239",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:263",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:30",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:75",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/auth.dto.ts",{"_index":286,"title":{},"body":{"classes/AuthDto.html":{},"coverage.html":{}}}],["src/auth/dto/auth.dto.ts:10",{"_index":290,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/dto/auth.dto.ts:6",{"_index":289,"title":{},"body":{"classes/AuthDto.html":{}}}],["src/auth/strategies/aws.strategy.ts",{"_index":890,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{},"coverage.html":{}}}],["src/auth/strategies/aws.strategy.ts:15",{"_index":893,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/aws.strategy.ts:35",{"_index":895,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/types/tokens.types.ts",{"_index":1944,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/chat/chat.controller.ts",{"_index":417,"title":{},"body":{"controllers/ChatController.html":{},"coverage.html":{}}}],["src/chat/chat.controller.ts:10",{"_index":423,"title":{},"body":{"controllers/ChatController.html":{}}}],["src/chat/chat.controller.ts:15",{"_index":427,"title":{},"body":{"controllers/ChatController.html":{}}}],["src/chat/chat.gateway.ts",{"_index":441,"title":{},"body":{"classes/ChatGateway.html":{},"coverage.html":{}}}],["src/chat/chat.gateway.ts:13",{"_index":450,"title":{},"body":{"classes/ChatGateway.html":{}}}],["src/chat/chat.gateway.ts:17",{"_index":454,"title":{},"body":{"classes/ChatGateway.html":{}}}],["src/chat/chat.gateway.ts:21",{"_index":456,"title":{},"body":{"classes/ChatGateway.html":{}}}],["src/chat/chat.gateway.ts:27",{"_index":460,"title":{},"body":{"classes/ChatGateway.html":{}}}],["src/chat/chat.gateway.ts:33",{"_index":465,"title":{},"body":{"classes/ChatGateway.html":{}}}],["src/chat/chat.gateway.ts:38",{"_index":472,"title":{},"body":{"classes/ChatGateway.html":{}}}],["src/chat/chat.gateway.ts:43",{"_index":469,"title":{},"body":{"classes/ChatGateway.html":{}}}],["src/chat/chat.helper.ts",{"_index":1270,"title":{},"body":{"classes/Rooms.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/chat/chat.helper.ts:13",{"_index":1278,"title":{},"body":{"classes/Rooms.html":{}}}],["src/chat/chat.helper.ts:17",{"_index":1280,"title":{},"body":{"classes/Rooms.html":{}}}],["src/chat/chat.helper.ts:21",{"_index":1292,"title":{},"body":{"classes/Rooms.html":{}}}],["src/chat/chat.helper.ts:25",{"_index":1288,"title":{},"body":{"classes/Rooms.html":{}}}],["src/chat/chat.helper.ts:29",{"_index":1283,"title":{},"body":{"classes/Rooms.html":{}}}],["src/chat/chat.helper.ts:36",{"_index":1294,"title":{},"body":{"classes/Rooms.html":{}}}],["src/chat/chat.helper.ts:43",{"_index":1290,"title":{},"body":{"classes/Rooms.html":{}}}],["src/chat/chat.helper.ts:50",{"_index":1286,"title":{},"body":{"classes/Rooms.html":{}}}],["src/chat/chat.module.ts",{"_index":502,"title":{},"body":{"modules/ChatModule.html":{}}}],["src/chat/chat.service.ts",{"_index":506,"title":{},"body":{"injectables/ChatService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/chat/chat.service.ts:118",{"_index":515,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/chat/chat.service.ts:12",{"_index":512,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/chat/chat.service.ts:142",{"_index":517,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/chat/chat.service.ts:172",{"_index":520,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/chat/chat.service.ts:20",{"_index":518,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/chat/chat.service.ts:57",{"_index":519,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/chat/chat.service.ts:73",{"_index":522,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/chat/chat.service.ts:93",{"_index":526,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/chat/chat.service.ts:99",{"_index":524,"title":{},"body":{"injectables/ChatService.html":{}}}],["src/common/decorators",{"_index":725,"title":{},"body":{"controllers/ExercisesLibraryController.html":{},"controllers/MealRecoController.html":{},"controllers/UserAdminController.html":{}}}],["src/common/decorators/current_user.decorator.ts",{"_index":1797,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/public.decorator.ts",{"_index":1798,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/events/match.event.ts",{"_index":929,"title":{},"body":{"classes/MatchEvent.html":{},"coverage.html":{}}}],["src/common/events/match.event.ts:2",{"_index":932,"title":{},"body":{"classes/MatchEvent.html":{}}}],["src/common/events/match.event.ts:3",{"_index":933,"title":{},"body":{"classes/MatchEvent.html":{}}}],["src/common/guards",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserAdminController.html":{}}}],["src/common/guards/admin.guard.ts",{"_index":6,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/common/guards/admin.guard.ts:5",{"_index":13,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/common/guards/at.guard.ts",{"_index":146,"title":{},"body":{"injectables/AtGuard.html":{},"coverage.html":{}}}],["src/common/guards/at.guard.ts:11",{"_index":151,"title":{},"body":{"injectables/AtGuard.html":{}}}],["src/common/guards/at.guard.ts:6",{"_index":150,"title":{},"body":{"injectables/AtGuard.html":{}}}],["src/exercises_library/dto/create",{"_index":616,"title":{},"body":{"classes/CreateExercisesLibraryDto.html":{},"coverage.html":{}}}],["src/exercises_library/dto/update",{"_index":1457,"title":{},"body":{"classes/UpdateExercisesLibraryDto.html":{},"coverage.html":{}}}],["src/exercises_library/exercises_library.controller.ts",{"_index":694,"title":{},"body":{"controllers/ExercisesLibraryController.html":{},"coverage.html":{}}}],["src/exercises_library/exercises_library.controller.ts:14",{"_index":703,"title":{},"body":{"controllers/ExercisesLibraryController.html":{}}}],["src/exercises_library/exercises_library.controller.ts:19",{"_index":704,"title":{},"body":{"controllers/ExercisesLibraryController.html":{}}}],["src/exercises_library/exercises_library.controller.ts:24",{"_index":707,"title":{},"body":{"controllers/ExercisesLibraryController.html":{}}}],["src/exercises_library/exercises_library.controller.ts:29",{"_index":711,"title":{},"body":{"controllers/ExercisesLibraryController.html":{}}}],["src/exercises_library/exercises_library.controller.ts:34",{"_index":718,"title":{},"body":{"controllers/ExercisesLibraryController.html":{}}}],["src/exercises_library/exercises_library.controller.ts:39",{"_index":714,"title":{},"body":{"controllers/ExercisesLibraryController.html":{}}}],["src/exercises_library/exercises_library.module.ts",{"_index":740,"title":{},"body":{"modules/ExercisesLibraryModule.html":{}}}],["src/exercises_library/exercises_library.service.ts",{"_index":742,"title":{},"body":{"injectables/ExercisesLibraryService.html":{},"coverage.html":{}}}],["src/exercises_library/exercises_library.service.ts:11",{"_index":744,"title":{},"body":{"injectables/ExercisesLibraryService.html":{}}}],["src/exercises_library/exercises_library.service.ts:28",{"_index":745,"title":{},"body":{"injectables/ExercisesLibraryService.html":{}}}],["src/exercises_library/exercises_library.service.ts:34",{"_index":746,"title":{},"body":{"injectables/ExercisesLibraryService.html":{}}}],["src/exercises_library/exercises_library.service.ts:44",{"_index":747,"title":{},"body":{"injectables/ExercisesLibraryService.html":{}}}],["src/exercises_library/exercises_library.service.ts:54",{"_index":749,"title":{},"body":{"injectables/ExercisesLibraryService.html":{}}}],["src/exercises_library/exercises_library.service.ts:74",{"_index":748,"title":{},"body":{"injectables/ExercisesLibraryService.html":{}}}],["src/exercises_library/exercises_library.service.ts:8",{"_index":743,"title":{},"body":{"injectables/ExercisesLibraryService.html":{}}}],["src/feedback_user/dto/create",{"_index":636,"title":{},"body":{"classes/CreateFeedbackUserDto.html":{},"coverage.html":{}}}],["src/feedback_user/dto/update",{"_index":1463,"title":{},"body":{"classes/UpdateFeedbackUserDto.html":{},"coverage.html":{}}}],["src/feedback_user/feedback_user.controller.ts",{"_index":759,"title":{},"body":{"controllers/FeedbackUserController.html":{},"coverage.html":{}}}],["src/feedback_user/feedback_user.controller.ts:12",{"_index":766,"title":{},"body":{"controllers/FeedbackUserController.html":{}}}],["src/feedback_user/feedback_user.controller.ts:17",{"_index":775,"title":{},"body":{"controllers/FeedbackUserController.html":{}}}],["src/feedback_user/feedback_user.controller.ts:22",{"_index":778,"title":{},"body":{"controllers/FeedbackUserController.html":{}}}],["src/feedback_user/feedback_user.controller.ts:28",{"_index":768,"title":{},"body":{"controllers/FeedbackUserController.html":{}}}],["src/feedback_user/feedback_user.controller.ts:33",{"_index":771,"title":{},"body":{"controllers/FeedbackUserController.html":{}}}],["src/feedback_user/feedback_user.module.ts",{"_index":799,"title":{},"body":{"modules/FeedbackUserModule.html":{}}}],["src/feedback_user/feedback_user.service.ts",{"_index":801,"title":{},"body":{"injectables/FeedbackUserService.html":{},"coverage.html":{}}}],["src/feedback_user/feedback_user.service.ts:13",{"_index":811,"title":{},"body":{"injectables/FeedbackUserService.html":{}}}],["src/feedback_user/feedback_user.service.ts:17",{"_index":812,"title":{},"body":{"injectables/FeedbackUserService.html":{}}}],["src/feedback_user/feedback_user.service.ts:25",{"_index":808,"title":{},"body":{"injectables/FeedbackUserService.html":{}}}],["src/feedback_user/feedback_user.service.ts:45",{"_index":814,"title":{},"body":{"injectables/FeedbackUserService.html":{}}}],["src/feedback_user/feedback_user.service.ts:55",{"_index":810,"title":{},"body":{"injectables/FeedbackUserService.html":{}}}],["src/feedback_user/feedback_user.service.ts:8",{"_index":804,"title":{},"body":{"injectables/FeedbackUserService.html":{}}}],["src/file/file.controller.ts",{"_index":831,"title":{},"body":{"controllers/FileController.html":{},"coverage.html":{}}}],["src/file/file.controller.ts:15",{"_index":836,"title":{},"body":{"controllers/FileController.html":{}}}],["src/file/file.module.ts",{"_index":855,"title":{},"body":{"modules/FileModule.html":{}}}],["src/file/file.service.ts",{"_index":857,"title":{},"body":{"injectables/FileService.html":{},"coverage.html":{}}}],["src/file/file.service.ts:20",{"_index":864,"title":{},"body":{"injectables/FileService.html":{}}}],["src/file/file.service.ts:8",{"_index":862,"title":{},"body":{"injectables/FileService.html":{}}}],["src/main.ts",{"_index":1802,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/meal_reco/dto/meal_reco.dto.ts",{"_index":951,"title":{},"body":{"classes/MealRecoDto.html":{},"coverage.html":{}}}],["src/meal_reco/dto/meal_reco.dto.ts:11",{"_index":954,"title":{},"body":{"classes/MealRecoDto.html":{}}}],["src/meal_reco/dto/meal_reco.dto.ts:6",{"_index":955,"title":{},"body":{"classes/MealRecoDto.html":{}}}],["src/meal_reco/meal_reco.controller.ts",{"_index":935,"title":{},"body":{"controllers/MealRecoController.html":{},"coverage.html":{}}}],["src/meal_reco/meal_reco.controller.ts:13",{"_index":941,"title":{},"body":{"controllers/MealRecoController.html":{}}}],["src/meal_reco/meal_reco.module.ts",{"_index":959,"title":{},"body":{"modules/MealRecoModule.html":{}}}],["src/meal_reco/meal_reco.service.ts",{"_index":961,"title":{},"body":{"injectables/MealRecoService.html":{},"coverage.html":{}}}],["src/meal_reco/meal_reco.service.ts:18",{"_index":964,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["src/meal_reco/meal_reco.service.ts:8",{"_index":962,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["src/nutrition/dto/nutrition.dto.ts",{"_index":1057,"title":{},"body":{"classes/NutritionDto.html":{},"coverage.html":{}}}],["src/nutrition/dto/nutrition.dto.ts:10",{"_index":1071,"title":{},"body":{"classes/NutritionDto.html":{}}}],["src/nutrition/dto/nutrition.dto.ts:14",{"_index":1070,"title":{},"body":{"classes/NutritionDto.html":{}}}],["src/nutrition/dto/nutrition.dto.ts:18",{"_index":1072,"title":{},"body":{"classes/NutritionDto.html":{}}}],["src/nutrition/dto/nutrition.dto.ts:22",{"_index":1067,"title":{},"body":{"classes/NutritionDto.html":{}}}],["src/nutrition/dto/nutrition.dto.ts:26",{"_index":1073,"title":{},"body":{"classes/NutritionDto.html":{}}}],["src/nutrition/dto/nutrition.dto.ts:30",{"_index":1066,"title":{},"body":{"classes/NutritionDto.html":{}}}],["src/nutrition/dto/nutrition.dto.ts:34",{"_index":1068,"title":{},"body":{"classes/NutritionDto.html":{}}}],["src/nutrition/dto/nutrition.dto.ts:38",{"_index":1075,"title":{},"body":{"classes/NutritionDto.html":{}}}],["src/nutrition/dto/nutrition.dto.ts:42",{"_index":1065,"title":{},"body":{"classes/NutritionDto.html":{}}}],["src/nutrition/dto/nutrition.dto.ts:5",{"_index":1074,"title":{},"body":{"classes/NutritionDto.html":{}}}],["src/nutrition/dto/nutrition.dto.ts:6",{"_index":1069,"title":{},"body":{"classes/NutritionDto.html":{}}}],["src/nutrition/dto/update.dto.ts",{"_index":1465,"title":{},"body":{"classes/UpdateNutritionDto.html":{},"coverage.html":{}}}],["src/nutrition/dto/update.dto.ts:10",{"_index":1472,"title":{},"body":{"classes/UpdateNutritionDto.html":{}}}],["src/nutrition/dto/update.dto.ts:14",{"_index":1471,"title":{},"body":{"classes/UpdateNutritionDto.html":{}}}],["src/nutrition/dto/update.dto.ts:18",{"_index":1473,"title":{},"body":{"classes/UpdateNutritionDto.html":{}}}],["src/nutrition/dto/update.dto.ts:22",{"_index":1468,"title":{},"body":{"classes/UpdateNutritionDto.html":{}}}],["src/nutrition/dto/update.dto.ts:26",{"_index":1474,"title":{},"body":{"classes/UpdateNutritionDto.html":{}}}],["src/nutrition/dto/update.dto.ts:30",{"_index":1467,"title":{},"body":{"classes/UpdateNutritionDto.html":{}}}],["src/nutrition/dto/update.dto.ts:34",{"_index":1469,"title":{},"body":{"classes/UpdateNutritionDto.html":{}}}],["src/nutrition/dto/update.dto.ts:38",{"_index":1476,"title":{},"body":{"classes/UpdateNutritionDto.html":{}}}],["src/nutrition/dto/update.dto.ts:42",{"_index":1466,"title":{},"body":{"classes/UpdateNutritionDto.html":{}}}],["src/nutrition/dto/update.dto.ts:5",{"_index":1475,"title":{},"body":{"classes/UpdateNutritionDto.html":{}}}],["src/nutrition/dto/update.dto.ts:6",{"_index":1470,"title":{},"body":{"classes/UpdateNutritionDto.html":{}}}],["src/nutrition/exceptions/not",{"_index":1670,"title":{},"body":{"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["src/nutrition/nutrition.controller.ts",{"_index":1013,"title":{},"body":{"controllers/NutritionController.html":{},"coverage.html":{}}}],["src/nutrition/nutrition.controller.ts:11",{"_index":1023,"title":{},"body":{"controllers/NutritionController.html":{}}}],["src/nutrition/nutrition.controller.ts:16",{"_index":1026,"title":{},"body":{"controllers/NutritionController.html":{}}}],["src/nutrition/nutrition.controller.ts:21",{"_index":1032,"title":{},"body":{"controllers/NutritionController.html":{}}}],["src/nutrition/nutrition.controller.ts:26",{"_index":1028,"title":{},"body":{"controllers/NutritionController.html":{}}}],["src/nutrition/nutrition.controller.ts:31",{"_index":1035,"title":{},"body":{"controllers/NutritionController.html":{}}}],["src/nutrition/nutrition.controller.ts:36",{"_index":1037,"title":{},"body":{"controllers/NutritionController.html":{}}}],["src/nutrition/nutrition.module.ts",{"_index":1078,"title":{},"body":{"modules/NutritionModule.html":{}}}],["src/nutrition/nutrition.service.ts",{"_index":1081,"title":{},"body":{"injectables/NutritionService.html":{},"coverage.html":{}}}],["src/nutrition/nutrition.service.ts:11",{"_index":1089,"title":{},"body":{"injectables/NutritionService.html":{}}}],["src/nutrition/nutrition.service.ts:20",{"_index":1092,"title":{},"body":{"injectables/NutritionService.html":{}}}],["src/nutrition/nutrition.service.ts:24",{"_index":1085,"title":{},"body":{"injectables/NutritionService.html":{}}}],["src/nutrition/nutrition.service.ts:36",{"_index":1094,"title":{},"body":{"injectables/NutritionService.html":{}}}],["src/nutrition/nutrition.service.ts:43",{"_index":1087,"title":{},"body":{"injectables/NutritionService.html":{}}}],["src/nutrition/nutrition.service.ts:47",{"_index":1091,"title":{},"body":{"injectables/NutritionService.html":{}}}],["src/nutrition/nutrition.service.ts:8",{"_index":1083,"title":{},"body":{"injectables/NutritionService.html":{}}}],["src/openff/dto/create",{"_index":645,"title":{},"body":{"classes/CreateOpenffDto.html":{},"coverage.html":{}}}],["src/openff/dto/update",{"_index":1478,"title":{},"body":{"classes/UpdateOpenffDto.html":{},"coverage.html":{}}}],["src/openff/openff.controller.ts",{"_index":1121,"title":{},"body":{"controllers/OpenffController.html":{},"coverage.html":{}}}],["src/openff/openff.controller.ts:11",{"_index":1125,"title":{},"body":{"controllers/OpenffController.html":{}}}],["src/openff/openff.module.ts",{"_index":1134,"title":{},"body":{"modules/OpenffModule.html":{}}}],["src/openff/openff.service.ts",{"_index":1136,"title":{},"body":{"injectables/OpenffService.html":{},"coverage.html":{}}}],["src/openff/openff.service.ts:5",{"_index":1138,"title":{},"body":{"injectables/OpenffService.html":{}}}],["src/openff/openff.service.ts:9",{"_index":1139,"title":{},"body":{"injectables/OpenffService.html":{}}}],["src/preferences/dto/update",{"_index":1481,"title":{},"body":{"classes/UpdatePreferenceDto.html":{},"coverage.html":{}}}],["src/preferences/preferences.controller.ts",{"_index":1183,"title":{},"body":{"controllers/PreferencesController.html":{},"coverage.html":{}}}],["src/preferences/preferences.controller.ts:11",{"_index":1189,"title":{},"body":{"controllers/PreferencesController.html":{}}}],["src/preferences/preferences.controller.ts:16",{"_index":1186,"title":{},"body":{"controllers/PreferencesController.html":{}}}],["src/preferences/preferences.module.ts",{"_index":1200,"title":{},"body":{"modules/PreferencesModule.html":{}}}],["src/preferences/preferences.service.ts",{"_index":1202,"title":{},"body":{"injectables/PreferencesService.html":{},"coverage.html":{}}}],["src/preferences/preferences.service.ts:20",{"_index":1204,"title":{},"body":{"injectables/PreferencesService.html":{}}}],["src/preferences/preferences.service.ts:6",{"_index":1203,"title":{},"body":{"injectables/PreferencesService.html":{}}}],["src/preferences/preferences.service.ts:9",{"_index":1206,"title":{},"body":{"injectables/PreferencesService.html":{}}}],["src/prisma/prisma.module.ts",{"_index":1213,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":750,"title":{},"body":{"injectables/ExercisesLibraryService.html":{},"injectables/UserAdminService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":1216,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:17",{"_index":1222,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:21",{"_index":1221,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":1220,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/reports/reports.controller.ts",{"_index":1229,"title":{},"body":{"controllers/ReportsController.html":{},"coverage.html":{}}}],["src/reports/reports.controller.ts:10",{"_index":1238,"title":{},"body":{"controllers/ReportsController.html":{}}}],["src/reports/reports.controller.ts:18",{"_index":1234,"title":{},"body":{"controllers/ReportsController.html":{}}}],["src/reports/reports.module.ts",{"_index":1249,"title":{},"body":{"modules/ReportsModule.html":{}}}],["src/reports/reports.service.ts",{"_index":1251,"title":{},"body":{"injectables/ReportsService.html":{},"coverage.html":{}}}],["src/reports/reports.service.ts:5",{"_index":1252,"title":{},"body":{"injectables/ReportsService.html":{}}}],["src/reports/reports.service.ts:55",{"_index":1254,"title":{},"body":{"injectables/ReportsService.html":{}}}],["src/reports/reports.service.ts:8",{"_index":1257,"title":{},"body":{"injectables/ReportsService.html":{}}}],["src/steps/steps.controller.ts",{"_index":1307,"title":{},"body":{"controllers/StepsController.html":{},"coverage.html":{}}}],["src/steps/steps.controller.ts:9",{"_index":1311,"title":{},"body":{"controllers/StepsController.html":{}}}],["src/steps/steps.module.ts",{"_index":1319,"title":{},"body":{"modules/StepsModule.html":{}}}],["src/steps/steps.service.ts",{"_index":1321,"title":{},"body":{"injectables/StepsService.html":{},"coverage.html":{}}}],["src/steps/steps.service.ts:6",{"_index":1323,"title":{},"body":{"injectables/StepsService.html":{}}}],["src/steps/steps.service.ts:9",{"_index":1325,"title":{},"body":{"injectables/StepsService.html":{}}}],["src/tickets/dto/create",{"_index":648,"title":{},"body":{"classes/CreateTicketDto.html":{},"coverage.html":{}}}],["src/tickets/dto/moderator",{"_index":1009,"title":{},"body":{"classes/ModeratorAnswerDto.html":{},"coverage.html":{}}}],["src/tickets/dto/user",{"_index":1526,"title":{},"body":{"classes/UserAnswerDto.html":{},"coverage.html":{}}}],["src/tickets/tickets.controller.ts",{"_index":1332,"title":{},"body":{"controllers/TicketsController.html":{},"coverage.html":{}}}],["src/tickets/tickets.controller.ts:13",{"_index":1347,"title":{},"body":{"controllers/TicketsController.html":{}}}],["src/tickets/tickets.controller.ts:19",{"_index":1350,"title":{},"body":{"controllers/TicketsController.html":{}}}],["src/tickets/tickets.controller.ts:25",{"_index":1352,"title":{},"body":{"controllers/TicketsController.html":{}}}],["src/tickets/tickets.controller.ts:30",{"_index":1362,"title":{},"body":{"controllers/TicketsController.html":{}}}],["src/tickets/tickets.controller.ts:36",{"_index":1342,"title":{},"body":{"controllers/TicketsController.html":{}}}],["src/tickets/tickets.controller.ts:42",{"_index":1345,"title":{},"body":{"controllers/TicketsController.html":{}}}],["src/tickets/tickets.controller.ts:47",{"_index":1355,"title":{},"body":{"controllers/TicketsController.html":{}}}],["src/tickets/tickets.controller.ts:53",{"_index":1357,"title":{},"body":{"controllers/TicketsController.html":{}}}],["src/tickets/tickets.controller.ts:59",{"_index":1359,"title":{},"body":{"controllers/TicketsController.html":{}}}],["src/tickets/tickets.module.ts",{"_index":1392,"title":{},"body":{"modules/TicketsModule.html":{}}}],["src/tickets/tickets.service.ts",{"_index":1394,"title":{},"body":{"injectables/TicketsService.html":{},"coverage.html":{}}}],["src/tickets/tickets.service.ts:11",{"_index":1397,"title":{},"body":{"injectables/TicketsService.html":{}}}],["src/tickets/tickets.service.ts:126",{"_index":1399,"title":{},"body":{"injectables/TicketsService.html":{}}}],["src/tickets/tickets.service.ts:166",{"_index":1400,"title":{},"body":{"injectables/TicketsService.html":{}}}],["src/tickets/tickets.service.ts:184",{"_index":1413,"title":{},"body":{"injectables/TicketsService.html":{}}}],["src/tickets/tickets.service.ts:197",{"_index":1414,"title":{},"body":{"injectables/TicketsService.html":{}}}],["src/tickets/tickets.service.ts:210",{"_index":1407,"title":{},"body":{"injectables/TicketsService.html":{}}}],["src/tickets/tickets.service.ts:23",{"_index":1402,"title":{},"body":{"injectables/TicketsService.html":{}}}],["src/tickets/tickets.service.ts:57",{"_index":1403,"title":{},"body":{"injectables/TicketsService.html":{}}}],["src/tickets/tickets.service.ts:75",{"_index":1404,"title":{},"body":{"injectables/TicketsService.html":{}}}],["src/tickets/tickets.service.ts:94",{"_index":1417,"title":{},"body":{"injectables/TicketsService.html":{}}}],["src/user_admin/dto/user_admin.dto.ts",{"_index":654,"title":{},"body":{"classes/EditInfosDto.html":{},"classes/GetUserAdminDto.html":{},"coverage.html":{}}}],["src/user_admin/dto/user_admin.dto.ts:12",{"_index":889,"title":{},"body":{"classes/GetUserAdminDto.html":{}}}],["src/user_admin/dto/user_admin.dto.ts:18",{"_index":668,"title":{},"body":{"classes/EditInfosDto.html":{}}}],["src/user_admin/dto/user_admin.dto.ts:22",{"_index":673,"title":{},"body":{"classes/EditInfosDto.html":{}}}],["src/user_admin/dto/user_admin.dto.ts:26",{"_index":667,"title":{},"body":{"classes/EditInfosDto.html":{}}}],["src/user_admin/dto/user_admin.dto.ts:30",{"_index":676,"title":{},"body":{"classes/EditInfosDto.html":{}}}],["src/user_admin/dto/user_admin.dto.ts:34",{"_index":675,"title":{},"body":{"classes/EditInfosDto.html":{}}}],["src/user_admin/dto/user_admin.dto.ts:38",{"_index":677,"title":{},"body":{"classes/EditInfosDto.html":{}}}],["src/user_admin/dto/user_admin.dto.ts:42",{"_index":672,"title":{},"body":{"classes/EditInfosDto.html":{}}}],["src/user_admin/dto/user_admin.dto.ts:45",{"_index":669,"title":{},"body":{"classes/EditInfosDto.html":{}}}],["src/user_admin/dto/user_admin.dto.ts:48",{"_index":674,"title":{},"body":{"classes/EditInfosDto.html":{}}}],["src/user_admin/dto/user_admin.dto.ts:51",{"_index":665,"title":{},"body":{"classes/EditInfosDto.html":{}}}],["src/user_admin/dto/user_admin.dto.ts:54",{"_index":670,"title":{},"body":{"classes/EditInfosDto.html":{}}}],["src/user_admin/dto/user_admin.dto.ts:8",{"_index":887,"title":{},"body":{"classes/GetUserAdminDto.html":{}}}],["src/user_admin/user_admin.controller.ts",{"_index":1490,"title":{},"body":{"controllers/UserAdminController.html":{},"coverage.html":{}}}],["src/user_admin/user_admin.controller.ts:15",{"_index":1497,"title":{},"body":{"controllers/UserAdminController.html":{}}}],["src/user_admin/user_admin.controller.ts:22",{"_index":1495,"title":{},"body":{"controllers/UserAdminController.html":{}}}],["src/user_admin/user_admin.module.ts",{"_index":1512,"title":{},"body":{"modules/UserAdminModule.html":{}}}],["src/user_admin/user_admin.service.ts",{"_index":1514,"title":{},"body":{"injectables/UserAdminService.html":{},"coverage.html":{}}}],["src/user_admin/user_admin.service.ts:25",{"_index":1521,"title":{},"body":{"injectables/UserAdminService.html":{}}}],["src/user_admin/user_admin.service.ts:6",{"_index":1515,"title":{},"body":{"injectables/UserAdminService.html":{}}}],["src/user_admin/user_admin.service.ts:9",{"_index":1518,"title":{},"body":{"injectables/UserAdminService.html":{}}}],["src/user_infos/dto/edit.dto",{"_index":1501,"title":{},"body":{"controllers/UserAdminController.html":{}}}],["src/user_infos/dto/edit.dto.ts",{"_index":681,"title":{},"body":{"classes/EditInfosDto-1.html":{},"coverage.html":{}}}],["src/user_infos/dto/edit.dto.ts:11",{"_index":688,"title":{},"body":{"classes/EditInfosDto-1.html":{}}}],["src/user_infos/dto/edit.dto.ts:15",{"_index":683,"title":{},"body":{"classes/EditInfosDto-1.html":{}}}],["src/user_infos/dto/edit.dto.ts:19",{"_index":691,"title":{},"body":{"classes/EditInfosDto-1.html":{}}}],["src/user_infos/dto/edit.dto.ts:23",{"_index":690,"title":{},"body":{"classes/EditInfosDto-1.html":{}}}],["src/user_infos/dto/edit.dto.ts:27",{"_index":692,"title":{},"body":{"classes/EditInfosDto-1.html":{}}}],["src/user_infos/dto/edit.dto.ts:31",{"_index":687,"title":{},"body":{"classes/EditInfosDto-1.html":{}}}],["src/user_infos/dto/edit.dto.ts:34",{"_index":685,"title":{},"body":{"classes/EditInfosDto-1.html":{}}}],["src/user_infos/dto/edit.dto.ts:37",{"_index":689,"title":{},"body":{"classes/EditInfosDto-1.html":{}}}],["src/user_infos/dto/edit.dto.ts:40",{"_index":682,"title":{},"body":{"classes/EditInfosDto-1.html":{}}}],["src/user_infos/dto/edit.dto.ts:43",{"_index":686,"title":{},"body":{"classes/EditInfosDto-1.html":{}}}],["src/user_infos/dto/edit.dto.ts:7",{"_index":684,"title":{},"body":{"classes/EditInfosDto-1.html":{}}}],["src/user_infos/dto/user.dto.ts",{"_index":1651,"title":{},"body":{"classes/UserInfosDto.html":{},"coverage.html":{}}}],["src/user_infos/dto/user.dto.ts:11",{"_index":1659,"title":{},"body":{"classes/UserInfosDto.html":{}}}],["src/user_infos/dto/user.dto.ts:15",{"_index":1654,"title":{},"body":{"classes/UserInfosDto.html":{}}}],["src/user_infos/dto/user.dto.ts:19",{"_index":1653,"title":{},"body":{"classes/UserInfosDto.html":{}}}],["src/user_infos/dto/user.dto.ts:23",{"_index":1662,"title":{},"body":{"classes/UserInfosDto.html":{}}}],["src/user_infos/dto/user.dto.ts:27",{"_index":1661,"title":{},"body":{"classes/UserInfosDto.html":{}}}],["src/user_infos/dto/user.dto.ts:31",{"_index":1663,"title":{},"body":{"classes/UserInfosDto.html":{}}}],["src/user_infos/dto/user.dto.ts:35",{"_index":1658,"title":{},"body":{"classes/UserInfosDto.html":{}}}],["src/user_infos/dto/user.dto.ts:38",{"_index":1656,"title":{},"body":{"classes/UserInfosDto.html":{}}}],["src/user_infos/dto/user.dto.ts:41",{"_index":1657,"title":{},"body":{"classes/UserInfosDto.html":{}}}],["src/user_infos/dto/user.dto.ts:44",{"_index":1660,"title":{},"body":{"classes/UserInfosDto.html":{}}}],["src/user_infos/dto/user.dto.ts:47",{"_index":1652,"title":{},"body":{"classes/UserInfosDto.html":{}}}],["src/user_infos/dto/user.dto.ts:7",{"_index":1655,"title":{},"body":{"classes/UserInfosDto.html":{}}}],["src/user_infos/exceptions/not",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserWithoutSidekickException.html":{},"injectables/WorkoutsService.html":{},"coverage.html":{}}}],["src/user_infos/user_infos.controller.ts",{"_index":1593,"title":{},"body":{"controllers/UserInfosController.html":{},"coverage.html":{}}}],["src/user_infos/user_infos.controller.ts:29",{"_index":1598,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["src/user_infos/user_infos.controller.ts:34",{"_index":1601,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["src/user_infos/user_infos.controller.ts:39",{"_index":1596,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["src/user_infos/user_infos.controller.ts:44",{"_index":1610,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["src/user_infos/user_infos.controller.ts:66",{"_index":1607,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["src/user_infos/user_infos.controller.ts:72",{"_index":1605,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["src/user_infos/user_infos.controller.ts:78",{"_index":1603,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["src/user_infos/user_infos.module.ts",{"_index":1668,"title":{},"body":{"modules/UserInfosModule.html":{}}}],["src/user_infos/user_infos.service.ts",{"_index":1527,"title":{},"body":{"injectables/UserInfoService.html":{},"coverage.html":{}}}],["src/user_infos/user_infos.service.ts:103",{"_index":1550,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["src/user_infos/user_infos.service.ts:121",{"_index":1547,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["src/user_infos/user_infos.service.ts:151",{"_index":1545,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["src/user_infos/user_infos.service.ts:163",{"_index":1549,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["src/user_infos/user_infos.service.ts:17",{"_index":1536,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["src/user_infos/user_infos.service.ts:24",{"_index":1543,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["src/user_infos/user_infos.service.ts:33",{"_index":1540,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["src/user_infos/user_infos.service.ts:51",{"_index":1542,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["src/user_infos/user_infos.service.ts:88",{"_index":1538,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["src/workouts/dto/edit.workouts.dto.ts",{"_index":1731,"title":{},"body":{"classes/WorkoutsDto.html":{},"coverage.html":{}}}],["src/workouts/dto/edit.workouts.dto.ts:4",{"_index":1734,"title":{},"body":{"classes/WorkoutsDto.html":{}}}],["src/workouts/dto/edit.workouts.dto.ts:5",{"_index":1733,"title":{},"body":{"classes/WorkoutsDto.html":{}}}],["src/workouts/dto/edit.workouts.dto.ts:9",{"_index":1732,"title":{},"body":{"classes/WorkoutsDto.html":{}}}],["src/workouts/dto/workouts.dto.ts",{"_index":1735,"title":{},"body":{"classes/WorkoutsDto-1.html":{},"coverage.html":{}}}],["src/workouts/dto/workouts.dto.ts:13",{"_index":1739,"title":{},"body":{"classes/WorkoutsDto-1.html":{}}}],["src/workouts/dto/workouts.dto.ts:17",{"_index":1738,"title":{},"body":{"classes/WorkoutsDto-1.html":{}}}],["src/workouts/dto/workouts.dto.ts:4",{"_index":1742,"title":{},"body":{"classes/WorkoutsDto-1.html":{}}}],["src/workouts/dto/workouts.dto.ts:5",{"_index":1741,"title":{},"body":{"classes/WorkoutsDto-1.html":{}}}],["src/workouts/dto/workouts.dto.ts:9",{"_index":1740,"title":{},"body":{"classes/WorkoutsDto-1.html":{}}}],["src/workouts/exceptions/not",{"_index":1680,"title":{},"body":{"classes/UserNotFoundException-2.html":{},"coverage.html":{}}}],["src/workouts/workouts.controller.ts",{"_index":1684,"title":{},"body":{"controllers/WorkoutsController.html":{},"coverage.html":{}}}],["src/workouts/workouts.controller.ts:10",{"_index":1698,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["src/workouts/workouts.controller.ts:15",{"_index":1701,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["src/workouts/workouts.controller.ts:20",{"_index":1693,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["src/workouts/workouts.controller.ts:25",{"_index":1703,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["src/workouts/workouts.controller.ts:30",{"_index":1695,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["src/workouts/workouts.controller.ts:35",{"_index":1697,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["src/workouts/workouts.controller.ts:41",{"_index":1690,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["src/workouts/workouts.controller.ts:46",{"_index":1707,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["src/workouts/workouts.controller.ts:51",{"_index":1705,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["src/workouts/workouts.module.ts",{"_index":1745,"title":{},"body":{"modules/WorkoutsModule.html":{}}}],["src/workouts/workouts.service.ts",{"_index":1747,"title":{},"body":{"injectables/WorkoutsService.html":{},"coverage.html":{}}}],["src/workouts/workouts.service.ts:10",{"_index":1748,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["src/workouts/workouts.service.ts:114",{"_index":1749,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["src/workouts/workouts.service.ts:13",{"_index":1752,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["src/workouts/workouts.service.ts:140",{"_index":1760,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["src/workouts/workouts.service.ts:148",{"_index":1761,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["src/workouts/workouts.service.ts:29",{"_index":1751,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["src/workouts/workouts.service.ts:36",{"_index":1757,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["src/workouts/workouts.service.ts:57",{"_index":1755,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["src/workouts/workouts.service.ts:65",{"_index":1754,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["src/workouts/workouts.service.ts:85",{"_index":1759,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["start:dev",{"_index":1856,"title":{},"body":{"index.html":{}}}],["started",{"_index":1845,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":1786,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":1425,"title":{},"body":{"injectables/TicketsService.html":{}}}],["step_data",{"_index":1329,"title":{},"body":{"injectables/StepsService.html":{}}}],["steps.controller",{"_index":1320,"title":{},"body":{"modules/StepsModule.html":{}}}],["steps.service",{"_index":1313,"title":{},"body":{"controllers/StepsController.html":{},"modules/StepsModule.html":{}}}],["steps/steps.module",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["stepscontroller",{"_index":1306,"title":{"controllers/StepsController.html":{}},"body":{"controllers/StepsController.html":{},"modules/StepsModule.html":{},"coverage.html":{}}}],["stepsmodule",{"_index":89,"title":{"modules/StepsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StepsModule.html":{},"modules.html":{},"overview.html":{}}}],["stepsservice",{"_index":1312,"title":{"injectables/StepsService.html":{}},"body":{"controllers/StepsController.html":{},"modules/StepsModule.html":{},"injectables/StepsService.html":{},"coverage.html":{},"overview.html":{}}}],["strategies/aws.strategy",{"_index":301,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":897,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["string",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthConfig.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"controllers/ChatController.html":{},"injectables/ChatService.html":{},"classes/CreateExercisesLibraryDto.html":{},"classes/CreateFeedbackUserDto.html":{},"classes/CreateTicketDto.html":{},"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"controllers/ExercisesLibraryController.html":{},"controllers/FeedbackUserController.html":{},"injectables/FeedbackUserService.html":{},"classes/GetUserAdminDto.html":{},"classes/MatchEvent.html":{},"controllers/MealRecoController.html":{},"classes/MealRecoDto.html":{},"injectables/MealRecoService.html":{},"classes/ModeratorAnswerDto.html":{},"controllers/NutritionController.html":{},"classes/NutritionDto.html":{},"injectables/NutritionService.html":{},"controllers/OpenffController.html":{},"injectables/OpenffService.html":{},"controllers/PreferencesController.html":{},"injectables/PreferencesService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"classes/Rooms.html":{},"injectables/StepsService.html":{},"controllers/TicketsController.html":{},"injectables/TicketsService.html":{},"classes/UpdateExercisesLibraryDto.html":{},"classes/UpdateFeedbackUserDto.html":{},"classes/UpdateNutritionDto.html":{},"controllers/UserAdminController.html":{},"injectables/UserAdminService.html":{},"classes/UserAnswerDto.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"classes/UserInfosDto.html":{},"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{},"classes/UserWithoutSidekickException.html":{},"controllers/WorkoutsController.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{},"injectables/WorkoutsService.html":{}}}],["subject",{"_index":1406,"title":{},"body":{"injectables/TicketsService.html":{},"license.html":{}}}],["sublicense",{"_index":1888,"title":{},"body":{"license.html":{}}}],["subscribemessage",{"_index":473,"title":{},"body":{"classes/ChatGateway.html":{}}}],["subscribemessage(\"message",{"_index":492,"title":{},"body":{"classes/ChatGateway.html":{}}}],["subscribemessage(\"seen",{"_index":496,"title":{},"body":{"classes/ChatGateway.html":{}}}],["subscribemessage(\"writing",{"_index":494,"title":{},"body":{"classes/ChatGateway.html":{}}}],["subscribemessage('message",{"_index":464,"title":{},"body":{"classes/ChatGateway.html":{}}}],["subscribemessage('seen",{"_index":468,"title":{},"body":{"classes/ChatGateway.html":{}}}],["subscribemessage('writing",{"_index":471,"title":{},"body":{"classes/ChatGateway.html":{}}}],["substantial",{"_index":1901,"title":{},"body":{"license.html":{}}}],["successfully",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":156,"title":{},"body":{"injectables/AtGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"interfaces/ValidatedUser.html":{}}}],["super('user",{"_index":1675,"title":{},"body":{"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{},"classes/UserWithoutSidekickException.html":{}}}],["super.canactivate(context",{"_index":161,"title":{},"body":{"injectables/AtGuard.html":{}}}],["support",{"_index":1927,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1928,"title":{},"body":{"modules.html":{}}}],["table",{"_index":1805,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":1857,"title":{},"body":{"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1804,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":582,"title":{},"body":{"injectables/ChatService.html":{},"injectables/TicketsService.html":{}}}],["temperature",{"_index":1000,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["template",{"_index":1446,"title":{},"body":{"injectables/TicketsService.html":{}}}],["templatedata",{"_index":1447,"title":{},"body":{"injectables/TicketsService.html":{}}}],["this.$connect",{"_index":1226,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$disconnect",{"_index":1227,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this._fileservice.uploadpublicfile(file",{"_index":1591,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this._prismaservice.exercises_library.findunique",{"_index":1772,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["this._prismaservice.feedbackuser.create",{"_index":824,"title":{},"body":{"injectables/FeedbackUserService.html":{}}}],["this._prismaservice.feedbackuser.delete",{"_index":829,"title":{},"body":{"injectables/FeedbackUserService.html":{}}}],["this._prismaservice.feedbackuser.findmany",{"_index":816,"title":{},"body":{"injectables/FeedbackUserService.html":{}}}],["this._prismaservice.feedbackuser.findunique",{"_index":817,"title":{},"body":{"injectables/FeedbackUserService.html":{}}}],["this._prismaservice.feedbackuser.update",{"_index":828,"title":{},"body":{"injectables/FeedbackUserService.html":{}}}],["this._prismaservice.nutrition.create",{"_index":1099,"title":{},"body":{"injectables/NutritionService.html":{}}}],["this._prismaservice.nutrition.delete",{"_index":1101,"title":{},"body":{"injectables/NutritionService.html":{}}}],["this._prismaservice.nutrition.findmany",{"_index":1096,"title":{},"body":{"injectables/NutritionService.html":{}}}],["this._prismaservice.nutrition.findmany({where",{"_index":1105,"title":{},"body":{"injectables/NutritionService.html":{}}}],["this._prismaservice.nutrition.findunique",{"_index":1097,"title":{},"body":{"injectables/NutritionService.html":{}}}],["this._prismaservice.nutrition.update",{"_index":1100,"title":{},"body":{"injectables/NutritionService.html":{}}}],["this._prismaservice.steps.findmany",{"_index":1330,"title":{},"body":{"injectables/StepsService.html":{}}}],["this._prismaservice.user.findunique",{"_index":821,"title":{},"body":{"injectables/FeedbackUserService.html":{},"injectables/NutritionService.html":{},"injectables/StepsService.html":{},"injectables/UserInfoService.html":{},"injectables/WorkoutsService.html":{}}}],["this._prismaservice.userdata.create",{"_index":1579,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this._prismaservice.userdata.findmany",{"_index":1558,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this._prismaservice.userdata.findunique",{"_index":1327,"title":{},"body":{"injectables/StepsService.html":{},"injectables/UserInfoService.html":{},"injectables/WorkoutsService.html":{}}}],["this._prismaservice.userdata.update",{"_index":1581,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this._prismaservice.workouts.create",{"_index":1779,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["this._prismaservice.workouts.delete",{"_index":1781,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["this._prismaservice.workouts.findmany",{"_index":1771,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["this._prismaservice.workouts.findunique",{"_index":1764,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["this._prismaservice.workouts.update",{"_index":1782,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["this.appservice.gethello",{"_index":65,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authconfig.clientid",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authconfig.userpoolid",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.delete(dto",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.forgotpassword(email",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(dto",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(email",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.refresh(rt",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(dto",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.resetpassword(dto",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.chatservice.getall(email",{"_index":436,"title":{},"body":{"controllers/ChatController.html":{}}}],["this.chatservice.getallv2(email",{"_index":440,"title":{},"body":{"controllers/ChatController.html":{}}}],["this.chatservice.handleconnection(socket",{"_index":482,"title":{},"body":{"classes/ChatGateway.html":{}}}],["this.chatservice.handledisconnect(socket",{"_index":483,"title":{},"body":{"classes/ChatGateway.html":{}}}],["this.chatservice.handlematch(event",{"_index":490,"title":{},"body":{"classes/ChatGateway.html":{}}}],["this.chatservice.handlemessage(client",{"_index":493,"title":{},"body":{"classes/ChatGateway.html":{}}}],["this.chatservice.handleseen(client",{"_index":497,"title":{},"body":{"classes/ChatGateway.html":{}}}],["this.chatservice.handlewriting(client",{"_index":495,"title":{},"body":{"classes/ChatGateway.html":{}}}],["this.client",{"_index":970,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["this.client.createchatcompletion",{"_index":994,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["this.configservice.get(\"aws_access_key_id",{"_index":872,"title":{},"body":{"injectables/FileService.html":{},"injectables/TicketsService.html":{}}}],["this.configservice.get(\"aws_bucket_name",{"_index":879,"title":{},"body":{"injectables/FileService.html":{}}}],["this.configservice.get(\"aws_region",{"_index":870,"title":{},"body":{"injectables/FileService.html":{},"injectables/TicketsService.html":{}}}],["this.configservice.get(\"aws_secret_access_key",{"_index":874,"title":{},"body":{"injectables/FileService.html":{},"injectables/TicketsService.html":{}}}],["this.createuser(dto",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.deleteuser(dto.email",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.eventemitter.emit('match",{"_index":1588,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["this.exerciseslibraryservice.create(createexerciseslibrarydto",{"_index":728,"title":{},"body":{"controllers/ExercisesLibraryController.html":{}}}],["this.exerciseslibraryservice.findall",{"_index":729,"title":{},"body":{"controllers/ExercisesLibraryController.html":{}}}],["this.exerciseslibraryservice.findbymuscle(muscle",{"_index":731,"title":{},"body":{"controllers/ExercisesLibraryController.html":{}}}],["this.exerciseslibraryservice.findone(+id",{"_index":733,"title":{},"body":{"controllers/ExercisesLibraryController.html":{}}}],["this.exerciseslibraryservice.remove(+id",{"_index":737,"title":{},"body":{"controllers/ExercisesLibraryController.html":{}}}],["this.exerciseslibraryservice.update(+id",{"_index":735,"title":{},"body":{"controllers/ExercisesLibraryController.html":{}}}],["this.feedbackuserservice.add(dto",{"_index":785,"title":{},"body":{"controllers/FeedbackUserController.html":{}}}],["this.feedbackuserservice.delete(id",{"_index":792,"title":{},"body":{"controllers/FeedbackUserController.html":{}}}],["this.feedbackuserservice.getall",{"_index":793,"title":{},"body":{"controllers/FeedbackUserController.html":{}}}],["this.feedbackuserservice.getbyid(id",{"_index":796,"title":{},"body":{"controllers/FeedbackUserController.html":{}}}],["this.feedbackuserservice.update(dto",{"_index":789,"title":{},"body":{"controllers/FeedbackUserController.html":{}}}],["this.fileservice",{"_index":846,"title":{},"body":{"controllers/FileController.html":{}}}],["this.fileservice.uploadpublicfile(file",{"_index":851,"title":{},"body":{"controllers/FileController.html":{}}}],["this.findbyday(email",{"_index":1768,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["this.getparams(ticket.user.email",{"_index":1443,"title":{},"body":{"injectables/TicketsService.html":{}}}],["this.getroom(roomid",{"_index":1300,"title":{},"body":{"classes/Rooms.html":{}}}],["this.mealrecoservice.mealreco(body.user_needs",{"_index":949,"title":{},"body":{"controllers/MealRecoController.html":{}}}],["this.nutritionservice.add(dto",{"_index":1043,"title":{},"body":{"controllers/NutritionController.html":{}}}],["this.nutritionservice.delete(number(id",{"_index":1056,"title":{},"body":{"controllers/NutritionController.html":{}}}],["this.nutritionservice.findall(req.user.email",{"_index":1046,"title":{},"body":{"controllers/NutritionController.html":{}}}],["this.nutritionservice.findbyday(req.user.email",{"_index":1050,"title":{},"body":{"controllers/NutritionController.html":{}}}],["this.nutritionservice.findone(number(id",{"_index":1052,"title":{},"body":{"controllers/NutritionController.html":{}}}],["this.nutritionservice.update(dto",{"_index":1054,"title":{},"body":{"controllers/NutritionController.html":{}}}],["this.openffservice.findall(request",{"_index":1131,"title":{},"body":{"controllers/OpenffController.html":{}}}],["this.preferencesservice.get(email",{"_index":1197,"title":{},"body":{"controllers/PreferencesController.html":{}}}],["this.preferencesservice.update(dto",{"_index":1195,"title":{},"body":{"controllers/PreferencesController.html":{}}}],["this.prisma.exercises_library.create",{"_index":752,"title":{},"body":{"injectables/ExercisesLibraryService.html":{}}}],["this.prisma.exercises_library.delete",{"_index":757,"title":{},"body":{"injectables/ExercisesLibraryService.html":{}}}],["this.prisma.exercises_library.findmany",{"_index":754,"title":{},"body":{"injectables/ExercisesLibraryService.html":{}}}],["this.prisma.exercises_library.findunique",{"_index":755,"title":{},"body":{"injectables/ExercisesLibraryService.html":{}}}],["this.prisma.exercises_library.update",{"_index":756,"title":{},"body":{"injectables/ExercisesLibraryService.html":{}}}],["this.prisma.preferences.create",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.reports.create",{"_index":1267,"title":{},"body":{"injectables/ReportsService.html":{}}}],["this.prisma.user",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.user.findunique",{"_index":1259,"title":{},"body":{"injectables/ReportsService.html":{}}}],["this.prisma.userdata.findunique",{"_index":1261,"title":{},"body":{"injectables/ReportsService.html":{}}}],["this.prisma.userdata.update",{"_index":1265,"title":{},"body":{"injectables/ReportsService.html":{}}}],["this.prismaservice.message.create",{"_index":562,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.prismaservice.message.findmany",{"_index":580,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.prismaservice.message.updatemany",{"_index":573,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.prismaservice.openfoodfacts.findmany",{"_index":1146,"title":{},"body":{"injectables/OpenffService.html":{}}}],["this.prismaservice.preferences.updatemany",{"_index":1207,"title":{},"body":{"injectables/PreferencesService.html":{}}}],["this.prismaservice.response.create",{"_index":1430,"title":{},"body":{"injectables/TicketsService.html":{}}}],["this.prismaservice.ticket.create",{"_index":1422,"title":{},"body":{"injectables/TicketsService.html":{}}}],["this.prismaservice.ticket.findmany",{"_index":1432,"title":{},"body":{"injectables/TicketsService.html":{}}}],["this.prismaservice.ticket.findunique",{"_index":1436,"title":{},"body":{"injectables/TicketsService.html":{}}}],["this.prismaservice.ticket.update",{"_index":1437,"title":{},"body":{"injectables/TicketsService.html":{}}}],["this.prismaservice.user.findunique",{"_index":577,"title":{},"body":{"injectables/ChatService.html":{},"injectables/PreferencesService.html":{}}}],["this.prismaservice.userdata.findmany",{"_index":1524,"title":{},"body":{"injectables/UserAdminService.html":{}}}],["this.prismaservice.userdata.update",{"_index":1525,"title":{},"body":{"injectables/UserAdminService.html":{}}}],["this.reflector.getallandoverride('ispublic",{"_index":158,"title":{},"body":{"injectables/AtGuard.html":{}}}],["this.reportsservice.change(currentuser",{"_index":1246,"title":{},"body":{"controllers/ReportsController.html":{}}}],["this.reportsservice.create(currentuser",{"_index":1244,"title":{},"body":{"controllers/ReportsController.html":{}}}],["this.rooms",{"_index":1296,"title":{},"body":{"classes/Rooms.html":{}}}],["this.rooms.addroom(room",{"_index":539,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.rooms.addusertoroom(roomname",{"_index":540,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.rooms.filter((room",{"_index":1297,"title":{},"body":{"classes/Rooms.html":{}}}],["this.rooms.find((room",{"_index":1299,"title":{},"body":{"classes/Rooms.html":{}}}],["this.rooms.finduserbysocketid(socket.id",{"_index":547,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.rooms.getroom(event.id1",{"_index":590,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.rooms.getroom(event.id2",{"_index":592,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.rooms.getroom(roomname",{"_index":537,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.rooms.getroom(user.userid)?.users.length",{"_index":553,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.rooms.getroomusers(user.userid",{"_index":561,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.rooms.push(room",{"_index":1295,"title":{},"body":{"classes/Rooms.html":{}}}],["this.rooms.removeroom(event.id1",{"_index":608,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.rooms.removeroom(event.id2",{"_index":609,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.rooms.removeroom(user.userid",{"_index":555,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.rooms.removeuserfromroom(user.userid",{"_index":552,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.s3",{"_index":869,"title":{},"body":{"injectables/FileService.html":{}}}],["this.s3.putobject",{"_index":877,"title":{},"body":{"injectables/FileService.html":{}}}],["this.server",{"_index":491,"title":{},"body":{"classes/ChatGateway.html":{}}}],["this.ses",{"_index":1420,"title":{},"body":{"injectables/TicketsService.html":{}}}],["this.ses.sendemail(this.getparams(res.user.email",{"_index":1453,"title":{},"body":{"injectables/TicketsService.html":{}}}],["this.ses.sendtemplatedemail",{"_index":1445,"title":{},"body":{"injectables/TicketsService.html":{}}}],["this.stepsservice.getstepsbyid(req.user.email",{"_index":1316,"title":{},"body":{"controllers/StepsController.html":{}}}],["this.ticketsservice.answer(dto",{"_index":1380,"title":{},"body":{"controllers/TicketsController.html":{}}}],["this.ticketsservice.close(id",{"_index":1383,"title":{},"body":{"controllers/TicketsController.html":{}}}],["this.ticketsservice.create(createticketdto",{"_index":1370,"title":{},"body":{"controllers/TicketsController.html":{}}}],["this.ticketsservice.find(cursor",{"_index":1372,"title":{},"body":{"controllers/TicketsController.html":{}}}],["this.ticketsservice.findone(+id",{"_index":1373,"title":{},"body":{"controllers/TicketsController.html":{}}}],["this.ticketsservice.gettickets(email",{"_index":1386,"title":{},"body":{"controllers/TicketsController.html":{}}}],["this.ticketsservice.getticketsfromid(id",{"_index":1389,"title":{},"body":{"controllers/TicketsController.html":{}}}],["this.ticketsservice.user_answer(dto",{"_index":1377,"title":{},"body":{"controllers/TicketsController.html":{}}}],["this.useradminservice.findall({email",{"_index":1506,"title":{},"body":{"controllers/UserAdminController.html":{}}}],["this.useradminservice.update(id",{"_index":1509,"title":{},"body":{"controllers/UserAdminController.html":{}}}],["this.userinfoservice.add(dto",{"_index":1622,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["this.userinfoservice.find(req.user.email",{"_index":1617,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["this.userinfoservice.findsidekick(req.user.email",{"_index":1620,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["this.userinfoservice.finduserswithoutsidekick",{"_index":1650,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["this.userinfoservice.linkusers(req",{"_index":1648,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["this.userinfoservice.setavatar(email",{"_index":1645,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["this.userinfoservice.update(dto",{"_index":1625,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["this.userinfosservice.find(email",{"_index":579,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.userinfosservice.find(email).catch",{"_index":972,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["this.userinfosservice.getuserfromid(userid",{"_index":533,"title":{},"body":{"injectables/ChatService.html":{}}}],["this.userpool",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userpool.signup(email",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.workoutsservice.add(dto",{"_index":1726,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["this.workoutsservice.burnedcalories(req.user.email",{"_index":1718,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["this.workoutsservice.find(number(id",{"_index":1722,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["this.workoutsservice.findall(req.user.email",{"_index":1724,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["this.workoutsservice.findalladmin",{"_index":1712,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["this.workoutsservice.findbyday(req.user.email",{"_index":1715,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["this.workoutsservice.findsidekick(req.user.email",{"_index":1720,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["this.workoutsservice.remove(number(id",{"_index":1730,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["this.workoutsservice.update(number(id",{"_index":1728,"title":{},"body":{"controllers/WorkoutsController.html":{}}}],["throttle",{"_index":944,"title":{},"body":{"controllers/MealRecoController.html":{}}}],["throttle(1",{"_index":947,"title":{},"body":{"controllers/MealRecoController.html":{}}}],["throttlerguard",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":43,"title":{},"body":{"guards/AdminGuard.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/FeedbackUserService.html":{},"injectables/MealRecoService.html":{},"injectables/NutritionService.html":{},"injectables/ReportsService.html":{},"injectables/StepsService.html":{},"injectables/UserInfoService.html":{},"injectables/WorkoutsService.html":{}}}],["thumbnail",{"_index":621,"title":{},"body":{"classes/CreateExercisesLibraryDto.html":{},"injectables/ExercisesLibraryService.html":{}}}],["ticket",{"_index":1421,"title":{},"body":{"injectables/TicketsService.html":{}}}],["ticket.dto",{"_index":1366,"title":{},"body":{"controllers/TicketsController.html":{},"injectables/TicketsService.html":{}}}],["ticket.dto.ts",{"_index":649,"title":{},"body":{"classes/CreateTicketDto.html":{},"coverage.html":{}}}],["ticket.dto.ts:5",{"_index":651,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:8",{"_index":652,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.id",{"_index":1431,"title":{},"body":{"injectables/TicketsService.html":{}}}],["ticket.title",{"_index":1451,"title":{},"body":{"injectables/TicketsService.html":{}}}],["ticket.user.email",{"_index":1439,"title":{},"body":{"injectables/TicketsService.html":{}}}],["ticket_name",{"_index":1450,"title":{},"body":{"injectables/TicketsService.html":{}}}],["tickets",{"_index":1333,"title":{},"body":{"controllers/TicketsController.html":{}}}],["tickets.controller",{"_index":1393,"title":{},"body":{"modules/TicketsModule.html":{}}}],["tickets.service",{"_index":1365,"title":{},"body":{"controllers/TicketsController.html":{},"modules/TicketsModule.html":{}}}],["tickets/tickets.module",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["ticketscontroller",{"_index":1331,"title":{"controllers/TicketsController.html":{}},"body":{"controllers/TicketsController.html":{},"modules/TicketsModule.html":{},"coverage.html":{}}}],["ticketsmodule",{"_index":90,"title":{"modules/TicketsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TicketsModule.html":{},"modules.html":{},"overview.html":{}}}],["ticketsservice",{"_index":1364,"title":{"injectables/TicketsService.html":{}},"body":{"controllers/TicketsController.html":{},"modules/TicketsModule.html":{},"injectables/TicketsService.html":{},"coverage.html":{},"overview.html":{}}}],["title",{"_index":650,"title":{},"body":{"classes/CreateTicketDto.html":{},"injectables/TicketsService.html":{}}}],["toaddresses",{"_index":1409,"title":{},"body":{"injectables/TicketsService.html":{}}}],["tokens",{"_index":1942,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["tort",{"_index":1922,"title":{},"body":{"license.html":{}}}],["total",{"_index":1110,"title":{},"body":{"injectables/NutritionService.html":{},"injectables/WorkoutsService.html":{}}}],["transformer",{"_index":1821,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":41,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppModule.html":{},"injectables/AtGuard.html":{},"injectables/ChatService.html":{},"injectables/JwtStrategy.html":{},"injectables/PreferencesService.html":{},"injectables/TicketsService.html":{},"injectables/UserAdminService.html":{},"controllers/UserInfosController.html":{},"interfaces/ValidatedUser.html":{},"injectables/WorkoutsService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/FileService.html":{},"injectables/MealRecoService.html":{},"injectables/OpenffService.html":{}}}],["ttl",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["turbo",{"_index":998,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["type",{"_index":17,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AtGuard.html":{},"injectables/AuthConfig.html":{},"controllers/AuthController.html":{},"classes/AuthDto.html":{},"injectables/AuthService.html":{},"controllers/ChatController.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"classes/CreateExercisesLibraryDto.html":{},"classes/CreateFeedbackUserDto.html":{},"classes/CreateTicketDto.html":{},"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/FeedbackUserController.html":{},"injectables/FeedbackUserService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"classes/GetUserAdminDto.html":{},"injectables/JwtStrategy.html":{},"classes/MatchEvent.html":{},"controllers/MealRecoController.html":{},"classes/MealRecoDto.html":{},"injectables/MealRecoService.html":{},"classes/ModeratorAnswerDto.html":{},"controllers/NutritionController.html":{},"classes/NutritionDto.html":{},"injectables/NutritionService.html":{},"controllers/OpenffController.html":{},"injectables/OpenffService.html":{},"controllers/PreferencesController.html":{},"injectables/PreferencesService.html":{},"injectables/PrismaService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"classes/Rooms.html":{},"controllers/StepsController.html":{},"injectables/StepsService.html":{},"controllers/TicketsController.html":{},"injectables/TicketsService.html":{},"classes/UpdateExercisesLibraryDto.html":{},"classes/UpdateFeedbackUserDto.html":{},"classes/UpdateNutritionDto.html":{},"classes/UpdatePreferenceDto.html":{},"controllers/UserAdminController.html":{},"injectables/UserAdminService.html":{},"classes/UserAnswerDto.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"classes/UserInfosDto.html":{},"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{},"classes/UserWithoutSidekickException.html":{},"interfaces/ValidatedUser.html":{},"controllers/WorkoutsController.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{},"injectables/WorkoutsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1939,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":1461,"title":{},"body":{"classes/UpdateExercisesLibraryDto.html":{},"classes/UpdateOpenffDto.html":{},"controllers/UserInfosController.html":{},"dependencies.html":{}}}],["unauthorizedexception",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["unauthorizedexception(\"invalid",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["und3f1nd",{"_index":1150,"title":{},"body":{"injectables/OpenffService.html":{}}}],["und3f1ndbrand",{"_index":1153,"title":{},"body":{"injectables/OpenffService.html":{}}}],["und3f1ndscore",{"_index":1181,"title":{},"body":{"injectables/OpenffService.html":{}}}],["undefined",{"_index":585,"title":{},"body":{"injectables/ChatService.html":{},"injectables/UserAdminService.html":{},"miscellaneous/variables.html":{}}}],["understand",{"_index":1007,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["unknown",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChatGateway.html":{},"injectables/ChatService.html":{},"injectables/ExercisesLibraryService.html":{},"injectables/FeedbackUserService.html":{},"controllers/FileController.html":{},"injectables/FileService.html":{},"injectables/NutritionService.html":{},"injectables/OpenffService.html":{},"injectables/PreferencesService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"injectables/StepsService.html":{},"injectables/TicketsService.html":{},"injectables/UserInfoService.html":{},"injectables/WorkoutsService.html":{}}}],["unlicensed",{"_index":1937,"title":{},"body":{"properties.html":{}}}],["update",{"_index":700,"title":{},"body":{"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{},"injectables/FeedbackUserService.html":{},"injectables/NutritionService.html":{},"controllers/PreferencesController.html":{},"injectables/PreferencesService.html":{},"injectables/UserAdminService.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"controllers/WorkoutsController.html":{},"injectables/WorkoutsService.html":{},"index.html":{}}}],["update(@body",{"_index":1194,"title":{},"body":{"controllers/PreferencesController.html":{}}}],["update(@param('id",{"_index":734,"title":{},"body":{"controllers/ExercisesLibraryController.html":{},"controllers/WorkoutsController.html":{}}}],["update(@request",{"_index":1624,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["update(datas",{"_index":1093,"title":{},"body":{"injectables/NutritionService.html":{},"injectables/UserInfoService.html":{}}}],["update(dto",{"_index":1187,"title":{},"body":{"controllers/PreferencesController.html":{}}}],["update(feedback",{"_index":813,"title":{},"body":{"injectables/FeedbackUserService.html":{}}}],["update(id",{"_index":715,"title":{},"body":{"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{},"controllers/WorkoutsController.html":{},"injectables/WorkoutsService.html":{}}}],["update(req",{"_index":1608,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["update(updatepreferencedto",{"_index":1205,"title":{},"body":{"injectables/PreferencesService.html":{}}}],["update(userid",{"_index":1519,"title":{},"body":{"injectables/UserAdminService.html":{}}}],["update_user",{"_index":1492,"title":{},"body":{"controllers/UserAdminController.html":{}}}],["update_user(@query(\"user_id",{"_index":1508,"title":{},"body":{"controllers/UserAdminController.html":{}}}],["update_user(id",{"_index":1493,"title":{},"body":{"controllers/UserAdminController.html":{}}}],["updateexerciseslibrarydto",{"_index":716,"title":{"classes/UpdateExercisesLibraryDto.html":{}},"body":{"controllers/ExercisesLibraryController.html":{},"injectables/ExercisesLibraryService.html":{},"classes/UpdateExercisesLibraryDto.html":{},"coverage.html":{}}}],["updatefeedbackuserdto",{"_index":773,"title":{"classes/UpdateFeedbackUserDto.html":{}},"body":{"controllers/FeedbackUserController.html":{},"injectables/FeedbackUserService.html":{},"classes/UpdateFeedbackUserDto.html":{},"coverage.html":{}}}],["updateinfos",{"_index":1520,"title":{},"body":{"injectables/UserAdminService.html":{}}}],["updatenutritiondto",{"_index":1034,"title":{"classes/UpdateNutritionDto.html":{}},"body":{"controllers/NutritionController.html":{},"injectables/NutritionService.html":{},"classes/UpdateNutritionDto.html":{},"coverage.html":{}}}],["updateopenffdto",{"_index":1477,"title":{"classes/UpdateOpenffDto.html":{}},"body":{"classes/UpdateOpenffDto.html":{},"coverage.html":{}}}],["updatepreferencedto",{"_index":1188,"title":{"classes/UpdatePreferenceDto.html":{}},"body":{"controllers/PreferencesController.html":{},"injectables/PreferencesService.html":{},"classes/UpdatePreferenceDto.html":{},"coverage.html":{}}}],["upgenerate",{"_index":1849,"title":{},"body":{"index.html":{}}}],["uploadedfile",{"_index":838,"title":{},"body":{"controllers/FileController.html":{},"controllers/UserInfosController.html":{}}}],["uploadfile",{"_index":832,"title":{},"body":{"controllers/FileController.html":{}}}],["uploadfile(@uploadedfile(new",{"_index":849,"title":{},"body":{"controllers/FileController.html":{}}}],["uploadfile(file",{"_index":833,"title":{},"body":{"controllers/FileController.html":{}}}],["uploadpublicfile",{"_index":859,"title":{},"body":{"injectables/FileService.html":{}}}],["uploadpublicfile(file",{"_index":863,"title":{},"body":{"injectables/FileService.html":{}}}],["url",{"_index":1224,"title":{},"body":{"injectables/PrismaService.html":{}}}],["use",{"_index":1884,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TicketsController.html":{},"controllers/UserAdminController.html":{},"controllers/UserInfosController.html":{}}}],["useguards(adminguard",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TicketsController.html":{},"controllers/UserAdminController.html":{},"controllers/UserInfosController.html":{}}}],["useguards(adminguard)@get",{"_index":1349,"title":{},"body":{"controllers/TicketsController.html":{}}}],["useguards(adminguard)@get(':id",{"_index":1351,"title":{},"body":{"controllers/TicketsController.html":{}}}],["useguards(adminguard)@get('admin",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TicketsController.html":{}}}],["useguards(adminguard)@post(':id/admin/answer",{"_index":1341,"title":{},"body":{"controllers/TicketsController.html":{}}}],["useguards(adminguard)@post(':id/close",{"_index":1344,"title":{},"body":{"controllers/TicketsController.html":{}}}],["useguards(adminguard)@post('link_users",{"_index":1604,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["useinterceptors",{"_index":839,"title":{},"body":{"controllers/FileController.html":{},"controllers/UserInfosController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":848,"title":{},"body":{"controllers/FileController.html":{},"controllers/UserInfosController.html":{}}}],["user",{"_index":32,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"controllers/FeedbackUserController.html":{},"injectables/FeedbackUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/MealRecoService.html":{},"injectables/NutritionService.html":{},"injectables/PreferencesService.html":{},"injectables/ReportsService.html":{},"classes/Rooms.html":{},"injectables/StepsService.html":{},"injectables/TicketsService.html":{},"injectables/UserAdminService.html":{},"injectables/UserInfoService.html":{},"interfaces/ValidatedUser.html":{},"injectables/WorkoutsService.html":{}}}],["user.authenticateuser(authenticationdetails",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.confirmpassword(verificationcode",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.deleteuser((err",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.forgotpassword",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.globalsignout",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.goal",{"_index":973,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["user.id",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"injectables/FeedbackUserService.html":{},"injectables/NutritionService.html":{},"injectables/PreferencesService.html":{},"injectables/ReportsService.html":{},"injectables/UserInfoService.html":{},"injectables/WorkoutsService.html":{}}}],["user.isadmin",{"_index":39,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["user.preferences[0",{"_index":1209,"title":{},"body":{"injectables/PreferencesService.html":{}}}],["user.refreshsession(refreshtoken",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.sidekick_id",{"_index":534,"title":{},"body":{"injectables/ChatService.html":{}}}],["user.sidekickid",{"_index":565,"title":{},"body":{"injectables/ChatService.html":{}}}],["user.socketid",{"_index":1305,"title":{},"body":{"classes/Rooms.html":{}}}],["user.userid",{"_index":564,"title":{},"body":{"injectables/ChatService.html":{},"classes/Rooms.html":{}}}],["user1",{"_index":1583,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["user1.sidekick_id",{"_index":1585,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["user2",{"_index":1584,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["user2.sidekick_id",{"_index":1587,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["user?.userid",{"_index":551,"title":{},"body":{"injectables/ChatService.html":{}}}],["user_admin",{"_index":1491,"title":{},"body":{"controllers/UserAdminController.html":{}}}],["user_admin.controller",{"_index":1513,"title":{},"body":{"modules/UserAdminModule.html":{}}}],["user_admin.service",{"_index":1500,"title":{},"body":{"controllers/UserAdminController.html":{},"modules/UserAdminModule.html":{}}}],["user_admin/user_admin.module",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["user_answer",{"_index":1339,"title":{},"body":{"controllers/TicketsController.html":{},"injectables/TicketsService.html":{}}}],["user_answer(@body",{"_index":1375,"title":{},"body":{"controllers/TicketsController.html":{}}}],["user_answer(dto",{"_index":1360,"title":{},"body":{"controllers/TicketsController.html":{}}}],["user_answer(undefined",{"_index":1415,"title":{},"body":{"injectables/TicketsService.html":{}}}],["user_infos",{"_index":1594,"title":{},"body":{"controllers/UserInfosController.html":{}}}],["user_infos.controller",{"_index":1669,"title":{},"body":{"modules/UserInfosModule.html":{}}}],["user_infos.service",{"_index":1613,"title":{},"body":{"controllers/UserInfosController.html":{},"modules/UserInfosModule.html":{}}}],["user_infos/exceptions/not",{"_index":815,"title":{},"body":{"injectables/FeedbackUserService.html":{},"injectables/StepsService.html":{}}}],["user_infos/user_infos.module",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/MealRecoModule.html":{}}}],["user_infos/user_infos.service",{"_index":527,"title":{},"body":{"injectables/ChatService.html":{},"injectables/MealRecoService.html":{},"injectables/WorkoutsService.html":{}}}],["user_needs",{"_index":952,"title":{},"body":{"classes/MealRecoDto.html":{},"injectables/MealRecoService.html":{}}}],["user_needs}\\n",{"_index":990,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["useradmincontroller",{"_index":1489,"title":{"controllers/UserAdminController.html":{}},"body":{"controllers/UserAdminController.html":{},"modules/UserAdminModule.html":{},"coverage.html":{}}}],["useradminmodule",{"_index":91,"title":{"modules/UserAdminModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserAdminModule.html":{},"modules.html":{},"overview.html":{}}}],["useradminservice",{"_index":1499,"title":{"injectables/UserAdminService.html":{}},"body":{"controllers/UserAdminController.html":{},"modules/UserAdminModule.html":{},"injectables/UserAdminService.html":{},"coverage.html":{},"overview.html":{}}}],["useranswerdto",{"_index":1416,"title":{"classes/UserAnswerDto.html":{}},"body":{"injectables/TicketsService.html":{},"classes/UserAnswerDto.html":{},"coverage.html":{}}}],["userattributes",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdatas",{"_index":1559,"title":{},"body":{"injectables/UserInfoService.html":{},"injectables/WorkoutsService.html":{}}}],["userdatas.sidekick_id",{"_index":1561,"title":{},"body":{"injectables/UserInfoService.html":{},"injectables/WorkoutsService.html":{}}}],["userdatas[\"email",{"_index":1560,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["useremail",{"_index":807,"title":{},"body":{"injectables/FeedbackUserService.html":{},"injectables/NutritionService.html":{},"injectables/StepsService.html":{},"injectables/UserInfoService.html":{},"injectables/WorkoutsService.html":{}}}],["userid",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatService.html":{},"classes/CreateFeedbackUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/NutritionDto.html":{},"injectables/NutritionService.html":{},"injectables/PreferencesService.html":{},"injectables/ReportsService.html":{},"classes/Rooms.html":{},"injectables/StepsService.html":{},"classes/UpdateNutritionDto.html":{},"injectables/UserAdminService.html":{},"injectables/UserInfoService.html":{},"interfaces/ValidatedUser.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{},"injectables/WorkoutsService.html":{}}}],["userinfo",{"_index":1260,"title":{},"body":{"injectables/ReportsService.html":{}}}],["userinfo.sidekick_id",{"_index":1263,"title":{},"body":{"injectables/ReportsService.html":{}}}],["userinfos",{"_index":1774,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["userinfos.weight",{"_index":1776,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["userinfoscontroller",{"_index":1592,"title":{"controllers/UserInfosController.html":{}},"body":{"controllers/UserInfosController.html":{},"modules/UserInfosModule.html":{},"coverage.html":{}}}],["userinfosdto",{"_index":1537,"title":{"classes/UserInfosDto.html":{}},"body":{"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"classes/UserInfosDto.html":{},"coverage.html":{}}}],["userinfoservice",{"_index":511,"title":{"injectables/UserInfoService.html":{}},"body":{"injectables/ChatService.html":{},"injectables/MealRecoService.html":{},"injectables/UserInfoService.html":{},"controllers/UserInfosController.html":{},"modules/UserInfosModule.html":{},"injectables/WorkoutsService.html":{},"coverage.html":{},"overview.html":{}}}],["userinfosmodule",{"_index":92,"title":{"modules/UserInfosModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChatModule.html":{},"modules/MealRecoModule.html":{},"modules/UserInfosModule.html":{},"modules.html":{},"overview.html":{}}}],["userinfosservice",{"_index":513,"title":{},"body":{"injectables/ChatService.html":{},"injectables/MealRecoService.html":{}}}],["username",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["usernotfoundexception",{"_index":240,"title":{"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{}},"body":{"controllers/AuthController.html":{},"injectables/FeedbackUserService.html":{},"injectables/NutritionService.html":{},"injectables/StepsService.html":{},"injectables/UserInfoService.html":{},"classes/UserNotFoundException.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserNotFoundException-2.html":{},"classes/UserWithoutSidekickException.html":{},"injectables/WorkoutsService.html":{},"coverage.html":{}}}],["usernotfoundexception(email",{"_index":1580,"title":{},"body":{"injectables/UserInfoService.html":{},"injectables/WorkoutsService.html":{}}}],["usernotfoundexception(id",{"_index":1590,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["usernotfoundexception(useremail",{"_index":822,"title":{},"body":{"injectables/FeedbackUserService.html":{},"injectables/NutritionService.html":{},"injectables/StepsService.html":{},"injectables/UserInfoService.html":{},"injectables/WorkoutsService.html":{}}}],["userpool",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["userpoolid",{"_index":170,"title":{},"body":{"injectables/AuthConfig.html":{},"injectables/AuthService.html":{}}}],["users",{"_index":538,"title":{},"body":{"injectables/ChatService.html":{},"classes/Rooms.html":{},"controllers/UserAdminController.html":{}}}],["users(@query('email",{"_index":1504,"title":{},"body":{"controllers/UserAdminController.html":{}}}],["users(email",{"_index":1496,"title":{},"body":{"controllers/UserAdminController.html":{}}}],["usersdatas",{"_index":1557,"title":{},"body":{"injectables/UserInfoService.html":{}}}],["usersteps",{"_index":1326,"title":{},"body":{"injectables/StepsService.html":{}}}],["usersteps.id",{"_index":1328,"title":{},"body":{"injectables/StepsService.html":{}}}],["userwithoutsidekickexception",{"_index":1553,"title":{"classes/UserWithoutSidekickException.html":{}},"body":{"injectables/UserInfoService.html":{},"classes/UserNotFoundException-1.html":{},"classes/UserWithoutSidekickException.html":{},"injectables/WorkoutsService.html":{},"coverage.html":{}}}],["userwithoutsidekickexception(user.id",{"_index":1562,"title":{},"body":{"injectables/UserInfoService.html":{},"injectables/WorkoutsService.html":{}}}],["utf",{"_index":1455,"title":{},"body":{"injectables/TicketsService.html":{}}}],["uuid",{"_index":868,"title":{},"body":{"injectables/FileService.html":{},"dependencies.html":{}}}],["uuid()}.${file.originalname.split(\".\").pop",{"_index":876,"title":{},"body":{"injectables/FileService.html":{}}}],["v3zzxp",{"_index":1177,"title":{},"body":{"injectables/OpenffService.html":{}}}],["v4",{"_index":867,"title":{},"body":{"injectables/FileService.html":{}}}],["validate",{"_index":891,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":894,"title":{},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{}}}],["validateduser",{"_index":904,"title":{"interfaces/ValidatedUser.html":{}},"body":{"injectables/JwtStrategy.html":{},"interfaces/ValidatedUser.html":{},"coverage.html":{}}}],["validator",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthDto.html":{},"classes/CreateExercisesLibraryDto.html":{},"classes/CreateFeedbackUserDto.html":{},"classes/CreateTicketDto.html":{},"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"classes/GetUserAdminDto.html":{},"classes/MealRecoDto.html":{},"classes/ModeratorAnswerDto.html":{},"classes/NutritionDto.html":{},"classes/UpdateExercisesLibraryDto.html":{},"classes/UpdateFeedbackUserDto.html":{},"classes/UpdateNutritionDto.html":{},"classes/UpdatePreferenceDto.html":{},"classes/UserAnswerDto.html":{},"classes/UserInfosDto.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{},"dependencies.html":{}}}],["validators",{"_index":850,"title":{},"body":{"controllers/FileController.html":{}}}],["value",{"_index":172,"title":{},"body":{"injectables/AuthConfig.html":{},"injectables/ChatService.html":{},"classes/Rooms.html":{},"controllers/TicketsController.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":819,"title":{},"body":{"injectables/FeedbackUserService.html":{},"injectables/UserInfoService.html":{}}}],["variable",{"_index":1795,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1945,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vector",{"_index":1169,"title":{},"body":{"injectables/OpenffService.html":{}}}],["verificationcode",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["version",{"_index":1935,"title":{},"body":{"properties.html":{}}}],["video",{"_index":622,"title":{},"body":{"classes/CreateExercisesLibraryDto.html":{},"injectables/ExercisesLibraryService.html":{}}}],["void",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ChatService.html":{},"classes/Rooms.html":{}}}],["warranties",{"_index":1907,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1903,"title":{},"body":{"license.html":{}}}],["website",{"_index":1172,"title":{},"body":{"injectables/OpenffService.html":{}}}],["websocketgateway",{"_index":474,"title":{},"body":{"classes/ChatGateway.html":{}}}],["websocketserver",{"_index":451,"title":{},"body":{"classes/ChatGateway.html":{}}}],["weight",{"_index":664,"title":{},"body":{"classes/EditInfosDto.html":{},"classes/EditInfosDto-1.html":{},"classes/GetUserAdminDto.html":{},"injectables/MealRecoService.html":{},"classes/NutritionDto.html":{},"classes/UpdateNutritionDto.html":{},"classes/UserInfosDto.html":{}}}],["weight_gain",{"_index":977,"title":{},"body":{"injectables/MealRecoService.html":{}}}],["whereclause",{"_index":1522,"title":{},"body":{"injectables/UserAdminService.html":{}}}],["whether",{"_index":1919,"title":{},"body":{"license.html":{}}}],["without",{"_index":1879,"title":{},"body":{"license.html":{}}}],["workout",{"_index":1763,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["workout.burnedcalories",{"_index":1770,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["workouts",{"_index":1685,"title":{},"body":{"controllers/WorkoutsController.html":{},"injectables/WorkoutsService.html":{}}}],["workouts.controller",{"_index":1746,"title":{},"body":{"modules/WorkoutsModule.html":{}}}],["workouts.reduce((total",{"_index":1769,"title":{},"body":{"injectables/WorkoutsService.html":{}}}],["workouts.service",{"_index":1710,"title":{},"body":{"controllers/WorkoutsController.html":{},"modules/WorkoutsModule.html":{}}}],["workouts/workouts.module",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["workoutscontroller",{"_index":1683,"title":{"controllers/WorkoutsController.html":{}},"body":{"controllers/WorkoutsController.html":{},"modules/WorkoutsModule.html":{},"coverage.html":{}}}],["workoutsdto",{"_index":1688,"title":{"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{}},"body":{"controllers/WorkoutsController.html":{},"classes/WorkoutsDto.html":{},"classes/WorkoutsDto-1.html":{},"injectables/WorkoutsService.html":{},"coverage.html":{}}}],["workoutsmodule",{"_index":93,"title":{"modules/WorkoutsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WorkoutsModule.html":{},"modules.html":{},"overview.html":{}}}],["workoutsservice",{"_index":1709,"title":{"injectables/WorkoutsService.html":{}},"body":{"controllers/WorkoutsController.html":{},"modules/WorkoutsModule.html":{},"injectables/WorkoutsService.html":{},"coverage.html":{},"overview.html":{}}}],["works",{"_index":548,"title":{},"body":{"injectables/ChatService.html":{}}}],["world",{"_index":145,"title":{},"body":{"injectables/AppService.html":{}}}],["writing",{"_index":571,"title":{},"body":{"injectables/ChatService.html":{}}}],["zoom",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChatModule.html":{},"modules/ExercisesLibraryModule.html":{},"modules/FeedbackUserModule.html":{},"modules/FileModule.html":{},"modules/MealRecoModule.html":{},"modules/NutritionModule.html":{},"modules/OpenffModule.html":{},"modules/PreferencesModule.html":{},"modules/PrismaModule.html":{},"modules/ReportsModule.html":{},"modules/StepsModule.html":{},"modules/TicketsModule.html":{},"modules/UserAdminModule.html":{},"modules/UserInfosModule.html":{},"modules/WorkoutsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/common/guards/admin.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/admin.guard.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext, ForbiddenException } from '@nestjs/common';\n\n@Injectable()\nexport class AdminGuard implements CanActivate {\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    const referer = request.headers.referer || request.headers.referrer;\n\n    const base_url = \"http://13.37.217.239\"\n    if ((user && user.isAdmin) || referer === base_url || referer === base_url + '/') {\n      return true;\n    }\n\n    // Otherwise, throw a Forbidden exception\n    throw new ForbiddenException('Only admins can access this route');\n  }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nChatModule\n\nChatModule\n\nAppModule -->\n\nChatModule->AppModule\n\n\n\n\n\nExercisesLibraryModule\n\nExercisesLibraryModule\n\nAppModule -->\n\nExercisesLibraryModule->AppModule\n\n\n\n\n\nFeedbackUserModule\n\nFeedbackUserModule\n\nAppModule -->\n\nFeedbackUserModule->AppModule\n\n\n\n\n\nFileModule\n\nFileModule\n\nAppModule -->\n\nFileModule->AppModule\n\n\n\n\n\nMealRecoModule\n\nMealRecoModule\n\nAppModule -->\n\nMealRecoModule->AppModule\n\n\n\n\n\nNutritionModule\n\nNutritionModule\n\nAppModule -->\n\nNutritionModule->AppModule\n\n\n\n\n\nOpenffModule\n\nOpenffModule\n\nAppModule -->\n\nOpenffModule->AppModule\n\n\n\n\n\nPreferencesModule\n\nPreferencesModule\n\nAppModule -->\n\nPreferencesModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nReportsModule\n\nReportsModule\n\nAppModule -->\n\nReportsModule->AppModule\n\n\n\nAppModule -->\n\nReportsModule->AppModule\n\n\n\n\n\nStepsModule\n\nStepsModule\n\nAppModule -->\n\nStepsModule->AppModule\n\n\n\n\n\nTicketsModule\n\nTicketsModule\n\nAppModule -->\n\nTicketsModule->AppModule\n\n\n\n\n\nUserAdminModule\n\nUserAdminModule\n\nAppModule -->\n\nUserAdminModule->AppModule\n\n\n\n\n\nUserInfosModule\n\nUserInfosModule\n\nAppModule -->\n\nUserInfosModule->AppModule\n\n\n\n\n\nWorkoutsModule\n\nWorkoutsModule\n\nAppModule -->\n\nWorkoutsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nNutritionService\n\nNutritionService\n\nAppModule -->\n\nNutritionService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            NutritionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            NutritionController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ChatModule\n                        \n                        \n                            ExercisesLibraryModule\n                        \n                        \n                            FeedbackUserModule\n                        \n                        \n                            FileModule\n                        \n                        \n                            MealRecoModule\n                        \n                        \n                            NutritionModule\n                        \n                        \n                            OpenffModule\n                        \n                        \n                            PreferencesModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ReportsModule\n                        \n                        \n                            ReportsModule\n                        \n                        \n                            StepsModule\n                        \n                        \n                            TicketsModule\n                        \n                        \n                            UserAdminModule\n                        \n                        \n                            UserInfosModule\n                        \n                        \n                            WorkoutsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule } from '@nestjs/config'\nimport { PrismaModule } from './prisma/prisma.module';\nimport { AuthModule } from './auth/auth.module';\nimport { APP_GUARD } from '@nestjs/core';\nimport { AtGuard } from './common/guards';\nimport { UserInfosModule } from './user_infos/user_infos.module';\nimport { StepsModule } from \"./steps/steps.module\";\nimport { NutritionService } from './nutrition/nutrition.service';\nimport { NutritionController } from './nutrition/nutrition.controller';\nimport { NutritionModule } from './nutrition/nutrition.module';\nimport { ChatModule } from './chat/chat.module';\nimport { ReportsModule } from './reports/reports.module';\nimport { FileModule } from './file/file.module';\nimport { WorkoutsModule } from './workouts/workouts.module';\nimport { PreferencesModule } from './preferences/preferences.module';\nimport { OpenffModule } from './openff/openff.module';\nimport { ExercisesLibraryModule } from './exercises_library/exercises_library.module';\nimport { MealRecoModule } from './meal_reco/meal_reco.module';\nimport { ThrottlerGuard, ThrottlerModule } from '@nestjs/throttler';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { FeedbackUserModule } from './feedback_user/feedback_user.module';\nimport { TicketsModule } from './tickets/tickets.module';\nimport { UserAdminModule } from './user_admin/user_admin.module';\n\n@Module({\n  imports: [ConfigModule.forRoot({ isGlobal: true }), ThrottlerModule.forRoot({\n    ttl: 60,\n    limit: 60,\n  }), PrismaModule, AuthModule, UserInfosModule, StepsModule, NutritionModule, ChatModule, ReportsModule, FileModule, ReportsModule, WorkoutsModule, PreferencesModule, OpenffModule, ExercisesLibraryModule, MealRecoModule, EventEmitterModule.forRoot(), FeedbackUserModule, TicketsModule, UserAdminModule],\n  controllers: [AppController, NutritionController],\n  providers: [AppService, {\n    provide: APP_GUARD,\n    useClass: AtGuard\n  }, {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard\n    }, NutritionService],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AtGuard.html":{"url":"injectables/AtGuard.html","title":"injectable - AtGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AtGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/guards/at.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/at.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/common/guards/at.guard.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class AtGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic: boolean = this.reflector.getAllAndOverride('isPublic', [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    if (isPublic)\n      return true;\n\n    return super.canActivate(context);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthConfig.html":{"url":"injectables/AuthConfig.html","title":"injectable - AuthConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authority\n                            \n                            \n                                    Public\n                                clientId\n                            \n                            \n                                    Public\n                                poolUrl\n                            \n                            \n                                    Public\n                                region\n                            \n                            \n                                    Public\n                                userPoolId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authority\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `https://cognito-idp.${process.env.COGNITO_REGION}.amazonaws.com/${process.env.COGNITO_USER_POOL_ID}`\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.config.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clientId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : process.env.COGNITO_CLIENT_ID\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.config.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        poolUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.COGNITO_POOL_URL\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.config.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : process.env.COGNITO_REGION\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.config.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userPoolId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : process.env.COGNITO_USER_POOL_ID\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.config.ts:5\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class AuthConfig {\n  public userPoolId: string = process.env.COGNITO_USER_POOL_ID;\n  public clientId: string = process.env.COGNITO_CLIENT_ID;\n  public region: string = process.env.COGNITO_REGION;\n  public authority = `https://cognito-idp.${process.env.COGNITO_REGION}.amazonaws.com/${process.env.COGNITO_USER_POOL_ID}`;\n  public poolUrl = process.env.COGNITO_POOL_URL;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                admin\n                            \n                            \n                                    \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                    \n                                me\n                            \n                            \n                                    \n                                    \n                                public\n                            \n                            \n                                    \n                                    \n                                    Async\n                                refresh\n                            \n                            \n                                    \n                                    \n                                    Async\n                                register\n                            \n                            \n                                    \n                                    \n                                    Async\n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        admin\n                        \n                    \n                \n            \n            \n                \n                    \n                    admin(res: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AdminGuard)@Get('admin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(dto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('delete')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotPassword(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('forgotPassword')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(dto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('logout')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me(req: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        public\n                        \n                    \n                \n            \n            \n                \n                    \n                    public()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('public')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh(rt: string, email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('refresh')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(dto: AuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('register')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(dto: AuthDto, verificationCode: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('resetPassword')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    verificationCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Headers, Post, Request, Res, UnauthorizedException, UseGuards } from \"@nestjs/common\";\nimport UserNotFoundException from \"src/user_infos/exceptions/not-found.exception\";\nimport { Public } from \"../common/decorators\";\nimport { AuthService } from \"./auth.service\";\nimport { AuthDto } from \"./dto\";\nimport { IsEmail } from \"class-validator\";\nimport { AdminGuard } from \"src/common/guards\";\n\n@Controller(\"auth\")\nexport class AuthController {\n  constructor(private authService: AuthService) { }\n\n  @Public()\n  @Post(\"login\")\n  async login(@Body() dto: AuthDto) {\n    return this.authService.login(dto);\n  }\n\n  @Public()\n  @Post(\"register\")\n  async register(@Body() dto: AuthDto) {\n    try {\n      return this.authService.register(dto);\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  @Public()\n  @Post(\"logout\")\n  async logout(@Body() email: string) {\n    return this.authService.logout(email);\n  }\n\n  @Public()\n  @Post(\"delete\")\n  async delete(@Body() dto: AuthDto) {\n    return this.authService.delete(dto);\n  }\n\n  @Public()\n  @Post(\"refresh\")\n  async refresh(@Body(\"rt\") rt: string, @Body(\"email\") email: string) {\n    try {\n      return this.authService.refresh(rt, email);\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  @Public()\n  @Post(\"forgotPassword\")\n  async forgotPassword(@Body(\"email\") email: string) {\n    return this.authService.forgotPassword(email);\n  }\n\n  @Public()\n  @Post(\"resetPassword\")\n  async resetPassword(@Body() dto: AuthDto, @Body(\"verificationCode\") verificationCode: string) {\n    return this.authService.resetPassword(dto, verificationCode);\n  }\n\n  @Get(\"me\")\n  me(@Request() req: any) {\n    console.log(req.user);\n    return \"connected\";\n  }\n\n  @Public()\n  @Get(\"public\")\n  public() {\n    return \"public\";\n  }\n\n  @UseGuards(AdminGuard)\n  @Get(\"admin\")\n  admin(@Res() res: any) {\n    res.status(200).send();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthDto.html":{"url":"classes/AuthDto.html","title":"class - AuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/auth.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class AuthDto {\n  @IsNotEmpty()\n  @IsString()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nChatModule\n\nChatModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nChatModule->AuthModule\n\n\n\n\n\nAuthConfig\n\nAuthConfig\n\nAuthModule -->\n\nAuthConfig->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthConfig\n                        \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ChatModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { PassportModule } from \"@nestjs/passport\";\nimport { AuthConfig } from \"./auth.config\";\nimport { AuthController } from \"./auth.controller\";\nimport { AuthService } from \"./auth.service\";\nimport { JwtStrategy } from \"./strategies/aws.strategy\";\nimport { ChatModule } from \"../chat/chat.module\";\n\n@Module({\n  imports: [PassportModule.register({ defaultStrategy: \"jwt\" }), ChatModule],\n  providers: [AuthConfig, AuthService, JwtStrategy],\n  controllers: [AuthController],\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userPool\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Private\n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                refresh\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, authConfig: AuthConfig, ChatGateway: ChatGateway)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authConfig\n                                                  \n                                                        \n                                                                        AuthConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ChatGateway\n                                                  \n                                                        \n                                                                        ChatGateway\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(dto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(dto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:263\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotPassword(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(dto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        refresh\n                        \n                    \n                \n            \n            \n                \n                    \n                    refresh(rt: string, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(dto: AuthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(dto: AuthDto, verificationCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:219\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                AuthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    verificationCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userPool\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CognitoUserPool\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  ForbiddenException,\n  Injectable,\n  InternalServerErrorException,\n  UnauthorizedException,\n} from \"@nestjs/common\";\nimport * as argon from \"argon2\";\nimport {\n  AuthenticationDetails,\n  CognitoUser,\n  CognitoUserPool,\n  CognitoIdToken,\n  CognitoRefreshToken,\n} from \"amazon-cognito-identity-js\";\nimport { PrismaService } from \"../prisma/prisma.service\";\nimport { AuthConfig } from \"./auth.config\";\nimport { AuthDto } from \"./dto\";\nimport { ChatGateway } from '../chat/chat.gateway';\n\n@Injectable()\nexport class AuthService {\n  private userPool: CognitoUserPool;\n  constructor(private prisma: PrismaService, private authConfig: AuthConfig, private ChatGateway: ChatGateway) {\n    this.userPool = new CognitoUserPool({\n      UserPoolId: this.authConfig.userPoolId,\n      ClientId: this.authConfig.clientId,\n    });\n  }\n\n  async register(dto: AuthDto) {\n    const { email, password } = dto;\n\n    try {\n      const result = await new Promise((resolve, reject) => {\n        this.userPool.signUp(email, password, [], null, (err, _result) => {\n          if (err) {\n            reject(err);\n          }\n          const newUser = new CognitoUser({\n            Username: email,\n            Pool: this.userPool,\n          });\n\n          const authenticationDetails = new AuthenticationDetails({\n            Username: email,\n            Password: password,\n          });\n\n          return newUser.authenticateUser(authenticationDetails, {\n            onSuccess: async (res) => {\n              try {\n                await this.createUser(dto);\n              } catch (e) {\n                reject(e);\n              }\n              resolve({\n                access_token: res.getIdToken().getJwtToken(),\n                refresh_token: res.getRefreshToken().getToken(),\n              });\n            },\n            onFailure: (err) => {\n              reject(err);\n            },\n          });\n        });\n      });\n\n      return result;\n    } catch (e) {\n      console.log(e);\n      throw new ForbiddenException(\"User already exists\");\n    }\n  }\n\n  async login(dto: AuthDto) {\n    const { email, password } = dto;\n\n    const authenticationDetails = new AuthenticationDetails({\n      Username: email,\n      Password: password,\n    });\n\n    const userData = {\n      Username: email,\n      Pool: this.userPool,\n    };\n\n    const newUser = new CognitoUser(userData);\n\n    try {\n      const result = await new Promise((resolve, reject) => {\n        return newUser.authenticateUser(authenticationDetails, {\n          onSuccess: (result) => {\n            resolve({\n              access_token: result.getIdToken().getJwtToken(),\n              refresh_token: result.getRefreshToken().getToken(),\n            });\n          },\n          onFailure: (err) => {\n            reject(err);\n          },\n\n          newPasswordRequired: function (userAttributes, requiredAttributes) {\n            newUser.completeNewPasswordChallenge(\n              authenticationDetails.getPassword(),\n              {},\n              {\n                onSuccess: (result) => {\n                  resolve({\n                    access_token: result.getIdToken().getJwtToken(),\n                    refresh_token: result.getRefreshToken().getToken(),\n                  });\n                },\n                onFailure(err: any): void {\n                  reject(err);\n                },\n              }\n            );\n          },\n        });\n      });\n      return result;\n    } catch (e) {\n      throw new UnauthorizedException(\"Invalid credentials\");\n    }\n  }\n\n  async logout(email: string) {\n    const user = new CognitoUser({\n      Username: email,\n      Pool: this.userPool,\n    });\n\n    user.globalSignOut({\n      onSuccess: () => {},\n      onFailure: (err) => {\n        if (err.message !== \"User is not authenticated\") throw err;\n      },\n    });\n  }\n\n  async delete(dto: AuthDto) {\n    const user = new CognitoUser({\n      Username: dto.email,\n      Pool: this.userPool,\n    });\n\n    const authenticationDetails = new AuthenticationDetails({\n      Username: dto.email,\n      Password: dto.password,\n    });\n\n    return new Promise((resolve, reject) => {\n      user.authenticateUser(authenticationDetails, {\n        onSuccess: (_res) => {\n          user.deleteUser((err, result) => {\n            try {\n              this.deleteUser(dto.email);\n            } catch (e) {}\n            if (err) {\n              reject(err);\n            }\n            try {\n              this.deleteUser(dto.email);\n            } catch (e) {\n              console.log(e);\n            }\n            resolve(result);\n          });\n        },\n        onFailure: (err) => {\n          this.deleteUser(dto.email);\n          reject(err);\n        },\n      });\n    });\n  }\n\n  async refresh(rt: string, email: string) {\n    const user = new CognitoUser({\n      Username: email,\n      Pool: this.userPool,\n    });\n\n    const refreshToken = new CognitoRefreshToken({ RefreshToken: rt });\n\n    return new Promise((resolve, reject) => {\n      user.refreshSession(refreshToken, (_, res) => {\n        if (!res) {\n          reject(new ForbiddenException());\n        }\n        resolve({\n          access_token: res?.getIdToken()?.getJwtToken(),\n          refresh_token: res?.getRefreshToken()?.getToken(),\n        });\n      });\n    });\n  }\n\n  async forgotPassword(email: string) {\n    const user = new CognitoUser({\n      Username: email,\n      Pool: this.userPool,\n    });\n\n    return new Promise((resolve, reject) => {\n      user.forgotPassword({\n        onSuccess: function (data) {\n          // successfully initiated reset password request\n          resolve(data);\n        },\n        onFailure: function (err) {\n          reject(err);\n        },\n      });\n    });\n  }\n\n  async resetPassword(dto: AuthDto, verificationCode: string) {\n    const { email, password } = dto;\n\n    const user = new CognitoUser({\n      Username: email,\n      Pool: this.userPool,\n    });\n\n    return new Promise((resolve, reject) => {\n      user.confirmPassword(verificationCode, password, {\n        onSuccess(res) {\n          resolve(res);\n        },\n        onFailure(err) {\n          reject(err);\n        },\n      });\n    });\n  }\n\n  private async createUser(dto: AuthDto): Promise {\n    const hash = await argon.hash(dto.password);\n\n    const user = await this.prisma.user\n      .create({\n        data: {\n          email: dto.email,\n          password: hash,\n        },\n      })\n      .catch((error) => {\n        throw error;\n      });\n\n    if (!user)\n      throw new InternalServerErrorException();\n\n    await this.prisma.preferences.create({\n      data: {\n        userId: user.id,\n      }\n    })\n  }\n\n  private async deleteUser(email: string): Promise {\n    await this.prisma.user\n      .delete({\n        where: {\n          email,\n        },\n      })\n      .catch((error) => {\n        /* throw error; */\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ChatController.html":{"url":"controllers/ChatController.html","title":"controller - ChatController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ChatController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chat/chat.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                chat\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getAllMessages\n                            \n                            \n                                    \n                                getAllMessagesv2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getAllMessages\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllMessages(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/all')\n                \n            \n\n            \n                \n                    Defined in src/chat/chat.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getAllMessagesv2\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllMessagesv2(email: string, cursor: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/v2/all')\n                \n            \n\n            \n                \n                    Defined in src/chat/chat.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cursor\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Query } from \"@nestjs/common\";\nimport { GetCurrentUserEmail, Public } from \"../common/decorators\";\nimport { ChatService } from \"./chat.service\";\n\n@Controller(\"chat\")\nexport class ChatController {\n  constructor(private chatService: ChatService) {}\n\n  @Get(\"/all\")\n  getAllMessages(@GetCurrentUserEmail() email: string) {\n    return this.chatService.getAll(email);\n  }\n\n  @Get(\"/v2/all\")\n  getAllMessagesv2(@GetCurrentUserEmail() email: string, @Query(\"cursor\") cursor: string) {\n    return this.chatService.getAllv2(email, cursor);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChatGateway.html":{"url":"classes/ChatGateway.html","title":"class - ChatGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChatGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chat/chat.gateway.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleConnection\n                            \n                            \n                                handleDisconnect\n                            \n                            \n                                    \n                                handleMatch\n                            \n                            \n                                    \n                                handleMessage\n                            \n                            \n                                    \n                                handleSeen\n                            \n                            \n                                    \n                                handleWriting\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(chatService: ChatService)\n                    \n                \n                        \n                            \n                                Defined in src/chat/chat.gateway.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                        ChatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chat/chat.gateway.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleConnection\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleConnection(socket: Socket)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/chat.gateway.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDisconnect\n                        \n                    \n                \n            \n            \n                \nhandleDisconnect(socket: Socket)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/chat.gateway.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        handleMatch\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMatch(event: MatchEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent('match')\n                \n            \n\n            \n                \n                    Defined in src/chat/chat.gateway.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                MatchEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        handleMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(client: any, payload: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('message')\n                \n            \n\n            \n                \n                    Defined in src/chat/chat.gateway.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        handleSeen\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleSeen(client: any, payload: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('seen')\n                \n            \n\n            \n                \n                    Defined in src/chat/chat.gateway.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        handleWriting\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleWriting(client: any, payload: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('writing')\n                \n            \n\n            \n                \n                    Defined in src/chat/chat.gateway.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  SubscribeMessage,\n  WebSocketGateway,\n  WebSocketServer,\n} from \"@nestjs/websockets\";\nimport { ChatService } from \"../chat/chat.service\";\nimport { Server, Socket } from \"socket.io\";\nimport { OnEvent } from '@nestjs/event-emitter';\nimport { MatchEvent } from \"../common/events/match.event\";\n\n@WebSocketGateway({ cors: { origin: \"*\" } })\nexport class ChatGateway {\n  @WebSocketServer() server: Server;\n\n  constructor(private chatService: ChatService) { }\n\n  async handleConnection(socket: Socket) {\n    return this.chatService.handleConnection(socket);\n  }\n\n  handleDisconnect(socket: Socket) {\n    return this.chatService.handleDisconnect(socket);\n  }\n\n  // disconnect after match and connect to the new room with sidekick\n  @OnEvent('match')\n  handleMatch(event: MatchEvent): any {\n    console.log(\"match event\");\n    return this.chatService.handleMatch(event, this.server);\n  }\n\n  @SubscribeMessage(\"message\")\n  handleMessage(client: any, payload: any): any {\n    return this.chatService.handleMessage(client, payload);\n  }\n\n  @SubscribeMessage(\"writing\")\n  handleWriting(client: any, payload: any): any {\n    return this.chatService.handleWriting(client, payload);\n  }\n\n  @SubscribeMessage(\"seen\")\n  handleSeen(client: any, payload: any): any {\n    return this.chatService.handleSeen(client, payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChatModule.html":{"url":"modules/ChatModule.html","title":"module - ChatModule","body":"\n                   \n\n\n\n\n    Modules\n    ChatModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ChatModule\n\n\n\ncluster_ChatModule_providers\n\n\n\ncluster_ChatModule_imports\n\n\n\ncluster_ChatModule_exports\n\n\n\n\nUserInfosModule\n\nUserInfosModule\n\n\n\nChatModule\n\nChatModule\n\nChatModule -->\n\nUserInfosModule->ChatModule\n\n\n\n\n\nChatGateway \n\nChatGateway \n\nChatGateway  -->\n\nChatModule->ChatGateway \n\n\n\n\n\nChatService\n\nChatService\n\nChatModule -->\n\nChatService->ChatModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/chat/chat.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ChatService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ChatController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserInfosModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ChatGateway\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { ChatGateway } from './chat.gateway';\nimport { ChatService } from './chat.service';\nimport { ChatController } from './chat.controller';\nimport { UserInfosModule } from '../user_infos/user_infos.module';\n\n@Module({\n  providers: [ChatGateway, ChatService],\n  imports: [UserInfosModule],\n  controllers: [ChatController],\n  exports: [ChatGateway],\n})\nexport class ChatModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatService.html":{"url":"injectables/ChatService.html","title":"injectable - ChatService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChatService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chat/chat.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                rooms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getAllv2\n                            \n                            \n                                    Async\n                                handleConnection\n                            \n                            \n                                handleDisconnect\n                            \n                            \n                                    Async\n                                handleMatch\n                            \n                            \n                                    Async\n                                handleMessage\n                            \n                            \n                                    Async\n                                handleSeen\n                            \n                            \n                                    Async\n                                handleWriting\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userInfosService: UserInfoService, prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/chat/chat.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userInfosService\n                                                  \n                                                        \n                                                                        UserInfoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/chat.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllv2\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllv2(email: string, cursor: string)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/chat.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    cursor\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleConnection\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleConnection(socket: Socket)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/chat.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDisconnect\n                        \n                    \n                \n            \n            \n                \nhandleDisconnect(socket: Socket)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/chat.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleMatch\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMatch(event: MatchEvent, server: Server)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/chat.service.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                MatchEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    server\n                                    \n                                            Server\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(socket: Socket, payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/chat.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleSeen\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleSeen(socket: Socket, payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/chat.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleWriting\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleWriting(socket: Socket, payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/chat.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        rooms\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Rooms()\n                    \n                \n                    \n                        \n                                Defined in src/chat/chat.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { Server, Socket } from \"socket.io\";\nimport { PrismaService } from \"../prisma/prisma.service\";\nimport { UserInfoService } from \"../user_infos/user_infos.service\";\nimport { Rooms } from \"./chat.helper\";\nimport { MatchEvent } from \"../common/events/match.event\";\n\nconst pageSize = 15;\n\n@Injectable()\nexport class ChatService {\n  private rooms = new Rooms();\n\n\n  constructor(\n    private userInfosService: UserInfoService,\n    private prismaService: PrismaService,\n  ) { }\n\n  async handleConnection(socket: Socket) {\n    const userId = socket.handshake.auth.token;\n    if (!userId) {\n      socket.disconnect();\n      return;\n    }\n\n    let user = null;\n    try {\n      user = await this.userInfosService.getUserfromId(userId);\n    } catch (e) {\n      socket.disconnect();\n      return;\n    }\n    const sidekick = user.sidekick_id || \"\";\n\n    let roomName = sidekick === \"\" ? userId : [userId, sidekick].sort().join(\"_\");\n    let room = this.rooms.getRoom(roomName);\n    if (!room) {\n      room = {\n        name: roomName,\n        users: [],\n      };\n      this.rooms.addRoom(room);\n    }\n    this.rooms.addUserToRoom(roomName, {\n      socketId: socket.id,\n      userId: userId,\n      sidekickId: sidekick,\n    });\n\n    console.log(\"connect \", socket.id, userId, sidekick, roomName);\n    socket.join(roomName);\n\n    /* socket.emit(\"message\", \"You are connected to the room \" + roomName); */\n  }\n\n  handleDisconnect(socket: Socket) {\n    const user = this.rooms.findUserBySocketId(socket.id);\n    // socket.handshake.auth.token also works to get the user id\n\n    console.log(\"disconnect \", socket.id, user?.userId);\n    if (!user) {\n      return;\n    }\n\n    this.rooms.removeUserFromRoom(user.userId, socket.id);\n\n    if (this.rooms.getRoom(user.userId)?.users.length === 0) {\n      this.rooms.removeRoom(user.userId);\n    }\n  }\n\n  async handleMessage(socket: Socket, payload: any) {\n    socket.broadcast.emit(\"message\", payload);\n\n    // save message to db\n    const user = this.rooms.findUserBySocketId(socket.id);\n    console.log(this.rooms, this.rooms.getRoomUsers(user.userId))\n\n    if (!user) return;\n\n    await this.prismaService.message.create({\n      data: {\n        from_id: user.userId,\n        to: user.sidekickId,\n        content: payload,\n      },\n    });\n\n    /* socket.emit(\"message\", \"You sent : \" + payload); */\n  }\n\n  async handleWriting(socket: Socket, payload: any) {\n    socket.broadcast.emit(\"writing\", payload);\n\n    /* socket.emit(\"writing\", \"Received writing event\"); */\n  }\n\n  async handleSeen(socket: Socket, payload: any) {\n    socket.broadcast.emit(\"seen\", {});\n\n    const user = this.rooms.findUserBySocketId(socket.id);\n\n    if (!user) return;\n\n    await this.prismaService.message.updateMany({\n      where: {\n        from_id: user.sidekickId,\n        seen: false,\n      },\n      data: {\n        seen: true,\n      },\n    });\n    /* socket.emit(\"seen\", \"Received seen event\"); */\n  }\n\n  async getAll(email: string) {\n    const user = await this.prismaService.user.findUnique({\n      where: {\n        email: email,\n      },\n    });\n    const fullUser = await this.userInfosService.find(email);\n\n    return await this.prismaService.message.findMany({\n      where: {\n        OR: [\n          {\n            from_id: user.id,\n            to: fullUser.sidekick_id,\n          },\n          {\n            from_id: fullUser.sidekick_id,\n            to: user.id,\n          },\n        ],\n      },\n    });\n  }\n\n  async getAllv2(email: string, cursor: string) {\n    const user = await this.prismaService.user.findUnique({\n      where: {\n        email: email,\n      },\n    });\n    const fullUser = await this.userInfosService.find(email);\n\n    return await this.prismaService.message.findMany({\n      take: pageSize,\n      skip: cursor ? 1 : 0,\n      cursor: cursor ? { id: cursor } : undefined,\n      where: {\n        OR: [\n          {\n            from_id: user.id,\n            to: fullUser.sidekick_id,\n          },\n          {\n            from_id: fullUser.sidekick_id,\n            to: user.id,\n          },\n        ],\n      },\n      orderBy: {\n        createdAt: \"desc\",\n      }\n    });\n  }\n\n  async handleMatch(event: MatchEvent, server: Server) {\n    const room1 = this.rooms.getRoom(event.id1);\n    const room2 = this.rooms.getRoom(event.id2);\n\n    console.log(room1, room2, event.id1, event.id2)\n    if (!room1 && !room2) {\n      console.log(\"room not found\")\n      return;\n    }\n    console.log(\"match event\", room1, room2)\n    const socket1 = server.sockets.sockets.get(room1?.users[0]?.socketId);\n    console.log(socket1)\n    const socket2 = server.sockets.sockets.get(room2?.users[0]?.socketId);\n    console.log(socket2)\n    socket1?.emit(\"match\", true);\n    socket2?.emit(\"match\", true);\n\n    // remove both rooms\n    this.rooms.removeRoom(event.id1);\n    this.rooms.removeRoom(event.id2);\n\n    // create new room\n    const roomName = [event.id1, event.id2].sort().join(\"_\");\n    socket1?.join(roomName);\n    socket2?.join(roomName);\n\n    this.rooms.addUserToRoom(roomName, {\n      socketId: socket1?.id || \"\",\n      userId: event.id1,\n      sidekickId: event.id2,\n    });\n\n    this.rooms.addUserToRoom(roomName, {\n      socketId: socket2?.id || \"\",\n      userId: event.id2,\n      sidekickId: event.id1,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateExercisesLibraryDto.html":{"url":"classes/CreateExercisesLibraryDto.html","title":"class - CreateExercisesLibraryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateExercisesLibraryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exercises_library/dto/create-exercises_library.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                met\n                            \n                            \n                                    \n                                    \n                                muscleGroup\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                thumbnail\n                            \n                            \n                                    \n                                    \n                                video\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exercises_library/dto/create-exercises_library.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        met\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exercises_library/dto/create-exercises_library.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        muscleGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MuscleGroup\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exercises_library/dto/create-exercises_library.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exercises_library/dto/create-exercises_library.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exercises_library/dto/create-exercises_library.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        video\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exercises_library/dto/create-exercises_library.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { MuscleGroup } from \"@prisma/client\";\nimport { IsInt, IsNotEmpty, IsNumber, IsOptional, IsString } from \"class-validator\";\n\nexport class CreateExercisesLibraryDto {\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n\n  @IsNotEmpty()\n  @IsString()\n  video: string;\n\n  @IsOptional()\n  thumbnail: string;\n\n  @IsNotEmpty()\n  @IsString()\n  muscleGroup: MuscleGroup;\n\n  @IsNotEmpty()\n  @IsInt()\n  met: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFeedbackUserDto.html":{"url":"classes/CreateFeedbackUserDto.html","title":"class - CreateFeedbackUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFeedbackUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feedback_user/dto/create-feedback_user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                comment\n                            \n                            \n                                id\n                            \n                            \n                                    \n                                rating\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/feedback_user/dto/create-feedback_user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/feedback_user/dto/create-feedback_user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        rating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/feedback_user/dto/create-feedback_user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/feedback_user/dto/create-feedback_user.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsString } from \"class-validator\";\n\nexport class CreateFeedbackUserDto {\n  userId: string;\n  id: number;\n\n  @IsNumber()\n  rating: number;\n\n  @IsNotEmpty()\n  @IsString()\n  comment: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOpenffDto.html":{"url":"classes/CreateOpenffDto.html","title":"class - CreateOpenffDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOpenffDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openff/dto/create-openff.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateOpenffDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTicketDto.html":{"url":"classes/CreateTicketDto.html","title":"class - CreateTicketDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTicketDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tickets/dto/create-ticket.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                content\n                            \n                            \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/dto/create-ticket.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/dto/create-ticket.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from \"class-validator\";\n\nexport class CreateTicketDto {\n  @IsString()\n  content: string;\n\n  @IsString()\n  title: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditInfosDto.html":{"url":"classes/EditInfosDto.html","title":"class - EditInfosDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditInfosDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user_admin/dto/user_admin.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                activities\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                firstname\n                            \n                            \n                                    \n                                    Optional\n                                gender\n                            \n                            \n                                    \n                                    Optional\n                                goal\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                goal_weight\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lastname\n                            \n                            \n                                    \n                                    Optional\n                                level\n                            \n                            \n                                    \n                                    \n                                location\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                size\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        activities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Activities[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_admin/dto/user_admin.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_admin/dto/user_admin.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_admin/dto/user_admin.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Gender\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_admin/dto/user_admin.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        goal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Goal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_admin/dto/user_admin.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        goal_weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_admin/dto/user_admin.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_admin/dto/user_admin.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Level\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_admin/dto/user_admin.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_admin/dto/user_admin.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_admin/dto/user_admin.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_admin/dto/user_admin.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsString } from \"class-validator\";\nimport { Gender, Goal, Level, Activities } from \"@prisma/client\";\nimport { IsInt, IsOptional} from \"class-validator\";\n\nexport class GetUserAdminDto {\n  @IsOptional()\n  @IsString()\n  email: string;\n\n  @IsOptional()\n  @IsBoolean()\n  hasSidekick: boolean;\n}\n\nexport class EditInfosDto {\n  @IsOptional()\n  @IsString()\n  firstname?: string;\n\n  @IsOptional()\n  @IsString()\n  lastname?: string;\n\n  @IsOptional()\n  @IsString()\n  description?: string;\n\n  @IsOptional()\n  @IsInt()\n  size?: number;\n\n  @IsOptional()\n  @IsString()\n  location: string;\n\n  @IsOptional()\n  @IsInt()\n  weight?: number;\n\n  @IsOptional()\n  @IsInt()\n  goal_weight?: number;\n\n  @IsOptional()\n  gender?: Gender;\n\n  @IsOptional()\n  level?: Level;\n\n  @IsOptional()\n  activities?: Activities[];\n\n  @IsOptional()\n  goal?: Goal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditInfosDto-1.html":{"url":"classes/EditInfosDto-1.html","title":"class - EditInfosDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditInfosDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user_infos/dto/edit.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                activities\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                firstname\n                            \n                            \n                                    \n                                    Optional\n                                gender\n                            \n                            \n                                    \n                                    Optional\n                                goal\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                goal_weight\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lastname\n                            \n                            \n                                    \n                                    Optional\n                                level\n                            \n                            \n                                    \n                                    \n                                location\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                size\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        activities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Activities[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_infos/dto/edit.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_infos/dto/edit.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_infos/dto/edit.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Gender\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_infos/dto/edit.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        goal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Goal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_infos/dto/edit.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        goal_weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_infos/dto/edit.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_infos/dto/edit.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Level\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_infos/dto/edit.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_infos/dto/edit.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_infos/dto/edit.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_infos/dto/edit.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Gender, Goal, Level, Activities } from \"@prisma/client\";\nimport { IsInt, IsOptional, IsString } from \"class-validator\";\n\nexport class EditInfosDto {\n  @IsOptional()\n  @IsString()\n  firstname?: string;\n\n  @IsOptional()\n  @IsString()\n  lastname?: string;\n\n  @IsOptional()\n  @IsString()\n  description?: string;\n\n  @IsOptional()\n  @IsInt()\n  size?: number;\n\n  @IsOptional()\n  @IsString()\n  location: string;\n\n  @IsOptional()\n  @IsInt()\n  weight?: number;\n\n  @IsOptional()\n  @IsInt()\n  goal_weight?: number;\n\n  @IsOptional()\n  gender?: Gender;\n\n  @IsOptional()\n  level?: Level;\n\n  @IsOptional()\n  activities?: Activities[];\n\n  @IsOptional()\n  goal?: Goal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ExercisesLibraryController.html":{"url":"controllers/ExercisesLibraryController.html","title":"controller - ExercisesLibraryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ExercisesLibraryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exercises_library/exercises_library.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                exercises-library\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findByMuscle\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createExercisesLibraryDto: CreateExercisesLibraryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post()\n                \n            \n\n            \n                \n                    Defined in src/exercises_library/exercises_library.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createExercisesLibraryDto\n                                    \n                                                CreateExercisesLibraryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/exercises_library/exercises_library.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findByMuscle\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByMuscle(muscle: MuscleGroup)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('muscle')\n                \n            \n\n            \n                \n                    Defined in src/exercises_library/exercises_library.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    muscle\n                                    \n                                            MuscleGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/exercises_library/exercises_library.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/exercises_library/exercises_library.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateExercisesLibraryDto: UpdateExercisesLibraryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/exercises_library/exercises_library.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateExercisesLibraryDto\n                                    \n                                                UpdateExercisesLibraryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { ExercisesLibraryService } from './exercises_library.service';\nimport { CreateExercisesLibraryDto } from './dto/create-exercises_library.dto';\nimport { UpdateExercisesLibraryDto } from './dto/update-exercises_library.dto';\nimport { Public } from 'src/common/decorators';\nimport { MuscleGroup } from '@prisma/client';\n\n@Controller('exercises-library')\nexport class ExercisesLibraryController {\n  constructor(private readonly exercisesLibraryService: ExercisesLibraryService) {}\n\n  @Public()\n  @Post()\n  create(@Body() createExercisesLibraryDto: CreateExercisesLibraryDto) {\n    return this.exercisesLibraryService.create(createExercisesLibraryDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.exercisesLibraryService.findAll();\n  }\n\n  @Get('muscle')\n  findByMuscle(@Query('muscle') muscle: MuscleGroup) {\n    return this.exercisesLibraryService.findByMuscle(muscle)\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.exercisesLibraryService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateExercisesLibraryDto: UpdateExercisesLibraryDto) {\n    return this.exercisesLibraryService.update(+id, updateExercisesLibraryDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.exercisesLibraryService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExercisesLibraryModule.html":{"url":"modules/ExercisesLibraryModule.html","title":"module - ExercisesLibraryModule","body":"\n                   \n\n\n\n\n    Modules\n    ExercisesLibraryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExercisesLibraryModule\n\n\n\ncluster_ExercisesLibraryModule_providers\n\n\n\n\nExercisesLibraryService\n\nExercisesLibraryService\n\n\n\nExercisesLibraryModule\n\nExercisesLibraryModule\n\nExercisesLibraryModule -->\n\nExercisesLibraryService->ExercisesLibraryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/exercises_library/exercises_library.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ExercisesLibraryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ExercisesLibraryController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ExercisesLibraryService } from './exercises_library.service';\nimport { ExercisesLibraryController } from './exercises_library.controller';\n\n@Module({\n  controllers: [ExercisesLibraryController],\n  providers: [ExercisesLibraryService]\n})\nexport class ExercisesLibraryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExercisesLibraryService.html":{"url":"injectables/ExercisesLibraryService.html","title":"injectable - ExercisesLibraryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExercisesLibraryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exercises_library/exercises_library.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByMuscle\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/exercises_library/exercises_library.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createExercisesLibraryDto: CreateExercisesLibraryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/exercises_library/exercises_library.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createExercisesLibraryDto\n                                    \n                                                CreateExercisesLibraryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/exercises_library/exercises_library.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByMuscle\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByMuscle(muscle: MuscleGroup)\n                \n            \n\n\n            \n                \n                    Defined in src/exercises_library/exercises_library.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    muscle\n                                    \n                                            MuscleGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/exercises_library/exercises_library.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/exercises_library/exercises_library.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateExercisesLibraryDto: UpdateExercisesLibraryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/exercises_library/exercises_library.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateExercisesLibraryDto\n                                    \n                                                UpdateExercisesLibraryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateExercisesLibraryDto } from './dto/create-exercises_library.dto';\nimport { UpdateExercisesLibraryDto } from './dto/update-exercises_library.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { MuscleGroup } from '@prisma/client';\n\n@Injectable()\nexport class ExercisesLibraryService {\n  constructor(private prisma: PrismaService) { }\n\n  async create(createExercisesLibraryDto: CreateExercisesLibraryDto) {\n    const { name, description, video, thumbnail, muscleGroup, met } = createExercisesLibraryDto;\n\n    const exercisesLibrary = await this.prisma.exercises_Library.create({\n      data: {\n        name,\n        description,\n        video,\n        thumbnail,\n        muscle_group: muscleGroup,\n        met: met,\n      },\n    });\n\n    return exercisesLibrary;\n  }\n\n  async findAll() {\n    const exercisesLibrary = await this.prisma.exercises_Library.findMany();\n\n    return exercisesLibrary;\n  }\n\n  async findByMuscle(muscle: MuscleGroup) {\n    const exercisesLibrary = await this.prisma.exercises_Library.findMany({\n      where: {\n        muscle_group: muscle,\n      }\n    });\n\n    return exercisesLibrary;\n  }\n\n  public async findOne(id: number) {\n    const exercisesLibrary = await this.prisma.exercises_Library.findUnique({\n      where: {\n        id,\n      },\n    });\n\n    return exercisesLibrary;\n  }\n\n  async update(id: number, updateExercisesLibraryDto: UpdateExercisesLibraryDto) {\n    const { name, description, video, thumbnail, muscleGroup, met } = updateExercisesLibraryDto;\n\n    const exercisesLibrary = await this.prisma.exercises_Library.update({\n      where: {\n        id,\n      },\n      data: {\n        name,\n        description,\n        video,\n        thumbnail,\n        muscle_group: muscleGroup,\n        met: met\n      },\n    });\n\n    return exercisesLibrary;\n  }\n\n  async remove(id: number) {\n    const exercisesLibrary = await this.prisma.exercises_Library.delete({\n      where: {\n        id,\n      },\n    });\n\n    return exercisesLibrary;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FeedbackUserController.html":{"url":"controllers/FeedbackUserController.html","title":"controller - FeedbackUserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FeedbackUserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feedback_user/feedback_user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                feedback-user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addFeedback\n                            \n                            \n                                    \n                                    \n                                getAll\n                            \n                            \n                                    \n                                getById\n                            \n                            \n                                    \n                                modifyFeedback\n                            \n                            \n                                    \n                                removeFeedback\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        addFeedback\n                        \n                    \n                \n            \n            \n                \n                    \n                    addFeedback(req: any, dto: CreateFeedbackUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')\n                \n            \n\n            \n                \n                    Defined in src/feedback_user/feedback_user.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateFeedbackUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('/')\n                \n            \n\n            \n                \n                    Defined in src/feedback_user/feedback_user.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/feedback_user/feedback_user.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        modifyFeedback\n                        \n                    \n                \n            \n            \n                \n                    \n                    modifyFeedback(id: string, dto: UpdateFeedbackUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')\n                \n            \n\n            \n                \n                    Defined in src/feedback_user/feedback_user.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateFeedbackUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        removeFeedback\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeFeedback(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/feedback_user/feedback_user.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Request, Put, Query } from \"@nestjs/common\";\nimport { FeedbackUserService } from './feedback_user.service';\nimport { CreateFeedbackUserDto } from './dto/create-feedback_user.dto';\nimport { UpdateFeedbackUserDto } from './dto/update-feedback_user.dto';\nimport { Public } from \"../common/decorators\";\n\n@Controller('feedback-user')\nexport class FeedbackUserController {\n  constructor(private readonly feedbackUserService: FeedbackUserService) {}\n\n  @Post(\"/\")\n  addFeedback(@Request() req: any, @Body() dto: CreateFeedbackUserDto) {\n    return this.feedbackUserService.add(dto, req.user.email);\n  }\n\n  @Put(\"/:id\")\n  modifyFeedback(@Param('id') id: string, @Body() dto: UpdateFeedbackUserDto) {\n    return this.feedbackUserService.update(dto, id);\n  }\n\n  @Delete(\"/:id\")\n  removeFeedback(@Param('id') id: string) {\n    return this.feedbackUserService.delete(id);\n  }\n\n  @Public()\n  @Get(\"/\")\n  getAll() {\n    return this.feedbackUserService.getAll();\n  }\n\n  @Get(\"/:id\")\n  getById(@Param('id') id: string) {\n    return this.feedbackUserService.getById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeedbackUserModule.html":{"url":"modules/FeedbackUserModule.html","title":"module - FeedbackUserModule","body":"\n                   \n\n\n\n\n    Modules\n    FeedbackUserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeedbackUserModule\n\n\n\ncluster_FeedbackUserModule_providers\n\n\n\n\nFeedbackUserService\n\nFeedbackUserService\n\n\n\nFeedbackUserModule\n\nFeedbackUserModule\n\nFeedbackUserModule -->\n\nFeedbackUserService->FeedbackUserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/feedback_user/feedback_user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeedbackUserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FeedbackUserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeedbackUserService } from './feedback_user.service';\nimport { FeedbackUserController } from './feedback_user.controller';\n\n@Module({\n  controllers: [FeedbackUserController],\n  providers: [FeedbackUserService]\n})\nexport class FeedbackUserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeedbackUserService.html":{"url":"injectables/FeedbackUserService.html","title":"injectable - FeedbackUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FeedbackUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feedback_user/feedback_user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                add\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/feedback_user/feedback_user.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        add\n                        \n                    \n                \n            \n            \n                \n                    \n                    add(feedback: CreateFeedbackUserDto, userEmail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/feedback_user/feedback_user.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    feedback\n                                    \n                                                CreateFeedbackUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/feedback_user/feedback_user.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/feedback_user/feedback_user.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/feedback_user/feedback_user.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(feedback: UpdateFeedbackUserDto, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/feedback_user/feedback_user.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    feedback\n                                    \n                                                UpdateFeedbackUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from \"../prisma/prisma.service\";\nimport UserNotFoundException from \"../user_infos/exceptions/not-found.exception\";\nimport { CreateFeedbackUserDto } from \"./dto/create-feedback_user.dto\";\nimport { UpdateFeedbackUserDto } from \"./dto/update-feedback_user.dto\";\n\n@Injectable()\nexport class FeedbackUserService {\n  constructor(\n    private _prismaService: PrismaService,\n  ) {}\n\n  async getAll() {\n    return await this._prismaService.feedBackUser.findMany();\n  }\n\n  async getById(id: string) {\n    return await this._prismaService.feedBackUser.findUnique({\n      where: {\n        id: Number(id)\n      }\n    });\n  }\n\n  async add(feedback: CreateFeedbackUserDto, userEmail: string) {\n    var newDatas = feedback;\n\n    //Get User with email\n    const user = await this._prismaService.user.findUnique({\n      where: {\n        email: userEmail\n      }\n    });\n    if (!user) {\n      throw new UserNotFoundException(userEmail);\n    }\n\n    newDatas['userId'] = user.id\n\n    return this._prismaService.feedBackUser.create({\n      data: newDatas\n    });\n  }\n\n  async update(feedback: UpdateFeedbackUserDto, id: string) {\n    //Update the meal that we need to modify\n    return this._prismaService.feedBackUser.update({\n      data: feedback,\n      where: {\n        id: Number(id)\n      }\n    })\n  }\n\n  async delete(id: string) {\n    return await this._prismaService.feedBackUser.delete({\n      where: {\n        id: Number(id)\n      }\n    });\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FileController.html":{"url":"controllers/FileController.html","title":"controller - FileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/file/file.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                file\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('upload')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/file/file.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, ParseFilePipe, Post, UploadedFile, UseInterceptors } from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { Public } from '../common/decorators';\nimport { FileService } from './file.service';\n\n@Controller('file')\nexport class FileController {\n  constructor(private readonly fileService: FileService) {\n    this.fileService = fileService;\n  }\n\n  @Public()\n  @Post('upload')\n  @UseInterceptors(FileInterceptor('file'))\n  async uploadFile(@UploadedFile(new ParseFilePipe({\n    validators: [\n    ]\n  })) file: Express.Multer.File) {\n    return this.fileService.uploadPublicFile(file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileModule.html":{"url":"modules/FileModule.html","title":"module - FileModule","body":"\n                   \n\n\n\n\n    Modules\n    FileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FileModule\n\n\n\ncluster_FileModule_exports\n\n\n\ncluster_FileModule_providers\n\n\n\n\nFileService \n\nFileService \n\n\n\nFileModule\n\nFileModule\n\nFileService  -->\n\nFileModule->FileService \n\n\n\n\n\nFileService\n\nFileService\n\nFileModule -->\n\nFileService->FileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/file/file.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FileService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FileController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FileService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FileService } from './file.service';\nimport { FileController } from './file.controller';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  controllers: [FileController],\n  providers: [FileService],\n  exports: [FileService],\n  imports: [ConfigModule]\n})\nexport class FileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/file/file.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                S3\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                uploadPublicFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/file/file.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadPublicFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadPublicFile(file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/file/file.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        S3\n                        \n                    \n                \n            \n                \n                    \n                        Type :     S3\n\n                    \n                \n                    \n                        \n                                Defined in src/file/file.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { S3 } from \"@aws-sdk/client-s3\";\nimport { v4 as uuid } from \"uuid\";\nimport { ConfigService } from \"@nestjs/config\";\n\n@Injectable()\nexport class FileService {\n  private S3: S3;\n\n  constructor(private configService: ConfigService) {\n    this.S3 = new S3({\n      region: this.configService.get(\"AWS_REGION\"),\n      credentials: {\n        accessKeyId: this.configService.get(\"AWS_ACCESS_KEY_ID\"),\n        secretAccessKey: this.configService.get(\"AWS_SECRET_ACCESS_KEY\"),\n      },\n    });\n  }\n\n  async uploadPublicFile(file: Express.Multer.File) {\n    try {\n      const key = `${uuid()}.${file.originalname.split(\".\").pop()}`;\n      await this.S3.putObject({\n        Bucket: this.configService.get(\"AWS_BUCKET_NAME\"),\n        Key: key,\n        Body: file.buffer,\n        ContentType: file.mimetype,\n        ACL: \"public-read\",\n      });\n      return `https://${this.configService.get(\"AWS_BUCKET_NAME\")}.s3.${this.configService.get(\"AWS_REGION\")}.amazonaws.com/${key}`;\n    } catch (err) {\n      console.log(err);\n      return null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserAdminDto.html":{"url":"classes/GetUserAdminDto.html","title":"class - GetUserAdminDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserAdminDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user_admin/dto/user_admin.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                hasSidekick\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_admin/dto/user_admin.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        hasSidekick\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_admin/dto/user_admin.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsString } from \"class-validator\";\nimport { Gender, Goal, Level, Activities } from \"@prisma/client\";\nimport { IsInt, IsOptional} from \"class-validator\";\n\nexport class GetUserAdminDto {\n  @IsOptional()\n  @IsString()\n  email: string;\n\n  @IsOptional()\n  @IsBoolean()\n  hasSidekick: boolean;\n}\n\nexport class EditInfosDto {\n  @IsOptional()\n  @IsString()\n  firstname?: string;\n\n  @IsOptional()\n  @IsString()\n  lastname?: string;\n\n  @IsOptional()\n  @IsString()\n  description?: string;\n\n  @IsOptional()\n  @IsInt()\n  size?: number;\n\n  @IsOptional()\n  @IsString()\n  location: string;\n\n  @IsOptional()\n  @IsInt()\n  weight?: number;\n\n  @IsOptional()\n  @IsInt()\n  goal_weight?: number;\n\n  @IsOptional()\n  gender?: Gender;\n\n  @IsOptional()\n  level?: Level;\n\n  @IsOptional()\n  activities?: Activities[];\n\n  @IsOptional()\n  goal?: Goal;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/aws.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, authConfig: AuthConfig)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/aws.strategy.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authConfig\n                                                  \n                                                        \n                                                                        AuthConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/aws.strategy.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from \"passport-jwt\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { Injectable } from \"@nestjs/common\";\nimport { AuthService } from \"../auth.service\";\nimport { passportJwtSecret } from \"jwks-rsa\";\nimport { AuthConfig } from \"../auth.config\";\n\ninterface ValidatedUser {\n  userId: any;\n  email: any;\n  isAdmin?: boolean;\n}\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, \"jwt\") {\n  constructor(\n    private readonly authService: AuthService,\n    private authConfig: AuthConfig\n  ) {\n    super({\n      secretOrKeyProvider: passportJwtSecret({\n        cache: true,\n        rateLimit: true,\n        jwksRequestsPerMinute: 5,\n        jwksUri: `${authConfig.authority}/.well-known/jwks.json`,\n      }),\n\n      audience: authConfig.clientId,\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      issuer: authConfig.authority,\n      algorithms: [\"RS256\"],\n    });\n  }\n\n  public async validate(payload: any): Promise {\n    const user: ValidatedUser = { userId: payload.sub, email: payload.email };\n    if (payload['cognito:groups'] && payload['cognito:groups'].includes('admin')) {\n      console.log('user is admin')\n      user.isAdmin = true;\n    } else {\n      console.log('not admin')\n      user.isAdmin = false;\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MatchEvent.html":{"url":"classes/MatchEvent.html","title":"class - MatchEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MatchEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/events/match.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id1\n                            \n                            \n                                id2\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/common/events/match.event.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/common/events/match.event.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MatchEvent {\n  id1: string;\n  id2: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MealRecoController.html":{"url":"controllers/MealRecoController.html","title":"controller - MealRecoController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MealRecoController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/meal_reco/meal_reco.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                meal-reco\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                mealReco\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        mealReco\n                        \n                    \n                \n            \n            \n                \n                    \n                    mealReco(body: MealRecoDto, email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Throttle(1, 60)\n                \n            \n\n            \n                \n                    Defined in src/meal_reco/meal_reco.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                MealRecoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post } from '@nestjs/common';\nimport { MealRecoService } from './meal_reco.service';\nimport { GetCurrentUserEmail, Public } from 'src/common/decorators';\nimport { Throttle } from '@nestjs/throttler';\nimport { MealRecoDto } from './dto/meal_reco.dto';\n\n@Controller('meal-reco')\nexport class MealRecoController {\n  constructor(private readonly mealRecoService: MealRecoService) { }\n\n  @Post()\n  @Throttle(1, 60)\n  mealReco(@Body() body: MealRecoDto, @GetCurrentUserEmail() email: string) {\n    return this.mealRecoService.mealReco(body.user_needs, body.goal, email);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MealRecoDto.html":{"url":"classes/MealRecoDto.html","title":"class - MealRecoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MealRecoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/meal_reco/dto/meal_reco.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                goal\n                            \n                            \n                                    \n                                    \n                                user_needs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        goal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meal_reco/dto/meal_reco.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        user_needs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/meal_reco/dto/meal_reco.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class MealRecoDto {\n  @IsNotEmpty()\n  @IsString()\n  user_needs: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsOptional()\n  goal: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MealRecoModule.html":{"url":"modules/MealRecoModule.html","title":"module - MealRecoModule","body":"\n                   \n\n\n\n\n    Modules\n    MealRecoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MealRecoModule\n\n\n\ncluster_MealRecoModule_providers\n\n\n\ncluster_MealRecoModule_imports\n\n\n\n\nUserInfosModule\n\nUserInfosModule\n\n\n\nMealRecoModule\n\nMealRecoModule\n\nMealRecoModule -->\n\nUserInfosModule->MealRecoModule\n\n\n\n\n\nMealRecoService\n\nMealRecoService\n\nMealRecoModule -->\n\nMealRecoService->MealRecoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/meal_reco/meal_reco.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MealRecoService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MealRecoController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserInfosModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MealRecoService } from './meal_reco.service';\nimport { MealRecoController } from './meal_reco.controller';\nimport { UserInfosModule } from '../user_infos/user_infos.module';\n\n@Module({\n  imports: [UserInfosModule],\n  controllers: [MealRecoController],\n  providers: [MealRecoService]\n})\nexport class MealRecoModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MealRecoService.html":{"url":"injectables/MealRecoService.html","title":"injectable - MealRecoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MealRecoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/meal_reco/meal_reco.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                mealReco\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, userInfosService: UserInfoService)\n                    \n                \n                        \n                            \n                                Defined in src/meal_reco/meal_reco.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userInfosService\n                                                  \n                                                        \n                                                                        UserInfoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mealReco\n                        \n                    \n                \n            \n            \n                \n                    \n                    mealReco(user_needs: string, goal: string, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/meal_reco/meal_reco.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user_needs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    goal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OpenAIApi\n\n                    \n                \n                    \n                        \n                                Defined in src/meal_reco/meal_reco.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ConfigService } from '@nestjs/config';\nimport { Injectable } from '@nestjs/common';\nimport { Configuration, OpenAIApi } from 'openai';\nimport { UserInfoService } from '../user_infos/user_infos.service';\n\n@Injectable()\nexport class MealRecoService {\n  private readonly client: OpenAIApi;\n\n  constructor(private configService: ConfigService, private userInfosService: UserInfoService) {\n    const configuration = new Configuration({\n      apiKey: configService.get('OPENAI_API_KEY'),\n    });\n\n    this.client = new OpenAIApi(configuration);\n  }\n\n  async mealReco(user_needs: string, goal: string, email: string): Promise {\n    const user = await this.userInfosService.find(email).catch(() => { });\n\n    goal = user ? user.goal : goal;\n    if (!goal) throw new Error(\"Goal is required\");\n\n    const formatted_goal = goal == \"WEIGHT_GAIN\" ? \"gain weight\" : \"lose weight or get back in shape\"\n\n    try {\n      let prompt = [];\n      prompt = [{\n        role: \"user\", content: `Act as a nutritionist, and be concise. \n      Your client needs wants a meal recommendation, and here is his request: ${user_needs}\\n\n      His goal is to : ${formatted_goal}\\n\n      Meal recommendation:`\n      }];\n\n      prompt.push({ role: \"assistant\", content: \"\" })\n      const res = await this.client.createChatCompletion(\n        {\n          model: 'gpt-3.5-turbo',\n          messages: prompt,\n          temperature: 0.2,\n          max_tokens: 300,\n        }\n      );\n      return res.data.choices[0].message.content;\n    } catch (e) {\n      return \"Sorry, I didn't understand your request.\"\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModeratorAnswerDto.html":{"url":"classes/ModeratorAnswerDto.html","title":"class - ModeratorAnswerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModeratorAnswerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tickets/dto/moderator-answer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                answer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/dto/moderator-answer.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsString } from \"class-validator\";\n\nexport class ModeratorAnswerDto {\n  @IsString()\n  answer: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NutritionController.html":{"url":"controllers/NutritionController.html","title":"controller - NutritionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NutritionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/nutrition/nutrition.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                nutrition\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addMeal\n                            \n                            \n                                    \n                                getAllNutrition\n                            \n                            \n                                    \n                                getMeal\n                            \n                            \n                                    \n                                getNutritionForOneDay\n                            \n                            \n                                    \n                                modifyMeal\n                            \n                            \n                                    \n                                removeMeal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        addMeal\n                        \n                    \n                \n            \n            \n                \n                    \n                    addMeal(req: any, dto: NutritionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')\n                \n            \n\n            \n                \n                    Defined in src/nutrition/nutrition.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                NutritionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getAllNutrition\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllNutrition(req: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('findAll')\n                \n            \n\n            \n                \n                    Defined in src/nutrition/nutrition.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getMeal\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMeal(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/nutrition/nutrition.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getNutritionForOneDay\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNutritionForOneDay(req: any, day: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('findByDay')\n                \n            \n\n            \n                \n                    Defined in src/nutrition/nutrition.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    day\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        modifyMeal\n                        \n                    \n                \n            \n            \n                \n                    \n                    modifyMeal(id: string, dto: UpdateNutritionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')\n                \n            \n\n            \n                \n                    Defined in src/nutrition/nutrition.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateNutritionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        removeMeal\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeMeal(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/nutrition/nutrition.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { NutritionDto } from './dto/nutrition.dto';\nimport { UpdateNutritionDto } from './dto/update.dto';\nimport { Body, Controller, Get, Delete, Put, Post, Request, Query, Param } from '@nestjs/common';\nimport { NutritionService } from './nutrition.service';\n\n@Controller('nutrition')\nexport class NutritionController {\n  constructor(private nutritionService: NutritionService) { }\n\n  @Post(\"/\")\n  addMeal(@Request() req: any, @Body() dto: NutritionDto) {\n    return this.nutritionService.add(dto, req.user.email);\n  }\n\n  @Get(\"findAll\")\n  getAllNutrition(@Request() req: any) {\n    return this.nutritionService.findAll(req.user.email);\n  }\n\n  @Get(\"findByDay\")\n  getNutritionForOneDay(@Request() req: any, @Query('day') day: string) {\n    return this.nutritionService.findByDay(req.user.email, day);\n  }\n\n  @Get(\"/:id\")\n  getMeal(@Param('id') id: string) {\n    return this.nutritionService.findOne(Number(id));\n  }\n\n  @Put(\"/:id\")\n  modifyMeal(@Param('id') id: string, @Body() dto: UpdateNutritionDto) {\n    return this.nutritionService.update(dto, Number(id));\n  }\n\n  @Delete(\"/:id\")\n  removeMeal(@Param('id') id: string) {\n    return this.nutritionService.delete(Number(id));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NutritionDto.html":{"url":"classes/NutritionDto.html","title":"class - NutritionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NutritionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/nutrition/dto/nutrition.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                calories\n                            \n                            \n                                    \n                                    \n                                carbs\n                            \n                            \n                                    \n                                    \n                                date\n                            \n                            \n                                    \n                                    \n                                fat\n                            \n                            \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                period\n                            \n                            \n                                    \n                                    \n                                picture\n                            \n                            \n                                    \n                                    \n                                protein\n                            \n                            \n                                userId\n                            \n                            \n                                    \n                                    \n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        calories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/nutrition/dto/nutrition.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        carbs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/nutrition/dto/nutrition.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/nutrition/dto/nutrition.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        fat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/nutrition/dto/nutrition.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/nutrition/dto/nutrition.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/nutrition/dto/nutrition.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        period\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Period\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/nutrition/dto/nutrition.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        picture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/nutrition/dto/nutrition.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        protein\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/nutrition/dto/nutrition.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/nutrition/dto/nutrition.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/nutrition/dto/nutrition.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Period } from '@prisma/client';\nimport { IsInt, IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class NutritionDto {\n    userId: string;\n    id: number;\n\n    @IsNotEmpty()\n    @IsString()\n    period: Period;\n\n    @IsNotEmpty()\n    @IsString()\n    name: string;\n\n    @IsOptional()\n    @IsString()\n    picture: string;\n\n    @IsNotEmpty()\n    @IsString()\n    date: string;\n\n    @IsNotEmpty()\n    @IsInt()\n    protein: number;\n\n    @IsNotEmpty()\n    @IsInt()\n    carbs: number;\n\n    @IsNotEmpty()\n    @IsInt()\n    fat: number;\n\n    @IsNotEmpty()\n    @IsInt()\n    weight: number;\n\n    @IsNotEmpty()\n    @IsInt()\n    calories: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NutritionModule.html":{"url":"modules/NutritionModule.html","title":"module - NutritionModule","body":"\n                   \n\n\n\n\n    Modules\n    NutritionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NutritionModule\n\n\n\ncluster_NutritionModule_providers\n\n\n\n\nNutritionService\n\nNutritionService\n\n\n\nNutritionModule\n\nNutritionModule\n\nNutritionModule -->\n\nNutritionService->NutritionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/nutrition/nutrition.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NutritionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NutritionController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Nutrition } from './../../node_modules/.prisma/client/index.d';\nimport { Module } from '@nestjs/common';\nimport { NutritionController } from './nutrition.controller';\nimport { NutritionService } from './nutrition.service';\n\n@Module({\n\tproviders: [NutritionService],\n\tcontrollers: [NutritionController]\n})\nexport class NutritionModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NutritionService.html":{"url":"injectables/NutritionService.html","title":"injectable - NutritionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NutritionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/nutrition/nutrition.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                add\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findByDay\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/nutrition/nutrition.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        add\n                        \n                    \n                \n            \n            \n                \n                    \n                    add(datas: NutritionDto, userEmail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/nutrition/nutrition.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    datas\n                                    \n                                                NutritionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/nutrition/nutrition.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(userEmail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/nutrition/nutrition.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByDay\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByDay(userEmail: string, date: string)\n                \n            \n\n\n            \n                \n                    Defined in src/nutrition/nutrition.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    date\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/nutrition/nutrition.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(datas: UpdateNutritionDto, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/nutrition/nutrition.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    datas\n                                    \n                                                UpdateNutritionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { NutritionDto } from './dto/nutrition.dto';\nimport { Injectable } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport UserNotFoundException from './exceptions/not-found.exception';\nimport { UpdateNutritionDto } from './dto/update.dto';\n\n@Injectable()\nexport class NutritionService {\n  constructor(private _prismaService: PrismaService) { }\n\n  public async findAll(userEmail: string) {\n    const user = await this._prismaService.user.findUnique({ where: { email: userEmail } });\n    if (!user) {\n      throw new UserNotFoundException(userEmail);\n    }\n\n    return await this._prismaService.nutrition.findMany({ where: { userId: user.id } })\n  }\n\n  public async findOne(id: number) {\n    return await this._prismaService.nutrition.findUnique({ where: { id: id } })\n  }\n\n  public async add(datas: NutritionDto, userEmail: string) {\n    const user = await this._prismaService.user.findUnique({ where: { email: userEmail } });\n    if (!user) {\n      throw new UserNotFoundException(userEmail);\n    }\n    datas.userId = user.id\n\n    return this._prismaService.nutrition.create({\n      data: datas\n    });\n  }\n\n  public async update(datas: UpdateNutritionDto, id: number) {\n    return this._prismaService.nutrition.update({\n      data: datas,\n      where: { id: id }\n    })\n  }\n\n  public async delete(id: number) {\n    await this._prismaService.nutrition.delete({ where: { id: id } })\n  }\n\n  public async findByDay(userEmail: string, date: string) {\n    const user = await this._prismaService.user.findUnique({ where: { email: userEmail } });\n    if (!user) {\n      throw new UserNotFoundException(userEmail);\n    }\n\n    const nutrition = await this._prismaService.nutrition.findMany({ where: { userId: user.id, date: date } })\n    const breakfasts = await this._prismaService.nutrition.findMany({ where: { userId: user.id, date: date, period: \"BREAKFAST\" } })\n    const lunch = await this._prismaService.nutrition.findMany({where: { userId: user.id, date: date, period: \"LUNCH\" }})\n    const dinners = await this._prismaService.nutrition.findMany({where: { userId: user.id, date: date, period: \"DINNER\" }})\n    const snacks = await this._prismaService.nutrition.findMany({where: { userId: user.id, date: date, period: \"SNACKS\" }})\n\n    return {\n\t\t\tcalories: nutrition.reduce((total, meal) => total + meal.calories, 0),\n      carbs: nutrition.reduce((total, meal) => total + meal.carbs, 0),\n      protein: nutrition.reduce((total, meal) => total + meal.protein, 0),\n      fat: nutrition.reduce((total, meal) => total + meal.fat, 0),\n      meals: {\n        breakfast: {\n          calories: breakfasts.reduce((total, meal) => total + meal.calories, 0),\n          meals: breakfasts,\n        },\n        lunch: {\n          calories: lunch.reduce((total, meal) => total + meal.calories, 0),\n          meals: lunch,\n        },\n        dinners: {\n          calories: dinners.reduce((total, meal) => total + meal.calories, 0),\n          meals: dinners,\n        },\n        snacks: {\n          calories: snacks.reduce((total, meal) => total + meal.calories, 0),\n          meals: snacks,\n        }\n      }\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OpenffController.html":{"url":"controllers/OpenffController.html","title":"controller - OpenffController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OpenffController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openff/openff.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                openff\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(request: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':request')\n                \n            \n\n            \n                \n                    Defined in src/openff/openff.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param } from '@nestjs/common';\nimport { Public } from '../common/decorators';\nimport { OpenffService } from './openff.service';\n\n@Controller('openff')\nexport class OpenffController {\n  constructor(private readonly openffService: OpenffService) {}\n\n  @Public()\n  @Get(\":request\")\n  findAll(@Param(\"request\") request: string) {\n    return this.openffService.findAll(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpenffModule.html":{"url":"modules/OpenffModule.html","title":"module - OpenffModule","body":"\n                   \n\n\n\n\n    Modules\n    OpenffModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OpenffModule\n\n\n\ncluster_OpenffModule_providers\n\n\n\n\nOpenffService\n\nOpenffService\n\n\n\nOpenffModule\n\nOpenffModule\n\nOpenffModule -->\n\nOpenffService->OpenffModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/openff/openff.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OpenffService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OpenffController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OpenffService } from './openff.service';\nimport { OpenffController } from './openff.controller';\n\n@Module({\n  controllers: [OpenffController],\n  providers: [OpenffService]\n})\nexport class OpenffModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OpenffService.html":{"url":"injectables/OpenffService.html","title":"injectable - OpenffService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OpenffService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openff/openff.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/openff/openff.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(request: string)\n                \n            \n\n\n            \n                \n                    Defined in src/openff/openff.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { PrismaService } from \"../prisma/prisma.service\";\n\n@Injectable()\nexport class OpenffService {\n  constructor(private prismaService: PrismaService) {\n  }\n\n  async findAll(request: string) {\n    let data = [];\n    try {\n      const res = fetch(request, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      data = await res.then((response) => {\n        return response.json();\n      });\n    } catch (error) {\n      const products = await this.prismaService.openFoodFacts.findMany({});\n      const data = products.map((product) => ({\n        product_name: product.product_name ?? \"Und3f1nd\",\n        brands: product.brands ?? \"Und3f1ndBrand\",\n        nutriments: {\n          energy_kcal_100g: product.energy_kcal_100g ?? -1,\n          proteins_100g: product.proteins_100g ?? -1.0,\n          carbohydrates_100g: product.carbohydrates_100g ?? -1.0,\n          fat_100g: product.fat_100g ?? -1.0,\n        },\n        image_front_url: product.image_front_url ??\n          \"https://media.istockphoto.com/id/1357365823/vector/default-image-icon-vector-missing-picture-page-for-website-design-or-mobile-app-no-photo.jpg?s=612x612&w=0&k=20&c=PM_optEhHBTZkuJQLlCjLz-v3zzxp-1mpNQZsdjrbns=\",\n        nutrition_grades: product.nutriscore ?? \"Und3f1ndScore\",\n      }));\n      return data;\n    }\n    return data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PreferencesController.html":{"url":"controllers/PreferencesController.html","title":"controller - PreferencesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PreferencesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/preferences/preferences.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                preferences\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                get\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/preferences/preferences.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(dto: UpdatePreferenceDto, email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/preferences/preferences.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                UpdatePreferenceDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Body, Post } from '@nestjs/common';\nimport { GetCurrentUserEmail } from '../common/decorators';\nimport { UpdatePreferenceDto } from './dto/update-preference.dto';\nimport { PreferencesService } from './preferences.service';\n\n@Controller('preferences')\nexport class PreferencesController {\n  constructor(private readonly preferencesService: PreferencesService) {}\n\n  @Post()\n  update(@Body() dto: UpdatePreferenceDto, @GetCurrentUserEmail() email: string) {\n    return this.preferencesService.update(dto, email);\n  }\n\n  @Get()\n  get(@GetCurrentUserEmail() email: string) {\n    return this.preferencesService.get(email);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PreferencesModule.html":{"url":"modules/PreferencesModule.html","title":"module - PreferencesModule","body":"\n                   \n\n\n\n\n    Modules\n    PreferencesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PreferencesModule\n\n\n\ncluster_PreferencesModule_providers\n\n\n\n\nPreferencesService\n\nPreferencesService\n\n\n\nPreferencesModule\n\nPreferencesModule\n\nPreferencesModule -->\n\nPreferencesService->PreferencesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/preferences/preferences.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PreferencesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PreferencesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PreferencesService } from './preferences.service';\nimport { PreferencesController } from './preferences.controller';\n\n@Module({\n  controllers: [PreferencesController],\n  providers: [PreferencesService]\n})\nexport class PreferencesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PreferencesService.html":{"url":"injectables/PreferencesService.html","title":"injectable - PreferencesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PreferencesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/preferences/preferences.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/preferences/preferences.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/preferences/preferences.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(updatePreferenceDto: UpdatePreferenceDto, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/preferences/preferences.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updatePreferenceDto\n                                    \n                                                UpdatePreferenceDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { PrismaService } from \"../prisma/prisma.service\";\nimport { UpdatePreferenceDto } from \"./dto/update-preference.dto\";\n\n@Injectable()\nexport class PreferencesService {\n  constructor(private prismaService: PrismaService) {}\n\n  async update(updatePreferenceDto: UpdatePreferenceDto, email: string) {\n    const user = await this.prismaService.user.findUnique({\n      where: { email },\n    });\n\n    return await this.prismaService.preferences.updateMany({\n      where: { userId: user.id },\n      data: updatePreferenceDto,\n    });\n  }\n\n  async get(email: string) {\n    const user = await this.prismaService.user.findUnique({\n      where: { email },\n      include: { Preferences: true },\n    });\n\n    return user.Preferences[0];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ConfigModule } from '@nestjs/config';\nimport { Global, Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Global()\n@Module({\n  imports: [ConfigModule],\n  controllers: [],\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleDestroy\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PrismaClient } from '.prisma/client';\nimport { Injectable, OnModuleDestroy, OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit, OnModuleDestroy {\n  constructor(configService: ConfigService) {\n    super({\n      datasources: {\n        db: {\n          url: configService.get('DATABASE_URL'),\n        }\n      }\n    });\n  }\n\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async onModuleDestroy() {\n    await this.$disconnect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ReportsController.html":{"url":"controllers/ReportsController.html","title":"controller - ReportsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ReportsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reports/reports.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                reports\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                change\n                            \n                            \n                                    \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        change\n                        \n                    \n                \n            \n            \n                \n                    \n                    change(currentUser: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('change')\n                \n            \n\n            \n                \n                    Defined in src/reports/reports.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(currentUser: string, reason: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/reports/reports.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reason\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from \"@nestjs/common\";\nimport { GetCurrentUserEmail } from \"../common/decorators/current_user.decorator\";\nimport { ReportsService } from \"./reports.service\";\n\n@Controller(\"reports\")\nexport class ReportsController {\n  constructor(private readonly reportsService: ReportsService) {}\n\n  @Post()\n  async create(\n    @GetCurrentUserEmail() currentUser: string,\n    @Body(\"reason\") reason: string\n  ) {\n    return this.reportsService.create(currentUser, reason);\n  }\n\n  @Post(\"change\")\n  async change(\n    @GetCurrentUserEmail() currentUser: string\n  ) {\n    return this.reportsService.change(currentUser);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReportsModule.html":{"url":"modules/ReportsModule.html","title":"module - ReportsModule","body":"\n                   \n\n\n\n\n    Modules\n    ReportsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReportsModule\n\n\n\ncluster_ReportsModule_providers\n\n\n\n\nReportsService\n\nReportsService\n\n\n\nReportsModule\n\nReportsModule\n\nReportsModule -->\n\nReportsService->ReportsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/reports/reports.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ReportsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ReportsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ReportsService } from './reports.service';\nimport { ReportsController } from './reports.controller';\n\n@Module({\n  controllers: [ReportsController],\n  providers: [ReportsService]\n})\nexport class ReportsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReportsService.html":{"url":"injectables/ReportsService.html","title":"injectable - ReportsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReportsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reports/reports.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                change\n                            \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/reports/reports.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        change\n                        \n                    \n                \n            \n            \n                \n                    \n                    change(reporter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/reports/reports.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reporter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(reporter: string, reason: string)\n                \n            \n\n\n            \n                \n                    Defined in src/reports/reports.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reporter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reason\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from \"@nestjs/common\";\nimport { PrismaService } from \"../prisma/prisma.service\";\n\n@Injectable()\nexport class ReportsService {\n  constructor(private prisma: PrismaService) {}\n\n  async create(reporter: string, reason: string) {\n    const user = await this.prisma.user.findUnique({\n      where: { email: reporter },\n    });\n\n    const userInfo = await this.prisma.userData.findUnique({\n      where: {\n        userId: user.id,\n      },\n    });\n\n    if (!user) {\n      throw new NotFoundException(\"User not found\");\n    }\n\n    if (!userInfo.sidekick_id) {\n      throw new NotFoundException(\"User does not have a sidekick\");\n    }\n\n    await Promise.all([\n      this.prisma.userData.update({\n        where: {\n          userId: userInfo.sidekick_id,\n        },\n        data: {\n          sidekick_id: null,\n        },\n      }),\n      this.prisma.userData.update({\n        where: {\n          userId: user.id,\n        },\n        data: {\n          sidekick_id: null,\n        },\n      }),\n    ]);\n\n    return await this.prisma.reports.create({\n      data: {\n        reason: reason ?? \"No reason provided\",\n        reporterEmail: reporter,\n        userId: userInfo.sidekick_id,\n      },\n    });\n  }\n\n  async change(reporter: string) {\n    const user = await this.prisma.user.findUnique({\n      where: { email: reporter },\n    });\n\n    const userInfo = await this.prisma.userData.findUnique({\n      where: {\n        userId: user.id,\n      },\n    });\n\n    if (!user) {\n      throw new NotFoundException(\"User not found\");\n    }\n\n    if (!userInfo.sidekick_id) {\n      throw new NotFoundException(\"User does not have a sidekick\");\n    }\n\n    await Promise.all([\n      this.prisma.userData.update({\n        where: {\n          userId: userInfo.sidekick_id,\n        },\n        data: {\n          sidekick_id: null,\n        },\n      }),\n      this.prisma.userData.update({\n        where: {\n          userId: user.id,\n        },\n        data: {\n          sidekick_id: null,\n        },\n      }),\n    ]);\n\n    return await this.prisma.reports.create({\n      data: {\n        reason: \"Change\",\n        reporterEmail: reporter,\n        userId: userInfo.sidekick_id,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Rooms.html":{"url":"classes/Rooms.html","title":"class - Rooms","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Rooms\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chat/chat.helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                rooms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRoom\n                            \n                            \n                                addUserToRoom\n                            \n                            \n                                findUserBySocketId\n                            \n                            \n                                getRoom\n                            \n                            \n                                getRoomUsers\n                            \n                            \n                                removeRoom\n                            \n                            \n                                removeUserFromRoom\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/chat/chat.helper.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        rooms\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Room[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/chat/chat.helper.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addRoom\n                        \n                    \n                \n            \n            \n                \naddRoom(room: Room)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/chat.helper.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                                Room\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addUserToRoom\n                        \n                    \n                \n            \n            \n                \naddUserToRoom(roomId: string, user: SocketUser)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/chat.helper.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                SocketUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findUserBySocketId\n                        \n                    \n                \n            \n            \n                \nfindUserBySocketId(socketId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/chat.helper.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socketId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRoom\n                        \n                    \n                \n            \n            \n                \ngetRoom(roomId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/chat.helper.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRoomUsers\n                        \n                    \n                \n            \n            \n                \ngetRoomUsers(roomId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/chat.helper.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRoom\n                        \n                    \n                \n            \n            \n                \nremoveRoom(roomId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/chat.helper.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeUserFromRoom\n                        \n                    \n                \n            \n            \n                \nremoveUserFromRoom(roomId: string, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/chat/chat.helper.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export type SocketUser = {\n  socketId: string;\n  userId: string;\n  sidekickId: string;\n};\n\nexport type Room = {\n  name: string;\n  users: SocketUser[];\n};\n\nexport class Rooms {\n  private rooms: Room[] = [];\n\n  constructor() {}\n\n  addRoom(room: Room) {\n    this.rooms.push(room);\n  }\n\n  removeRoom(roomId: string) {\n    this.rooms = this.rooms.filter((room) => room.name !== roomId);\n  }\n\n  getRoom(roomId: string) {\n    return this.rooms.find((room) => room.name === roomId);\n  }\n\n  addUserToRoom(roomId: string, user: SocketUser) {\n    const room = this.getRoom(roomId);\n    if (room) {\n      room.users.push(user);\n    }\n  }\n\n  removeUserFromRoom(roomId: string, userId: string) {\n    const room = this.getRoom(roomId);\n    if (room) {\n      room.users = room.users.filter((user) => user.userId !== userId);\n    }\n  }\n\n  getRoomUsers(roomId: string) {\n    const room = this.getRoom(roomId);\n    if (room) {\n      return room.users;\n    }\n  }\n\n  findUserBySocketId(socketId: string) {\n    for (const room of this.rooms) {\n      const user = room.users.find((user) => user.socketId === socketId);\n      if (user) {\n        return user;\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StepsController.html":{"url":"controllers/StepsController.html","title":"controller - StepsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StepsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/steps/steps.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getCalories\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getCalories\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCalories(req: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('steps')\n                \n            \n\n            \n                \n                    Defined in src/steps/steps.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query, Request } from \"@nestjs/common\";\nimport { StepsService } from \"./steps.service\";\n\n@Controller()\nexport class StepsController {\n  constructor(private stepsService: StepsService) {}\n\n  @Get(\"steps\")\n  getCalories(@Request() req: any) {\n    return this.stepsService.getStepsById(req.user.email);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StepsModule.html":{"url":"modules/StepsModule.html","title":"module - StepsModule","body":"\n                   \n\n\n\n\n    Modules\n    StepsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StepsModule\n\n\n\ncluster_StepsModule_providers\n\n\n\n\nPrismaService\n\nPrismaService\n\n\n\nStepsModule\n\nStepsModule\n\nStepsModule -->\n\nPrismaService->StepsModule\n\n\n\n\n\nStepsService\n\nStepsService\n\nStepsModule -->\n\nStepsService->StepsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/steps/steps.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            StepsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StepsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StepsService } from \"./steps.service\";\nimport { StepsController } from \"./steps.controller\";\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Module({\n  providers: [StepsService, PrismaService],\n  controllers: [StepsController],\n})\nexport class StepsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StepsService.html":{"url":"injectables/StepsService.html","title":"injectable - StepsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StepsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/steps/steps.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getStepsById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/steps/steps.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getStepsById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStepsById(userEmail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/steps/steps.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport UserNotFoundException from \"../user_infos/exceptions/not-found.exception\";\n\n@Injectable()\nexport class StepsService {\n  constructor(private _prismaService: PrismaService) {}\n\n  public async getStepsById(userEmail: string) {\n    const userSteps = await this._prismaService.user.findUnique({\n      where: {\n        email: userEmail\n      }\n    })\n    if (!userSteps) {\n      throw new UserNotFoundException(userEmail);\n    }\n\n    const user = await this._prismaService.userData.findUnique({\n      where: {\n        userId: userSteps.id\n      }\n    });\n    if (!user) {\n      throw new UserNotFoundException(userEmail);\n    }\n\n    const step_data =  await this._prismaService.steps.findMany({\n      where: {\n        userId: userSteps.id\n      }\n    });\n\n    return {\n      data: step_data\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TicketsController.html":{"url":"controllers/TicketsController.html","title":"controller - TicketsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TicketsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tickets/tickets.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tickets\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                answer\n                            \n                            \n                                    \n                                    \n                                close\n                            \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                find\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                getTickets\n                            \n                            \n                                    \n                                    \n                                getTicketsFromEmail\n                            \n                            \n                                    \n                                    \n                                getTicketsFromId\n                            \n                            \n                                    \n                                user_answer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        answer\n                        \n                    \n                \n            \n            \n                \n                    \n                    answer(dto: ModeratorAnswerDto, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AdminGuard)@Post(':id/admin/answer')\n                \n            \n\n            \n                \n                    Defined in src/tickets/tickets.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                ModeratorAnswerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AdminGuard)@Post(':id/close')\n                \n            \n\n            \n                \n                    Defined in src/tickets/tickets.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createTicketDto: CreateTicketDto, email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/tickets/tickets.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTicketDto\n                                    \n                                                CreateTicketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(cursor: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AdminGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/tickets/tickets.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    cursor\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AdminGuard)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/tickets/tickets.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getTickets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTickets(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/me')\n                \n            \n\n            \n                \n                    Defined in src/tickets/tickets.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getTicketsFromEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTicketsFromEmail(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AdminGuard)@Get('admin')\n                \n            \n\n            \n                \n                    Defined in src/tickets/tickets.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getTicketsFromId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTicketsFromId(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AdminGuard)@Get('admin')\n                \n            \n\n            \n                \n                    Defined in src/tickets/tickets.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        user_answer\n                        \n                    \n                \n            \n            \n                \n                    \n                    user_answer(dto: ModeratorAnswerDto, id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':id/answer')\n                \n            \n\n            \n                \n                    Defined in src/tickets/tickets.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                ModeratorAnswerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Delete, UseGuards, ParseIntPipe, Query } from '@nestjs/common';\nimport { TicketsService } from './tickets.service';\nimport { CreateTicketDto } from './dto/create-ticket.dto';\nimport { AdminGuard } from '../common/guards';\nimport { GetCurrentUserEmail } from '../common/decorators';\nimport { ModeratorAnswerDto } from './dto/moderator-answer.dto';\n\n@Controller('tickets')\nexport class TicketsController {\n  constructor(private readonly ticketsService: TicketsService) { }\n\n  @Post()\n  create(@Body() createTicketDto: CreateTicketDto, @GetCurrentUserEmail() email: string) {\n    return this.ticketsService.create(createTicketDto, email);\n  }\n\n  @UseGuards(AdminGuard)\n  @Get()\n  find(@Query('cursor', ParseIntPipe) cursor: number = 0) {\n    return this.ticketsService.find(cursor);\n  }\n\n  @UseGuards(AdminGuard)\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.ticketsService.findOne(+id);\n  }\n\n  @Post(\":id/answer\")\n  user_answer(@Body() dto: ModeratorAnswerDto, @Param(\"id\", ParseIntPipe) id: number) {\n    return this.ticketsService.user_answer(dto, id);\n  }\n\n  @UseGuards(AdminGuard)\n  @Post(\":id/admin/answer\")\n  answer(@Body() dto: ModeratorAnswerDto, @Param(\"id\", ParseIntPipe) id: number) {\n    return this.ticketsService.answer(dto, id);\n  }\n\n  @UseGuards(AdminGuard)\n  @Post(\":id/close\")\n  close(@Param(\"id\", ParseIntPipe) id: number) {\n    return this.ticketsService.close(id);\n  }\n\n  @Get(\"/me\")\n  getTickets(@GetCurrentUserEmail() email: string) {\n    return this.ticketsService.getTickets(email);\n  }\n\n  @UseGuards(AdminGuard)\n  @Get(\"admin\")\n  getTicketsFromEmail(@Query(\"email\") email: string) {\n    return this.ticketsService.getTickets(email);\n  }\n\n  @UseGuards(AdminGuard)\n  @Get(\"admin\")\n  getTicketsFromId(@Query(\"id\") id: string) {\n    return this.ticketsService.getTicketsFromId(id);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TicketsModule.html":{"url":"modules/TicketsModule.html","title":"module - TicketsModule","body":"\n                   \n\n\n\n\n    Modules\n    TicketsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TicketsModule\n\n\n\ncluster_TicketsModule_providers\n\n\n\n\nTicketsService\n\nTicketsService\n\n\n\nTicketsModule\n\nTicketsModule\n\nTicketsModule -->\n\nTicketsService->TicketsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tickets/tickets.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TicketsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TicketsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TicketsService } from './tickets.service';\nimport { TicketsController } from './tickets.controller';\n\n@Module({\n  controllers: [TicketsController],\n  providers: [TicketsService]\n})\nexport class TicketsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TicketsService.html":{"url":"injectables/TicketsService.html","title":"injectable - TicketsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TicketsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tickets/tickets.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                SES\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                answer\n                            \n                            \n                                    Async\n                                close\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Private\n                                getParams\n                            \n                            \n                                    Async\n                                getTickets\n                            \n                            \n                                    Async\n                                getTicketsFromId\n                            \n                            \n                                    Async\n                                user_answer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/tickets/tickets.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        answer\n                        \n                    \n                \n            \n            \n                \n                    \n                    answer(undefined: ModeratorAnswerDto, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/tickets/tickets.service.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                ModeratorAnswerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/tickets/tickets.service.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateTicketDto, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tickets/tickets.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateTicketDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(cursor: number)\n                \n            \n\n\n            \n                \n                    Defined in src/tickets/tickets.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cursor\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/tickets/tickets.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getParams\n                        \n                    \n                \n            \n            \n                \n                    \n                    getParams(to: string, message: string, subject: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tickets/tickets.service.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subject\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { Source: string; Destination: { ToAddresses: {}; }; ReplyToAddresses: {}; Message: { Body: { Html: { Charset: string; Data: string; }; }; Subject: { Charset: string; Data: string; }; }; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTickets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTickets(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tickets/tickets.service.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTicketsFromId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTicketsFromId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tickets/tickets.service.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        user_answer\n                        \n                    \n                \n            \n            \n                \n                    \n                    user_answer(undefined: UserAnswerDto, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/tickets/tickets.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                UserAnswerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        SES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SES\n\n                    \n                \n                    \n                        \n                                Defined in src/tickets/tickets.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateTicketDto } from './dto/create-ticket.dto';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ModeratorAnswerDto } from './dto/moderator-answer.dto';\nimport { SESClient, SES } from '@aws-sdk/client-ses';\nimport { ConfigService } from '@nestjs/config';\nimport { UserAnswerDto } from './dto/user-answer.dto';\n\n@Injectable()\nexport class TicketsService {\n  private SES: SES;\n\n  constructor(private prismaService: PrismaService, private configService: ConfigService) {\n    this.SES = new SES({\n      region: this.configService.get(\"AWS_REGION\"),\n      credentials: {\n        accessKeyId: this.configService.get(\"AWS_ACCESS_KEY_ID\"),\n        secretAccessKey: this.configService.get(\"AWS_SECRET_ACCESS_KEY\"),\n      }\n    });\n  }\n\n  async create(dto: CreateTicketDto, email: string) {\n    const ticket = await this.prismaService.ticket.create({\n      data: {\n        description: dto.content,\n        title: dto.title,\n        status: \"OPEN\",\n        last_action: \"OPENED_BY_USER\",\n        user: {\n          connect: {\n            email: email\n          }\n        }\n      }\n    })\n\n    const response = await this.prismaService.response.create({\n      data: {\n        content: dto.content,\n        user: {\n          connect: {\n            email: email\n          }\n        },\n        ticket: {\n          connect: {\n            id: ticket.id\n          }\n        }\n      }\n    });\n\n    return { ticket, response };\n  }\n\n  async find(cursor: number) {\n    return await this.prismaService.ticket.findMany({\n      take: 10,\n      skip: cursor,\n      include: {\n        user: true,\n        responses: {\n          orderBy: {\n            createdAt: 'asc'\n          },\n          include: {\n            user: true,\n          },\n        },\n      }\n    });\n  }\n\n  async findOne(id: number) {\n    return await this.prismaService.ticket.findUnique({\n      where: {\n        id: id\n      },\n      include: {\n        user: true,\n        responses: {\n          orderBy: {\n            createdAt: 'asc'\n          },\n          include: {\n            user: true,\n          },\n        },\n      }\n    })\n  }\n\n  async user_answer({ answer }: UserAnswerDto, id: number) {\n    const ticket = await this.prismaService.ticket.update({\n      where: {\n        id: id\n      },\n      data: {\n        last_action: \"ANSWERED_BY_USER\",\n      },\n      include: {\n        user: true\n      }\n    });\n\n    const response = await this.prismaService.response.create({\n      data: {\n        content: answer,\n        user: {\n          connect: {\n            email: ticket.user.email\n          }\n        },\n        ticket: {\n          connect: {\n            id: id\n          }\n        }\n      }\n    });\n\n    return { response, message: \"Your response has been sent\" };\n  }\n\n  async answer({ answer }: ModeratorAnswerDto, id: number) {\n    const ticket = await this.prismaService.ticket.update({\n      where: {\n        id: id\n      },\n      data: {\n        status: \"ANSWERED\",\n        last_action: \"ANSWERED_BY_MODERATOR\",\n      },\n      include: {\n        user: true\n      }\n    });\n\n    const response = await this.prismaService.response.create({\n      data: {\n        content: answer,\n        user: {\n          connect: {\n            email: ticket.user.email\n          }\n        },\n        ticket: {\n          connect: {\n            id: id\n          }\n        }\n      }\n    });\n\n    const params = this.getParams(ticket.user.email, answer, \"Your ticket has been answered by a moderator: \" + answer);\n\n    const res = await this.SES.sendTemplatedEmail({\n      ...params, Template: \"ticket-response\",\n      TemplateData: JSON.stringify({ admin_response: answer, ticket_name: ticket.title })\n    });\n\n    return { res, message: \"Email has been sent\" };\n  }\n\n  async close(id: number) {\n    const res = await this.prismaService.ticket.update({\n      where: {\n        id: id\n      },\n      data: {\n        status: \"CLOSED\"\n      },\n      include: {\n        user: true\n      }\n    });\n\n    const response = await this.SES.sendEmail(this.getParams(res.user.email, \"Your ticket has been closed\", \"Your ticket has been closed\"));\n\n    return { res, message: \"Email has been sent\" };\n  }\n\n  async getTickets(email: string) {\n    return await this.prismaService.ticket.findMany({\n      where: {\n        user: {\n          email: email\n        }\n      },\n      include: {\n        user: true,\n      }\n    });\n  }\n\n  async getTicketsFromId(id: string) {\n    return await this.prismaService.ticket.findMany({\n      where: {\n        user: {\n          id: id\n        }\n      },\n      include: {\n        user: true,\n      }\n    });\n  }\n\n  private getParams(to: string, message: string, subject: string) {\n    return {\n      Source: \"sidekick.eip@gmail.com\",\n      Destination: {\n        ToAddresses: [to]\n      },\n      ReplyToAddresses: [],\n      Message: {\n        Body: {\n          Html: {\n            Charset: 'UTF-8',\n            Data: message,\n          },\n        },\n        Subject: {\n          Charset: 'UTF-8',\n          Data: \"Sidekick - \" + subject,\n        }\n      },\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateExercisesLibraryDto.html":{"url":"classes/UpdateExercisesLibraryDto.html","title":"class - UpdateExercisesLibraryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateExercisesLibraryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exercises_library/dto/update-exercises_library.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/exercises_library/dto/update-exercises_library.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateExercisesLibraryDto } from './create-exercises_library.dto';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class UpdateExercisesLibraryDto extends PartialType(CreateExercisesLibraryDto) {\n  @IsNotEmpty()\n  @IsString()\n  id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFeedbackUserDto.html":{"url":"classes/UpdateFeedbackUserDto.html","title":"class - UpdateFeedbackUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFeedbackUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feedback_user/dto/update-feedback_user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                comment\n                            \n                            \n                                id\n                            \n                            \n                                    \n                                    \n                                rating\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/feedback_user/dto/update-feedback_user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/feedback_user/dto/update-feedback_user.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        rating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/feedback_user/dto/update-feedback_user.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsOptional, IsString } from \"class-validator\";\n\nexport class UpdateFeedbackUserDto {\n  id: number;\n\n  @IsOptional()\n  @IsNumber()\n  rating: number;\n\n  @IsOptional()\n  @IsString()\n  comment: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNutritionDto.html":{"url":"classes/UpdateNutritionDto.html","title":"class - UpdateNutritionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNutritionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/nutrition/dto/update.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                calories\n                            \n                            \n                                    \n                                    \n                                carbs\n                            \n                            \n                                    \n                                    \n                                date\n                            \n                            \n                                    \n                                    \n                                fat\n                            \n                            \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                period\n                            \n                            \n                                    \n                                    \n                                picture\n                            \n                            \n                                    \n                                    \n                                protein\n                            \n                            \n                                userId\n                            \n                            \n                                    \n                                    \n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        calories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/nutrition/dto/update.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        carbs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/nutrition/dto/update.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/nutrition/dto/update.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        fat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/nutrition/dto/update.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/nutrition/dto/update.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/nutrition/dto/update.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        period\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Period\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/nutrition/dto/update.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        picture\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/nutrition/dto/update.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        protein\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/nutrition/dto/update.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/nutrition/dto/update.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/nutrition/dto/update.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Period } from '@prisma/client';\nimport { IsInt, IsOptional, IsString } from 'class-validator';\n\nexport class UpdateNutritionDto {\n    userId: string;\n    id: number;\n\n    @IsOptional()\n    @IsString()\n    period: Period;\n\n    @IsOptional()\n    @IsString()\n    name: string;\n\n    @IsOptional()\n    @IsString()\n    picture: string;\n\n    @IsOptional()\n    @IsString()\n    date: string;\n\n    @IsOptional()\n    @IsInt()\n    protein: number;\n\n    @IsOptional()\n    @IsInt()\n    carbs: number;\n\n    @IsOptional()\n    @IsInt()\n    fat: number;\n\n    @IsOptional()\n    @IsInt()\n    weight: number;\n\n    @IsOptional()\n    @IsInt()\n    calories: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOpenffDto.html":{"url":"classes/UpdateOpenffDto.html","title":"class - UpdateOpenffDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOpenffDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/openff/dto/update-openff.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateOpenffDto } from './create-openff.dto';\n\nexport class UpdateOpenffDto extends PartialType(CreateOpenffDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePreferenceDto.html":{"url":"classes/UpdatePreferenceDto.html","title":"class - UpdatePreferenceDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePreferenceDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/preferences/dto/update-preference.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                darkMode\n                            \n                            \n                                    \n                                    \n                                notifications\n                            \n                            \n                                    \n                                    \n                                sounds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        darkMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/preferences/dto/update-preference.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/preferences/dto/update-preference.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sounds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/preferences/dto/update-preference.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsOptional } from \"class-validator\";\n\nexport class UpdatePreferenceDto {\n  @IsOptional()\n  @IsBoolean()\n  darkMode: boolean;\n\n  @IsOptional()\n  @IsBoolean()\n  sounds: boolean;\n\n  @IsOptional()\n  @IsBoolean()\n  notifications: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserAdminController.html":{"url":"controllers/UserAdminController.html","title":"controller - UserAdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserAdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user_admin/user_admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user_admin\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                update_user\n                            \n                            \n                                    \n                                    \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        update_user\n                        \n                    \n                \n            \n            \n                \n                    \n                    update_user(id: string, query: EditInfosDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('/update')\n                \n            \n\n            \n                \n                    Defined in src/user_admin/user_admin.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                EditInfosDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        users\n                        \n                    \n                \n            \n            \n                \n                    \n                    users(email: string, hasSidekick: boolean)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get()\n                \n            \n\n            \n                \n                    Defined in src/user_admin/user_admin.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hasSidekick\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, ParseBoolPipe, Post, Query, UseGuards } from '@nestjs/common';\nimport { UserAdminService } from './user_admin.service';\nimport { AdminGuard } from 'src/common/guards';\nimport { EditInfosDto } from 'src/user_infos/dto/edit.dto';\nimport { Public } from 'src/common/decorators';\nimport { GetUserAdminDto } from './dto/user_admin.dto';\n\n@Controller('user_admin')\nexport class UserAdminController {\n  constructor(private readonly userAdminService: UserAdminService) { }\n\n  // @UseGuards(AdminGuard)\n  @Public()\n  @Get()\n  users(@Query('email') email: string, @Query('sidekick', ParseBoolPipe) hasSidekick: boolean) {\n    return this.userAdminService.findAll({email, hasSidekick});\n  }\n\n  // @UseGuards(AdminGuard)\n  @Public()\n  @Post(\"/update\")\n  update_user(@Query(\"user_id\") id: string, @Body() query: EditInfosDto) {\n    return this.userAdminService.update(id, query);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserAdminModule.html":{"url":"modules/UserAdminModule.html","title":"module - UserAdminModule","body":"\n                   \n\n\n\n\n    Modules\n    UserAdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserAdminModule\n\n\n\ncluster_UserAdminModule_providers\n\n\n\n\nUserAdminService\n\nUserAdminService\n\n\n\nUserAdminModule\n\nUserAdminModule\n\nUserAdminModule -->\n\nUserAdminService->UserAdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user_admin/user_admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserAdminService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserAdminController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserAdminService } from './user_admin.service';\nimport { UserAdminController } from './user_admin.controller';\n\n@Module({\n  controllers: [UserAdminController],\n  providers: [UserAdminService]\n})\nexport class UserAdminModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserAdminService.html":{"url":"injectables/UserAdminService.html","title":"injectable - UserAdminService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserAdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user_admin/user_admin.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user_admin/user_admin.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/user_admin/user_admin.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(userId: string, updateInfos: EditInfosDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user_admin/user_admin.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateInfos\n                                    \n                                                EditInfosDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EditInfosDto } from './dto/user_admin.dto';\nimport { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class UserAdminService {\n  constructor(private prismaService: PrismaService) { }\n\n  findAll({ email, hasSidekick }: { email: string, hasSidekick: boolean }) {\n    let whereClause = {\n      ...(email && { user: { email: { contains: email } } }),\n      ...(hasSidekick !== undefined && {\n        sidekick_id: hasSidekick ? { not: null } : null\n      })\n    };\n\n    return this.prismaService.userData.findMany({\n      where: whereClause,\n      include: {\n        user: true,\n      },\n    });\n  }\n\n  update(userId: string, updateInfos: EditInfosDto) {\n    return this.prismaService.userData.update({\n      where: { userId },\n      data: updateInfos,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserAnswerDto.html":{"url":"classes/UserAnswerDto.html","title":"class - UserAnswerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserAnswerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tickets/dto/user-answer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                answer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/tickets/dto/user-answer.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsString } from \"class-validator\";\n\nexport class UserAnswerDto {\n  @IsString()\n  answer: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserInfoService.html":{"url":"injectables/UserInfoService.html","title":"injectable - UserInfoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserInfoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user_infos/user_infos.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                add\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findSidekick\n                            \n                            \n                                    Public\n                                    Async\n                                findUsersWithoutSidekick\n                            \n                            \n                                    Async\n                                getUserfromId\n                            \n                            \n                                    Public\n                                    Async\n                                linkUsers\n                            \n                            \n                                    Async\n                                setAvatar\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_prismaService: PrismaService, _fileService: FileService, eventEmitter: EventEmitter2)\n                    \n                \n                        \n                            \n                                Defined in src/user_infos/user_infos.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _fileService\n                                                  \n                                                        \n                                                                        FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventEmitter\n                                                  \n                                                        \n                                                                    EventEmitter2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        add\n                        \n                    \n                \n            \n            \n                \n                    \n                    add(datas: UserInfosDto, userEmail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user_infos/user_infos.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    datas\n                                    \n                                                UserInfosDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(userEmail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user_infos/user_infos.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findSidekick\n                        \n                    \n                \n            \n            \n                \n                    \n                    findSidekick(userEmail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user_infos/user_infos.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findUsersWithoutSidekick\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUsersWithoutSidekick()\n                \n            \n\n\n            \n                \n                    Defined in src/user_infos/user_infos.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserfromId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserfromId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user_infos/user_infos.service.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        linkUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    linkUsers(req: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/user_infos/user_infos.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setAvatar\n                        \n                    \n                \n            \n            \n                \n                    \n                    setAvatar(email: string, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/user_infos/user_infos.service.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(datas: EditInfosDto, email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user_infos/user_infos.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    datas\n                                    \n                                                EditInfosDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Gender, Activities, Goal, Level } from \"@prisma/client\";\nimport {\n  ForbiddenException,\n  HttpStatus,\n  Injectable,\n  ConflictException,\n} from \"@nestjs/common\";\nimport { PrismaService } from \"../prisma/prisma.service\";\nimport UserNotFoundException from \"./exceptions/not-found.exception\";\nimport { UserWithoutSidekickException } from \"./exceptions/not-found.exception\";\nimport { UserInfosDto } from \"./dto/user.dto\";\nimport { EditInfosDto } from \"./dto/edit.dto\";\nimport { FileService } from \"../file/file.service\";\nimport { EventEmitter2 } from \"@nestjs/event-emitter\";\n\n@Injectable()\nexport class UserInfoService {\n  constructor(\n    private _prismaService: PrismaService,\n    private _fileService: FileService,\n    private eventEmitter: EventEmitter2,\n  ) { }\n\n  public async findUsersWithoutSidekick() {\n    const usersDatas = await this._prismaService.userData.findMany({\n      where: {\n        sidekick_id: null,\n      },\n    });\n    return usersDatas;\n  }\n\n  public async find(userEmail: string) {\n    const user = await this._prismaService.user.findUnique({\n      where: {\n        email: userEmail,\n      },\n    });\n    if (!user) {\n      throw new UserNotFoundException(userEmail);\n    }\n    const userDatas = await this._prismaService.userData.findUnique({\n      where: {\n        userId: user.id,\n      },\n    });\n    userDatas[\"email\"] = userEmail;\n    return userDatas;\n  }\n\n  public async findSidekick(userEmail: string) {\n    const user = await this._prismaService.user.findUnique({\n      where: {\n        email: userEmail,\n      },\n    });\n    if (!user) {\n      throw new UserNotFoundException(userEmail);\n    }\n    const userDatas = await this._prismaService.userData.findUnique({\n      where: {\n        userId: user.id,\n      },\n    });\n    if (!userDatas.sidekick_id) {\n      throw new UserWithoutSidekickException(user.id);\n    }\n    const sidekickDatas = await this._prismaService.userData.findUnique({\n      where: {\n        userId: userDatas.sidekick_id,\n      },\n    });\n    return {\n      birth_date: sidekickDatas.birth_date,\n      gender: sidekickDatas.gender,\n      avatar: sidekickDatas.avatar,\n      lastname: sidekickDatas.lastname,\n      firstname: sidekickDatas.firstname,\n      size: sidekickDatas.size,\n      bio: sidekickDatas.description,\n      goal: sidekickDatas.goal,\n      level: sidekickDatas.level,\n      activities: sidekickDatas.activities,\n      location: sidekickDatas.location\n    };\n  }\n\n  public async add(datas: UserInfosDto, userEmail: string) {\n    var user = await this._prismaService.user.findUnique({\n      where: {email: userEmail}\n    });\n\n    if (!user) {\n      throw new UserNotFoundException(userEmail);\n    }\n    datas[\"userId\"] = user.id;\n\n    return await this._prismaService.userData.create({\n      data: datas,\n    });\n  }\n\n  async update(datas: EditInfosDto, email: string) {\n    const user = await this._prismaService.user.findUnique({\n      where: {\n        email: email,\n      },\n    });\n\n    if (!user) {\n      throw new UserNotFoundException(email);\n    }\n    return await this._prismaService.userData.update({\n      where: {\n        userId: user.id,\n      },\n      data: datas,\n    });\n  }\n\n  public async linkUsers(req: { id1: string; id2: string }) {\n    let { id1, id2 } = req;\n    console.log(id1, id2)\n    const user1 = await this._prismaService.userData.findUnique({\n      where: { userId: id1 },\n    });\n    const user2 = await this._prismaService.userData.findUnique({\n      where: { userId: id2 },\n    });\n\n    if (user1.sidekick_id) {\n      throw new ConflictException(\"The user with id '\" + id1 + \"'\");\n    } else if (user2.sidekick_id) {\n      throw new ConflictException(\"The user with id '\" + id2 + \"'\");\n    } else {\n      await Promise.all([\n        this._prismaService.userData.update({\n          where: { userId: id1 },\n          data: { sidekick_id: id2 },\n        }),\n        this._prismaService.userData.update({\n          where: { userId: id2 },\n          data: { sidekick_id: id1 },\n        }),\n      ]);\n    }\n    this.eventEmitter.emit('match', { id1, id2 })\n    return HttpStatus.OK;\n  }\n\n  async getUserfromId(id: string) {\n    const user = await this._prismaService.userData.findUnique({\n      where: {\n        userId: id,\n      },\n    });\n    if (!user) {\n      throw new UserNotFoundException(id);\n    }\n    return user;\n  }\n\n  async setAvatar(email: string, file: Express.Multer.File) {\n    const user = await this._prismaService.user.findUnique({\n      where: {\n        email: email,\n      },\n    });\n    if (!user) {\n      throw new UserNotFoundException(email);\n    }\n\n    const avatar = await this._fileService.uploadPublicFile(file);\n\n    return this._prismaService.userData.update({\n      where: {\n        userId: user.id,\n      },\n      data: {\n        avatar: avatar,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserInfosController.html":{"url":"controllers/UserInfosController.html","title":"controller - UserInfosController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserInfosController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user_infos/user_infos.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user_infos\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                add\n                            \n                            \n                                    \n                                find\n                            \n                            \n                                    \n                                findSidekick\n                            \n                            \n                                    \n                                    \n                                findUsersWithoutSidekick\n                            \n                            \n                                    \n                                    \n                                linkUsers\n                            \n                            \n                                    \n                                    \n                                setAvatar\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        add\n                        \n                    \n                \n            \n            \n                \n                    \n                    add(req: any, dto: UserInfosDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')\n                \n            \n\n            \n                \n                    Defined in src/user_infos/user_infos.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UserInfosDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(req: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')\n                \n            \n\n            \n                \n                    Defined in src/user_infos/user_infos.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findSidekick\n                        \n                    \n                \n            \n            \n                \n                    \n                    findSidekick(req: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('sidekick')\n                \n            \n\n            \n                \n                    Defined in src/user_infos/user_infos.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        findUsersWithoutSidekick\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUsersWithoutSidekick()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('find_users_without_sidekick')\n                \n            \n\n            \n                \n                    Defined in src/user_infos/user_infos.controller.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        linkUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    linkUsers(req: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AdminGuard)@Post('link_users')\n                \n            \n\n            \n                \n                    Defined in src/user_infos/user_infos.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        setAvatar\n                        \n                    \n                \n            \n            \n                \n                    \n                    setAvatar(email: string, file)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/avatar')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/user_infos/user_infos.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(req: any, dto: EditInfosDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/update')\n                \n            \n\n            \n                \n                    Defined in src/user_infos/user_infos.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                EditInfosDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  FileTypeValidator,\n  Get,\n  MaxFileSizeValidator,\n  ParseFilePipe,\n  Post,\n  Put,\n  Query,\n  Request,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from \"@nestjs/common\";\nimport { UserInfoService } from \"./user_infos.service\";\nimport { UserInfosDto } from \"./dto/user.dto\";\nimport { Public, GetCurrentUserEmail } from \"../common/decorators\";\nimport { EditInfosDto } from \"./dto/edit.dto\";\nimport { FileInterceptor } from \"@nestjs/platform-express\";\nimport * as path from \"path\";\nimport { AdminGuard } from \"../common/guards\";\n\n@Controller(\"user_infos\")\nexport class UserInfosController {\n  constructor(private userInfoService: UserInfoService) { }\n\n  @Get(\"/\")\n  find(@Request() req: any) {\n    return this.userInfoService.find(req.user.email);\n  }\n\n  @Get(\"sidekick\")\n  findSidekick(@Request() req: any) {\n    return this.userInfoService.findSidekick(req.user.email);\n  }\n\n  @Post(\"/\")\n  add(@Request() req: any, @Body() dto: UserInfosDto) {\n    return this.userInfoService.add(dto, req.user.email);\n  }\n\n  @Put(\"/update\")\n  update(@Request() req: any, @Body() dto: EditInfosDto) {\n    return this.userInfoService.update(dto, req.user.email);\n  }\n\n  @Post('/avatar')\n  @UseInterceptors(FileInterceptor('file', {\n    limits: {\n      fileSize: 100000000, // file size limit\n    },\n    fileFilter: (req, file, cb) => {\n      const fileTypes = /jpeg|jpg|png/; // acceptable file types\n      const extname = fileTypes.test(path.extname(file.originalname).toLowerCase());\n      const mimetype = fileTypes.test(file.mimetype);\n\n      if (extname && mimetype) {\n        return cb(null, true);\n      } else {\n        return cb(new Error('Only images are allowed'), false);\n      }\n    },\n  }))\n\n  setAvatar(@GetCurrentUserEmail() email: string, @UploadedFile() file) {\n    return this.userInfoService.setAvatar(email, file);\n  }\n\n  @UseGuards(AdminGuard)\n  @Post(\"link_users\")\n  linkUsers(@Body() req: { id1: string; id2: string }) {\n    return this.userInfoService.linkUsers(req);\n  }\n\n  @Public()\n  @Get(\"find_users_without_sidekick\")\n  findUsersWithoutSidekick() {\n    return this.userInfoService.findUsersWithoutSidekick();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfosDto.html":{"url":"classes/UserInfosDto.html","title":"class - UserInfosDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfosDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user_infos/dto/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                activities\n                            \n                            \n                                    \n                                    \n                                birth_date\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                firstname\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                goal\n                            \n                            \n                                    \n                                    \n                                goal_weight\n                            \n                            \n                                    \n                                    \n                                lastname\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                    \n                                location\n                            \n                            \n                                    \n                                    \n                                size\n                            \n                            \n                                    \n                                    \n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        activities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Activities[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_infos/dto/user.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        birth_date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_infos/dto/user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_infos/dto/user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_infos/dto/user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Gender\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_infos/dto/user.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        goal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Goal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_infos/dto/user.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        goal_weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_infos/dto/user.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_infos/dto/user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Level\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_infos/dto/user.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_infos/dto/user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_infos/dto/user.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user_infos/dto/user.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Gender, Goal, Level, Activities } from \"@prisma/client\";\nimport { IsInt, IsNotEmpty, IsString } from \"class-validator\";\n\nexport class UserInfosDto {\n  @IsNotEmpty()\n  @IsString()\n  firstname: string;\n\n  @IsNotEmpty()\n  @IsString()\n  lastname: string;\n\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n\n  @IsNotEmpty()\n  @IsString()\n  birth_date: Date;\n\n  @IsNotEmpty()\n  @IsInt()\n  size: number;\n\n  @IsNotEmpty()\n  @IsString()\n  location: string;\n\n  @IsNotEmpty()\n  @IsInt()\n  weight: number;\n\n  @IsNotEmpty()\n  @IsInt()\n  goal_weight: number;\n\n  @IsNotEmpty()\n  gender: Gender;\n\n  @IsNotEmpty()\n  goal: Goal;\n\n  @IsNotEmpty()\n  level: Level;\n\n  @IsNotEmpty()\n  activities: Activities[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserInfosModule.html":{"url":"modules/UserInfosModule.html","title":"module - UserInfosModule","body":"\n                   \n\n\n\n\n    Modules\n    UserInfosModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserInfosModule\n\n\n\ncluster_UserInfosModule_providers\n\n\n\ncluster_UserInfosModule_exports\n\n\n\ncluster_UserInfosModule_imports\n\n\n\n\nFileModule\n\nFileModule\n\n\n\nUserInfosModule\n\nUserInfosModule\n\nUserInfosModule -->\n\nFileModule->UserInfosModule\n\n\n\n\n\nUserInfoService \n\nUserInfoService \n\nUserInfoService  -->\n\nUserInfosModule->UserInfoService \n\n\n\n\n\nUserInfoService\n\nUserInfoService\n\nUserInfosModule -->\n\nUserInfoService->UserInfosModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user_infos/user_infos.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserInfoService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserInfosController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FileModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserInfoService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FileModule } from '../file/file.module';\nimport { UserInfosController } from './user_infos.controller';\nimport { UserInfoService } from './user_infos.service';\n\n@Module({\n  providers: [UserInfoService],\n  controllers: [UserInfosController],\n  exports: [UserInfoService],\n  imports: [FileModule],\n})\nexport class UserInfosModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotFoundException.html":{"url":"classes/UserNotFoundException.html","title":"class - UserNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/nutrition/exceptions/not-found.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(postemail: string)\n                    \n                \n                        \n                            \n                                Defined in src/nutrition/exceptions/not-found.exception.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postemail\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException } from \"@nestjs/common\";\n\nclass UserNotFoundException extends NotFoundException {\n    constructor(postemail: string) {\n        super('User with email ' + postemail + ' not found.');\n    }\n}\n\nexport default UserNotFoundException;\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotFoundException-1.html":{"url":"classes/UserNotFoundException-1.html","title":"class - UserNotFoundException-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user_infos/exceptions/not-found.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(postid: string)\n                    \n                \n                        \n                            \n                                Defined in src/user_infos/exceptions/not-found.exception.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException } from \"@nestjs/common\";\n\nclass UserNotFoundException extends NotFoundException {\n    constructor(postid: string) {\n        super('User with id ' + postid + ' not found');\n    }\n}\n\nexport class UserWithoutSidekickException extends NotFoundException {\n    constructor(postid: string) {\n        super('User with id ' + postid + ' doesn\\'t have sidekick');\n    }\n}\n\nexport default UserNotFoundException;\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotFoundException-2.html":{"url":"classes/UserNotFoundException-2.html","title":"class - UserNotFoundException-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workouts/exceptions/not-found.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(postemail: string)\n                    \n                \n                        \n                            \n                                Defined in src/workouts/exceptions/not-found.exception.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postemail\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException } from \"@nestjs/common\";\n\nclass UserNotFoundException extends NotFoundException {\n    constructor(postemail: string) {\n        super('User with email ' + postemail + ' not found.');\n    }\n}\n\nexport default UserNotFoundException;\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserWithoutSidekickException.html":{"url":"classes/UserWithoutSidekickException.html","title":"class - UserWithoutSidekickException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserWithoutSidekickException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user_infos/exceptions/not-found.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(postid: string)\n                    \n                \n                        \n                            \n                                Defined in src/user_infos/exceptions/not-found.exception.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException } from \"@nestjs/common\";\n\nclass UserNotFoundException extends NotFoundException {\n    constructor(postid: string) {\n        super('User with id ' + postid + ' not found');\n    }\n}\n\nexport class UserWithoutSidekickException extends NotFoundException {\n    constructor(postid: string) {\n        super('User with id ' + postid + ' doesn\\'t have sidekick');\n    }\n}\n\nexport default UserNotFoundException;\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidatedUser.html":{"url":"interfaces/ValidatedUser.html","title":"interface - ValidatedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidatedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/aws.strategy.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isAdmin\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAdmin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isAdmin:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ExtractJwt, Strategy } from \"passport-jwt\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { Injectable } from \"@nestjs/common\";\nimport { AuthService } from \"../auth.service\";\nimport { passportJwtSecret } from \"jwks-rsa\";\nimport { AuthConfig } from \"../auth.config\";\n\ninterface ValidatedUser {\n  userId: any;\n  email: any;\n  isAdmin?: boolean;\n}\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, \"jwt\") {\n  constructor(\n    private readonly authService: AuthService,\n    private authConfig: AuthConfig\n  ) {\n    super({\n      secretOrKeyProvider: passportJwtSecret({\n        cache: true,\n        rateLimit: true,\n        jwksRequestsPerMinute: 5,\n        jwksUri: `${authConfig.authority}/.well-known/jwks.json`,\n      }),\n\n      audience: authConfig.clientId,\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      issuer: authConfig.authority,\n      algorithms: [\"RS256\"],\n    });\n  }\n\n  public async validate(payload: any): Promise {\n    const user: ValidatedUser = { userId: payload.sub, email: payload.email };\n    if (payload['cognito:groups'] && payload['cognito:groups'].includes('admin')) {\n      console.log('user is admin')\n      user.isAdmin = true;\n    } else {\n      console.log('not admin')\n      user.isAdmin = false;\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/WorkoutsController.html":{"url":"controllers/WorkoutsController.html","title":"controller - WorkoutsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  WorkoutsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workouts/workouts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                workouts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                add\n                            \n                            \n                                    \n                                burnedCalories\n                            \n                            \n                                    \n                                find\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findAllAdmin\n                            \n                            \n                                    \n                                findByDay\n                            \n                            \n                                    \n                                findSidekick\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        add\n                        \n                    \n                \n            \n            \n                \n                    \n                    add(req: any, dto: WorkoutsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('add')\n                \n            \n\n            \n                \n                    Defined in src/workouts/workouts.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                WorkoutsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        burnedCalories\n                        \n                    \n                \n            \n            \n                \n                    \n                    burnedCalories(req: any, day: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/calories')\n                \n            \n\n            \n                \n                    Defined in src/workouts/workouts.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    day\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/workouts/workouts.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(req: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')\n                \n            \n\n            \n                \n                    Defined in src/workouts/workouts.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findAllAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllAdmin()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/all')\n                \n            \n\n            \n                \n                    Defined in src/workouts/workouts.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findByDay\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByDay(req: any, day: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/day')\n                \n            \n\n            \n                \n                    Defined in src/workouts/workouts.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    day\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        findSidekick\n                        \n                    \n                \n            \n            \n                \n                    \n                    findSidekick(req: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/sidekick')\n                \n            \n\n            \n                \n                    Defined in src/workouts/workouts.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('remove/:id')\n                \n            \n\n            \n                \n                    Defined in src/workouts/workouts.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: WorkoutsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('update/:id')\n                \n            \n\n            \n                \n                    Defined in src/workouts/workouts.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                WorkoutsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Request, Body, Param, Delete, Put, Get, Query } from '@nestjs/common';\nimport { WorkoutsDto } from './dto/workouts.dto';\nimport { WorkoutsService } from './workouts.service';\n\n@Controller('workouts')\nexport class WorkoutsController {\n\tconstructor(private workoutsService: WorkoutsService) { }\n\n\t@Get(\"/all\")\n\tfindAllAdmin() {\n\t\treturn this.workoutsService.findAllAdmin();\n\t}\n\n\t@Get(\"/day\")\n\tfindByDay(@Request() req: any, @Query('day') day: string) {\n\t\treturn this.workoutsService.findByDay(req.user.email, day);\n\t}\n\n\t@Get(\"/calories\")\n\tburnedCalories(@Request() req: any, @Query('day') day: string) {\n\t\treturn this.workoutsService.burnedCalories(req.user.email, day);\n\t}\n\n\t@Get(\"/sidekick\")\n\tfindSidekick(@Request() req: any) {\n\t\treturn this.workoutsService.findSidekick(req.user.email);\n\t}\n\n\t@Get(\"/:id\")\n\tfind(@Param('id') id: string) {\n\t\treturn this.workoutsService.find(Number(id));\n\t}\n\n\t@Get(\"/\")\n\tfindAll(@Request() req: any) {\n\t\treturn this.workoutsService.findAll(req.user.email);\n\t}\n\n\n\t@Post(\"add\")\n\tadd(@Request() req: any, @Body() dto: WorkoutsDto) {\n\t\treturn this.workoutsService.add(dto, req.user.email);\n\t}\n\n\t@Put(\"update/:id\")\n\tupdate(@Param('id') id: string, @Body() dto: WorkoutsDto) {\n\t\treturn this.workoutsService.update(Number(id), dto);\n\t}\n\n\t@Delete(\"remove/:id\")\n\tremove(@Param('id') id: string) {\n\t\treturn this.workoutsService.remove(Number(id));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WorkoutsDto.html":{"url":"classes/WorkoutsDto.html","title":"class - WorkoutsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WorkoutsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workouts/dto/edit.workouts.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                date\n                            \n                            \n                                id\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workouts/dto/edit.workouts.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/workouts/dto/edit.workouts.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workouts/dto/edit.workouts.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class WorkoutsDto {\n    userId: string;\n    id: number;\n\n    @IsNotEmpty()\n    @IsString()\n    date: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WorkoutsDto-1.html":{"url":"classes/WorkoutsDto-1.html","title":"class - WorkoutsDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WorkoutsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workouts/dto/workouts.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                date\n                            \n                            \n                                    \n                                    \n                                duration\n                            \n                            \n                                    \n                                    \n                                exerciseId\n                            \n                            \n                                id\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workouts/dto/workouts.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workouts/dto/workouts.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        exerciseId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/workouts/dto/workouts.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/workouts/dto/workouts.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/workouts/dto/workouts.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsNotEmpty, IsString } from 'class-validator';\n\nexport class WorkoutsDto {\n    userId: string;\n    id: number;\n\n    @IsNotEmpty()\n    @IsInt()\n    exerciseId: number;\n\n    @IsNotEmpty()\n    @IsInt()\n    duration: number;\n\n    @IsNotEmpty()\n    @IsString()\n    date: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WorkoutsModule.html":{"url":"modules/WorkoutsModule.html","title":"module - WorkoutsModule","body":"\n                   \n\n\n\n\n    Modules\n    WorkoutsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WorkoutsModule\n\n\n\ncluster_WorkoutsModule_providers\n\n\n\n\nWorkoutsService\n\nWorkoutsService\n\n\n\nWorkoutsModule\n\nWorkoutsModule\n\nWorkoutsModule -->\n\nWorkoutsService->WorkoutsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/workouts/workouts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            WorkoutsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            WorkoutsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { WorkoutsService } from './workouts.service';\nimport { WorkoutsController } from './workouts.controller';\n\n@Module({\n  providers: [WorkoutsService],\n  controllers: [WorkoutsController]\n})\nexport class WorkoutsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkoutsService.html":{"url":"injectables/WorkoutsService.html","title":"injectable - WorkoutsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WorkoutsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/workouts/workouts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                add\n                            \n                            \n                                    Public\n                                    Async\n                                burnedCalories\n                            \n                            \n                                    Public\n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findAllAdmin\n                            \n                            \n                                    Public\n                                    Async\n                                findByDay\n                            \n                            \n                                    Public\n                                    Async\n                                findSidekick\n                            \n                            \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_prismaService: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/workouts/workouts.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        add\n                        \n                    \n                \n            \n            \n                \n                    \n                    add(datas: WorkoutsDto, userEmail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/workouts/workouts.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    datas\n                                    \n                                                WorkoutsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        burnedCalories\n                        \n                    \n                \n            \n            \n                \n                    \n                    burnedCalories(email: string, day: string)\n                \n            \n\n\n            \n                \n                    Defined in src/workouts/workouts.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    day\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/workouts/workouts.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/workouts/workouts.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAllAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllAdmin()\n                \n            \n\n\n            \n                \n                    Defined in src/workouts/workouts.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByDay\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByDay(email: string, day: string)\n                \n            \n\n\n            \n                \n                    Defined in src/workouts/workouts.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    day\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findSidekick\n                        \n                    \n                \n            \n            \n                \n                    \n                    findSidekick(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/workouts/workouts.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/workouts/workouts.service.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, datas: WorkoutsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/workouts/workouts.service.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    datas\n                                    \n                                                WorkoutsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { WorkoutsDto } from './dto/workouts.dto';\nimport { ExercisesLibraryService } from '../exercises_library/exercises_library.service';\nimport UserNotFoundException from './exceptions/not-found.exception';\nimport { UserInfoService } from '../user_infos/user_infos.service';\nimport { UserWithoutSidekickException } from 'src/user_infos/exceptions/not-found.exception';\n\n@Injectable()\nexport class WorkoutsService {\n\tconstructor(private _prismaService: PrismaService) { }\n\n\tpublic async find(id: number) {\n\t\tconst workout = await this._prismaService.workouts.findUnique({\n\t\t\tinclude: {\n\t\t\t\texercise: true,\n\t\t\t},\n\t\t\twhere: {\n\t\t\t\tid: id\n\t\t\t}\n\t\t})\n\t\tif (!workout) {\n\t\t\tthrow new NotFoundException('No workouts found with the id \\'' + id.toString() + '\\' found.')\n\t\t} else {\n\t\t\treturn workout\n\t\t}\n\t}\n\n\tpublic async burnedCalories(email: string, day: string) {\n\t\tconst workouts = await this.findByDay(email, day);\n\t\treturn {\n\t\t\tburnedCalories: workouts.reduce((total, workout) => total + workout.burnedCalories, 0)\n\t\t};\n\t}\n\n\tpublic async findByDay(email: string, day: string) {\n\t\tconst user = await this._prismaService.user.findUnique({\n\t\t\twhere: {\n\t\t\t\temail: email\n\t\t\t}\n\t\t});\n\t\tif (!user) {\n\t\t\tthrow new UserNotFoundException(email);\n\t\t}\n\n\t\treturn this._prismaService.workouts.findMany({\n\t\t\tinclude: {\n\t\t\t\texercise: true,\n\t\t\t},\n\t\t\twhere: {\n\t\t\t\tuserId: user.id,\n\t\t\t\tdate: day\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic async findAllAdmin() {\n\t\treturn this._prismaService.workouts.findMany({\n\t\t\tinclude: {\n\t\t\t\texercise: true,\n\t\t\t},\n\t\t})\n\t}\n\n\tpublic async findAll(email: string) {\n\t\tconst user = await this._prismaService.user.findUnique({\n\t\t\twhere: {\n\t\t\t\temail: email\n\t\t\t}\n\t\t});\n\t\tif (!user) {\n\t\t\tthrow new UserNotFoundException(email);\n\t\t}\n\n\t\treturn this._prismaService.workouts.findMany({\n\t\t\tinclude: {\n\t\t\t\texercise: true,\n\t\t\t},\n\t\t\twhere: {\n\t\t\t\tuserId: user.id,\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic async findSidekick(email: string) {\n\t\tconst user = await this._prismaService.user.findUnique({\n\t\t\twhere: {\n\t\t\t\temail: email\n\t\t\t}\n\t\t});\n\t\tif (!user) {\n\t\t\tthrow new UserNotFoundException(email);\n\t\t}\n\n\t\tconst userDatas = await this._prismaService.userData.findUnique({\n\t\t\twhere: {\n\t\t\t  userId: user.id,\n\t\t\t},\n\t\t  });\n\t\t  if (!userDatas.sidekick_id) {\n\t\t\tthrow new UserWithoutSidekickException(user.id);\n\t\t  }\n\n\t\treturn this._prismaService.workouts.findMany({\n\t\t\tinclude: {\n\t\t\t\texercise: true,\n\t\t\t},\n\t\t\twhere: {\n\t\t\t\tuserId: userDatas.sidekick_id,\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic async add(datas: WorkoutsDto, userEmail: string) {\n\t\tconst user = await this._prismaService.user.findUnique({\n\t\t\twhere: {\n\t\t\t\temail: userEmail\n\t\t\t}\n\t\t});\n\t\tif (!user) {\n\t\t\tthrow new UserNotFoundException(userEmail);\n\t\t}\n\t\tconst exercise = await this._prismaService.exercises_Library.findUnique({ where: { id: datas.exerciseId } });\n\t\tconst userInfos = await this._prismaService.userData.findUnique({ where: { userId: user.id } });\n\n\t\tconst burnedCalories = ((exercise.met * 3.5 * userInfos.weight) / 200) * datas.duration;\n\n\t\tdatas.userId = user.id\n\t\treturn this._prismaService.workouts.create({\n\t\t\tdata: {\n\t\t\t\tuserId: datas.userId,\n\t\t\t\tduration: datas.duration,\n\t\t\t\tdate: datas.date,\n\t\t\t\texerciseId: datas.exerciseId,\n\t\t\t\tburnedCalories: burnedCalories\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic async remove(id: number) {\n\t\tawait this._prismaService.workouts.delete({\n\t\t\twhere: {\n\t\t\t\tid: id\n\t\t\t},\n\t\t})\n\t}\n\n\tpublic async update(id: number, datas: WorkoutsDto) {\n\t\treturn this._prismaService.workouts.update({\n\t\t\tdata: datas,\n\t\t\twhere: {\n\t\t\t\tid: id\n\t\t\t}\n\t\t})\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.config.ts\n            \n            injectable\n            AuthConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/auth/dto/auth.dto.ts\n            \n            class\n            AuthDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/aws.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/aws.strategy.ts\n            \n            interface\n            ValidatedUser\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/chat/chat.controller.ts\n            \n            controller\n            ChatController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/chat/chat.gateway.ts\n            \n            class\n            ChatGateway\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/chat/chat.helper.ts\n            \n            class\n            Rooms\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/chat/chat.service.ts\n            \n            injectable\n            ChatService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/chat/chat.service.ts\n            \n            variable\n            pageSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/current_user.decorator.ts\n            \n            variable\n            GetCurrentUserEmail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/events/match.event.ts\n            \n            class\n            MatchEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/guards/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/guards/at.guard.ts\n            \n            injectable\n            AtGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/exercises_library/dto/create-exercises_library.dto.ts\n            \n            class\n            CreateExercisesLibraryDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/exercises_library/dto/update-exercises_library.dto.ts\n            \n            class\n            UpdateExercisesLibraryDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exercises_library/exercises_library.controller.ts\n            \n            controller\n            ExercisesLibraryController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/exercises_library/exercises_library.service.ts\n            \n            injectable\n            ExercisesLibraryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/feedback_user/dto/create-feedback_user.dto.ts\n            \n            class\n            CreateFeedbackUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/feedback_user/dto/update-feedback_user.dto.ts\n            \n            class\n            UpdateFeedbackUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/feedback_user/feedback_user.controller.ts\n            \n            controller\n            FeedbackUserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/feedback_user/feedback_user.service.ts\n            \n            injectable\n            FeedbackUserService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/file/file.controller.ts\n            \n            controller\n            FileController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/file/file.service.ts\n            \n            injectable\n            FileService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/meal_reco/dto/meal_reco.dto.ts\n            \n            class\n            MealRecoDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/meal_reco/meal_reco.controller.ts\n            \n            controller\n            MealRecoController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/meal_reco/meal_reco.service.ts\n            \n            injectable\n            MealRecoService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/nutrition/dto/nutrition.dto.ts\n            \n            class\n            NutritionDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/nutrition/dto/update.dto.ts\n            \n            class\n            UpdateNutritionDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/nutrition/exceptions/not-found.exception.ts\n            \n            class\n            UserNotFoundException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/nutrition/nutrition.controller.ts\n            \n            controller\n            NutritionController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/nutrition/nutrition.service.ts\n            \n            injectable\n            NutritionService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/openff/dto/create-openff.dto.ts\n            \n            class\n            CreateOpenffDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/openff/dto/update-openff.dto.ts\n            \n            class\n            UpdateOpenffDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/openff/openff.controller.ts\n            \n            controller\n            OpenffController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/openff/openff.service.ts\n            \n            injectable\n            OpenffService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/preferences/dto/update-preference.dto.ts\n            \n            class\n            UpdatePreferenceDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/preferences/preferences.controller.ts\n            \n            controller\n            PreferencesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/preferences/preferences.service.ts\n            \n            injectable\n            PreferencesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/reports/reports.controller.ts\n            \n            controller\n            ReportsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/reports/reports.service.ts\n            \n            injectable\n            ReportsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/steps/steps.controller.ts\n            \n            controller\n            StepsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/steps/steps.service.ts\n            \n            injectable\n            StepsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tickets/dto/create-ticket.dto.ts\n            \n            class\n            CreateTicketDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tickets/dto/moderator-answer.dto.ts\n            \n            class\n            ModeratorAnswerDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tickets/dto/user-answer.dto.ts\n            \n            class\n            UserAnswerDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tickets/tickets.controller.ts\n            \n            controller\n            TicketsController\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/tickets/tickets.service.ts\n            \n            injectable\n            TicketsService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/user_admin/dto/user_admin.dto.ts\n            \n            class\n            EditInfosDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/user_admin/dto/user_admin.dto.ts\n            \n            class\n            GetUserAdminDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user_admin/user_admin.controller.ts\n            \n            controller\n            UserAdminController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user_admin/user_admin.service.ts\n            \n            injectable\n            UserAdminService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user_infos/dto/edit.dto.ts\n            \n            class\n            EditInfosDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/user_infos/dto/user.dto.ts\n            \n            class\n            UserInfosDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/user_infos/exceptions/not-found.exception.ts\n            \n            class\n            UserNotFoundException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user_infos/exceptions/not-found.exception.ts\n            \n            class\n            UserWithoutSidekickException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user_infos/user_infos.controller.ts\n            \n            controller\n            UserInfosController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user_infos/user_infos.service.ts\n            \n            injectable\n            UserInfoService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/workouts/dto/edit.workouts.dto.ts\n            \n            class\n            WorkoutsDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/workouts/dto/workouts.dto.ts\n            \n            class\n            WorkoutsDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/workouts/exceptions/not-found.exception.ts\n            \n            class\n            UserNotFoundException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/workouts/workouts.controller.ts\n            \n            controller\n            WorkoutsController\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/workouts/workouts.service.ts\n            \n            injectable\n            WorkoutsService\n            \n                0 %\n                (0/11)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @aws-sdk/client-s3 : ^3.289.0\n        \n            @aws-sdk/client-ses : ^3.433.0\n        \n            @nestjs/common : ^9.3.9\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.3.9\n        \n            @nestjs/event-emitter : ^2.0.2\n        \n            @nestjs/jwt : ^10.0.2\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.3.9\n        \n            @nestjs/platform-socket.io : ^9.3.9\n        \n            @nestjs/throttler : ^4.2.1\n        \n            @nestjs/websockets : ^9.3.9\n        \n            @prisma/client : ^5.2.0\n        \n            amazon-cognito-identity-js : ^5.2.10\n        \n            argon2 : ^0.28.5\n        \n            axios : ^1.4.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            dotenv-cli : ^5.1.0\n        \n            jwks-rsa : ^2.1.4\n        \n            multer-s3 : ^3.0.1\n        \n            openai : ^3.3.0\n        \n            passport : ^0.5.3\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            uuid : ^9.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nlaunch db: docker-compose upgenerate schema: npx prisma generateseed: npx prisma db seeddev: npm run start:dev\nupdate tables when modifying schema.prisma : npx prisma migrate dev\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 Sidekick\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChatModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExercisesLibraryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeedbackUserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MealRecoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NutritionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpenffModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PreferencesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReportsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StepsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TicketsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserAdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserInfosModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WorkoutsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ChatModule\n\n\n\ncluster_ChatModule_exports\n\n\n\ncluster_ChatModule_providers\n\n\n\ncluster_ExercisesLibraryModule\n\n\n\ncluster_ExercisesLibraryModule_providers\n\n\n\ncluster_FeedbackUserModule\n\n\n\ncluster_FeedbackUserModule_providers\n\n\n\ncluster_FileModule\n\n\n\ncluster_FileModule_exports\n\n\n\ncluster_FileModule_providers\n\n\n\ncluster_MealRecoModule\n\n\n\ncluster_MealRecoModule_providers\n\n\n\ncluster_OpenffModule\n\n\n\ncluster_OpenffModule_providers\n\n\n\ncluster_PreferencesModule\n\n\n\ncluster_PreferencesModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_ReportsModule\n\n\n\ncluster_ReportsModule_providers\n\n\n\ncluster_StepsModule\n\n\n\ncluster_StepsModule_providers\n\n\n\ncluster_TicketsModule\n\n\n\ncluster_TicketsModule_providers\n\n\n\ncluster_UserAdminModule\n\n\n\ncluster_UserAdminModule_providers\n\n\n\ncluster_UserInfosModule\n\n\n\ncluster_UserInfosModule_exports\n\n\n\ncluster_UserInfosModule_providers\n\n\n\ncluster_WorkoutsModule\n\n\n\ncluster_WorkoutsModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nChatModule\n\nChatModule\n\nAuthModule -->\n\nChatModule->AuthModule\n\n\n\nAppModule -->\n\nChatModule->AppModule\n\n\n\n\n\nChatGateway \n\nChatGateway \n\nChatGateway  -->\n\nChatModule->ChatGateway \n\n\n\n\n\nExercisesLibraryModule\n\nExercisesLibraryModule\n\nAppModule -->\n\nExercisesLibraryModule->AppModule\n\n\n\n\n\nFeedbackUserModule\n\nFeedbackUserModule\n\nAppModule -->\n\nFeedbackUserModule->AppModule\n\n\n\n\n\nFileModule\n\nFileModule\n\n\n\nUserInfosModule\n\nUserInfosModule\n\nUserInfosModule -->\n\nFileModule->UserInfosModule\n\n\n\nAppModule -->\n\nFileModule->AppModule\n\n\n\n\n\nFileService \n\nFileService \n\nFileService  -->\n\nFileModule->FileService \n\n\n\n\n\nMealRecoModule\n\nMealRecoModule\n\nAppModule -->\n\nMealRecoModule->AppModule\n\n\n\n\n\nNutritionModule\n\nNutritionModule\n\nAppModule -->\n\nNutritionModule->AppModule\n\n\n\n\n\nOpenffModule\n\nOpenffModule\n\nAppModule -->\n\nOpenffModule->AppModule\n\n\n\n\n\nPreferencesModule\n\nPreferencesModule\n\nAppModule -->\n\nPreferencesModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nReportsModule\n\nReportsModule\n\nAppModule -->\n\nReportsModule->AppModule\n\n\n\nAppModule -->\n\nReportsModule->AppModule\n\n\n\n\n\nStepsModule\n\nStepsModule\n\nAppModule -->\n\nStepsModule->AppModule\n\n\n\n\n\nTicketsModule\n\nTicketsModule\n\nAppModule -->\n\nTicketsModule->AppModule\n\n\n\n\n\nUserAdminModule\n\nUserAdminModule\n\nAppModule -->\n\nUserAdminModule->AppModule\n\n\n\nChatModule -->\n\nUserInfosModule->ChatModule\n\n\n\nMealRecoModule -->\n\nUserInfosModule->MealRecoModule\n\n\n\nAppModule -->\n\nUserInfosModule->AppModule\n\n\n\n\n\nUserInfoService \n\nUserInfoService \n\nUserInfoService  -->\n\nUserInfosModule->UserInfoService \n\n\n\n\n\nWorkoutsModule\n\nWorkoutsModule\n\nAppModule -->\n\nWorkoutsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nNutritionService\n\nNutritionService\n\nNutritionModule -->\n\nNutritionService->NutritionModule\n\n\n\nAppModule -->\n\nNutritionService->AppModule\n\n\n\n\n\nAuthConfig\n\nAuthConfig\n\nAuthModule -->\n\nAuthConfig->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nChatService\n\nChatService\n\nChatModule -->\n\nChatService->ChatModule\n\n\n\n\n\nExercisesLibraryService\n\nExercisesLibraryService\n\nExercisesLibraryModule -->\n\nExercisesLibraryService->ExercisesLibraryModule\n\n\n\n\n\nFeedbackUserService\n\nFeedbackUserService\n\nFeedbackUserModule -->\n\nFeedbackUserService->FeedbackUserModule\n\n\n\n\n\nFileService\n\nFileService\n\nFileModule -->\n\nFileService->FileModule\n\n\n\n\n\nMealRecoService\n\nMealRecoService\n\nMealRecoModule -->\n\nMealRecoService->MealRecoModule\n\n\n\n\n\nOpenffService\n\nOpenffService\n\nOpenffModule -->\n\nOpenffService->OpenffModule\n\n\n\n\n\nPreferencesService\n\nPreferencesService\n\nPreferencesModule -->\n\nPreferencesService->PreferencesModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\nStepsModule -->\n\nPrismaService->StepsModule\n\n\n\n\n\nReportsService\n\nReportsService\n\nReportsModule -->\n\nReportsService->ReportsModule\n\n\n\n\n\nStepsService\n\nStepsService\n\nStepsModule -->\n\nStepsService->StepsModule\n\n\n\n\n\nTicketsService\n\nTicketsService\n\nTicketsModule -->\n\nTicketsService->TicketsModule\n\n\n\n\n\nUserAdminService\n\nUserAdminService\n\nUserAdminModule -->\n\nUserAdminService->UserAdminModule\n\n\n\n\n\nUserInfoService\n\nUserInfoService\n\nUserInfosModule -->\n\nUserInfoService->UserInfosModule\n\n\n\n\n\nWorkoutsService\n\nWorkoutsService\n\nWorkoutsModule -->\n\nWorkoutsService->WorkoutsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    20 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    27 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Room   (src/.../chat.helper.ts)\n                        \n                        \n                            SocketUser   (src/.../chat.helper.ts)\n                        \n                        \n                            Tokens   (src/.../tokens.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/chat/chat.helper.ts\n    \n    \n        \n            \n                \n                    \n                    Room\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SocketUser\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/auth/types/tokens.types.ts\n    \n    \n        \n            \n                \n                    \n                    Tokens\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GetCurrentUserEmail   (src/.../current_user.decorator.ts)\n                        \n                        \n                            pageSize   (src/.../chat.service.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/decorators/current_user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetCurrentUserEmail\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: undefined, context: ExecutionContext) => {\n    const request = context.switchToHttp().getRequest();\n    return request?.user?.email;\n  }\n)\n                    \n                \n\n\n        \n    \n\n    src/chat/chat.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata('isPublic', true)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
